{"version":3,"file":"index.js","sources":["../../../src/constants.ts","../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb-snapshot/es/rrweb-snapshot.js","../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/utils.js","../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/types/dist/rrweb-types.js","../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrdom/es/rrdom.js","../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/mutation.js","../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/error-handler.js","../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observer.js","../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/cross-origin-iframe-mirror.js","../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/iframe-manager.js","../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/shadow-dom-manager.js","../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/observers/canvas/canvas-manager.js","../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/stylesheet-manager.js","../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/processed-node-manager.js","../../../../../node_modules/@sentry-internal/rrweb/es/rrweb/packages/rrweb/src/record/index.js","../../../src/types/rrweb.ts","../../../src/util/timestamp.ts","../../../src/coreHandlers/util/addBreadcrumbEvent.ts","../../../src/coreHandlers/util/domUtils.ts","../../../src/coreHandlers/util/onWindowOpen.ts","../../../src/coreHandlers/handleClick.ts","../../../src/util/createBreadcrumb.ts","../../../../../node_modules/@sentry-internal/rrweb-snapshot/es/rrweb-snapshot.js","../../../src/coreHandlers/util/getAttributesToRecord.ts","../../../src/coreHandlers/handleDom.ts","../../../src/coreHandlers/handleKeyboardEvent.ts","../../../src/util/createPerformanceEntries.ts","../../../src/coreHandlers/performanceObserver.ts","../../../src/debug-build.ts","../../../../replay-worker/build/esm/worker.ts","../../../../replay-worker/build/esm/index.js","../../../src/util/logger.ts","../../../src/eventBuffer/error.ts","../../../src/eventBuffer/EventBufferArray.ts","../../../src/eventBuffer/WorkerHandler.ts","../../../src/eventBuffer/EventBufferCompressionWorker.ts","../../../src/eventBuffer/EventBufferProxy.ts","../../../src/eventBuffer/index.ts","../../../src/util/hasSessionStorage.ts","../../../src/session/clearSession.ts","../../../src/util/isSampled.ts","../../../src/session/Session.ts","../../../src/session/saveSession.ts","../../../src/session/createSession.ts","../../../src/session/fetchSession.ts","../../../src/util/isExpired.ts","../../../src/util/isSessionExpired.ts","../../../src/session/shouldRefreshSession.ts","../../../src/session/loadOrCreateSession.ts","../../../src/util/addEvent.ts","../../../src/util/eventUtils.ts","../../../src/coreHandlers/handleAfterSendEvent.ts","../../../src/coreHandlers/handleBeforeSendEvent.ts","../../../src/coreHandlers/handleBreadcrumbs.ts","../../../src/util/isRrwebError.ts","../../../src/util/resetReplayIdOnDynamicSamplingContext.ts","../../../src/coreHandlers/util/addFeedbackBreadcrumb.ts","../../../src/coreHandlers/util/shouldSampleForBufferEvent.ts","../../../src/coreHandlers/handleGlobalEvent.ts","../../../src/util/createPerformanceSpans.ts","../../../src/coreHandlers/handleHistory.ts","../../../src/util/shouldFilterRequest.ts","../../../src/coreHandlers/util/addNetworkBreadcrumb.ts","../../../src/coreHandlers/util/networkUtils.ts","../../../src/coreHandlers/util/fetchUtils.ts","../../../src/coreHandlers/util/xhrUtils.ts","../../../src/coreHandlers/handleNetworkBreadcrumbs.ts","../../../src/util/addGlobalListeners.ts","../../../src/util/addMemoryEntry.ts","../../../src/util/debounce.ts","../../../src/util/getRecordingSamplingOptions.ts","../../../src/util/handleRecordingEmit.ts","../../../src/util/createReplayEnvelope.ts","../../../src/util/prepareRecordingData.ts","../../../src/util/prepareReplayEvent.ts","../../../src/util/sendReplayRequest.ts","../../../src/util/sendReplay.ts","../../../src/util/throttle.ts","../../../src/replay.ts","../../../src/util/getPrivacyOptions.ts","../../../src/util/maskAttribute.ts","../../../src/integration.ts","../../../src/util/getReplay.ts"],"sourcesContent":["import { GLOBAL_OBJ } from '@sentry/core';\n\n// exporting a separate copy of `WINDOW` rather than exporting the one from `@sentry/browser`\n// prevents the browser package from being bundled in the CDN bundle, and avoids a\n// circular dependency between the browser and replay packages should `@sentry/browser` import\n// from `@sentry/replay` in the future\nexport const WINDOW = GLOBAL_OBJ as typeof GLOBAL_OBJ & Window;\n\nexport const REPLAY_SESSION_KEY = 'sentryReplaySession';\nexport const REPLAY_EVENT_NAME = 'replay_event';\nexport const RECORDING_EVENT_NAME = 'replay_recording';\nexport const UNABLE_TO_SEND_REPLAY = 'Unable to send Replay';\n\n// The idle limit for a session after which recording is paused.\nexport const SESSION_IDLE_PAUSE_DURATION = 300_000; // 5 minutes in ms\n\n// The idle limit for a session after which the session expires.\nexport const SESSION_IDLE_EXPIRE_DURATION = 900_000; // 15 minutes in ms\n\n/** Default flush delays */\nexport const DEFAULT_FLUSH_MIN_DELAY = 5_000;\n// XXX: Temp fix for our debounce logic where `maxWait` would never occur if it\n// was the same as `wait`\nexport const DEFAULT_FLUSH_MAX_DELAY = 5_500;\n\n/* How long to wait for error checkouts */\nexport const BUFFER_CHECKOUT_TIME = 60_000;\n\nexport const RETRY_BASE_INTERVAL = 5000;\nexport const RETRY_MAX_COUNT = 3;\n\n/* The max (uncompressed) size in bytes of a network body. Any body larger than this will be truncated. */\nexport const NETWORK_BODY_MAX_SIZE = 150_000;\n\n/* The max size of a single console arg that is captured. Any arg larger than this will be truncated. */\nexport const CONSOLE_ARG_MAX_SIZE = 5_000;\n\n/* Min. time to wait before we consider something a slow click. */\nexport const SLOW_CLICK_THRESHOLD = 3_000;\n/* For scroll actions after a click, we only look for a very short time period to detect programmatic scrolling. */\nexport const SLOW_CLICK_SCROLL_TIMEOUT = 300;\n\n/** When encountering a total segment size exceeding this size, stop the replay (as we cannot properly ingest it). */\nexport const REPLAY_MAX_EVENT_BUFFER_SIZE = 20_000_000; // ~20MB\n\n/** Replays must be min. 5s long before we send them. */\nexport const MIN_REPLAY_DURATION = 4_999;\n/* The max. allowed value that the minReplayDuration can be set to. */\nexport const MIN_REPLAY_DURATION_LIMIT = 15_000;\n\n/** The max. length of a replay. */\nexport const MAX_REPLAY_DURATION = 3_600_000; // 60 minutes in ms;\n\n/** Default attributes to be ignored when `maskAllText` is enabled */\nexport const DEFAULT_IGNORED_ATTRIBUTES = ['title', 'placeholder'];\n","var NodeType;\r\n(function (NodeType) {\r\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\r\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\r\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\r\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\r\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\r\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\r\n})(NodeType || (NodeType = {}));\n\nfunction isElement(n) {\r\n    return n.nodeType === n.ELEMENT_NODE;\r\n}\r\nfunction isShadowRoot(n) {\r\n    const host = n?.host;\r\n    return Boolean(host?.shadowRoot === n);\r\n}\r\nfunction isNativeShadowDom(shadowRoot) {\r\n    return Object.prototype.toString.call(shadowRoot) === '[object ShadowRoot]';\r\n}\r\nfunction fixBrowserCompatibilityIssuesInCSS(cssText) {\r\n    if (cssText.includes(' background-clip: text;') &&\r\n        !cssText.includes(' -webkit-background-clip: text;')) {\r\n        cssText = cssText.replace(/\\sbackground-clip:\\s*text;/g, ' -webkit-background-clip: text; background-clip: text;');\r\n    }\r\n    return cssText;\r\n}\r\nfunction escapeImportStatement(rule) {\r\n    const { cssText } = rule;\r\n    if (cssText.split('\"').length < 3)\r\n        return cssText;\r\n    const statement = ['@import', `url(${JSON.stringify(rule.href)})`];\r\n    if (rule.layerName === '') {\r\n        statement.push(`layer`);\r\n    }\r\n    else if (rule.layerName) {\r\n        statement.push(`layer(${rule.layerName})`);\r\n    }\r\n    if (rule.supportsText) {\r\n        statement.push(`supports(${rule.supportsText})`);\r\n    }\r\n    if (rule.media.length) {\r\n        statement.push(rule.media.mediaText);\r\n    }\r\n    return statement.join(' ') + ';';\r\n}\r\nfunction stringifyStylesheet(s) {\r\n    try {\r\n        const rules = s.rules || s.cssRules;\r\n        return rules\r\n            ? fixBrowserCompatibilityIssuesInCSS(Array.from(rules, stringifyRule).join(''))\r\n            : null;\r\n    }\r\n    catch (error) {\r\n        return null;\r\n    }\r\n}\r\nfunction fixAllCssProperty(rule) {\r\n    let styles = '';\r\n    for (let i = 0; i < rule.style.length; i++) {\r\n        const styleDeclaration = rule.style;\r\n        const attribute = styleDeclaration[i];\r\n        const isImportant = styleDeclaration.getPropertyPriority(attribute);\r\n        styles += `${attribute}:${styleDeclaration.getPropertyValue(attribute)}${isImportant ? ` !important` : ''};`;\r\n    }\r\n    return `${rule.selectorText} { ${styles} }`;\r\n}\r\nfunction stringifyRule(rule) {\r\n    let importStringified;\r\n    if (isCSSImportRule(rule)) {\r\n        try {\r\n            importStringified =\r\n                stringifyStylesheet(rule.styleSheet) ||\r\n                    escapeImportStatement(rule);\r\n        }\r\n        catch (error) {\r\n        }\r\n    }\r\n    else if (isCSSStyleRule(rule)) {\r\n        let cssText = rule.cssText;\r\n        const needsSafariColonFix = rule.selectorText.includes(':');\r\n        const needsAllFix = typeof rule.style['all'] === 'string' && rule.style['all'];\r\n        if (needsAllFix) {\r\n            cssText = fixAllCssProperty(rule);\r\n        }\r\n        if (needsSafariColonFix) {\r\n            cssText = fixSafariColons(cssText);\r\n        }\r\n        if (needsSafariColonFix || needsAllFix) {\r\n            return cssText;\r\n        }\r\n    }\r\n    return importStringified || rule.cssText;\r\n}\r\nfunction fixSafariColons(cssStringified) {\r\n    const regex = /(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;\r\n    return cssStringified.replace(regex, '$1\\\\$2');\r\n}\r\nfunction isCSSImportRule(rule) {\r\n    return 'styleSheet' in rule;\r\n}\r\nfunction isCSSStyleRule(rule) {\r\n    return 'selectorText' in rule;\r\n}\r\nclass Mirror {\r\n    constructor() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n    getId(n) {\r\n        if (!n)\r\n            return -1;\r\n        const id = this.getMeta(n)?.id;\r\n        return id ?? -1;\r\n    }\r\n    getNode(id) {\r\n        return this.idNodeMap.get(id) || null;\r\n    }\r\n    getIds() {\r\n        return Array.from(this.idNodeMap.keys());\r\n    }\r\n    getMeta(n) {\r\n        return this.nodeMetaMap.get(n) || null;\r\n    }\r\n    removeNodeFromMap(n) {\r\n        const id = this.getId(n);\r\n        this.idNodeMap.delete(id);\r\n        if (n.childNodes) {\r\n            n.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\r\n        }\r\n    }\r\n    has(id) {\r\n        return this.idNodeMap.has(id);\r\n    }\r\n    hasNode(node) {\r\n        return this.nodeMetaMap.has(node);\r\n    }\r\n    add(n, meta) {\r\n        const id = meta.id;\r\n        this.idNodeMap.set(id, n);\r\n        this.nodeMetaMap.set(n, meta);\r\n    }\r\n    replace(id, n) {\r\n        const oldNode = this.getNode(id);\r\n        if (oldNode) {\r\n            const meta = this.nodeMetaMap.get(oldNode);\r\n            if (meta)\r\n                this.nodeMetaMap.set(n, meta);\r\n        }\r\n        this.idNodeMap.set(id, n);\r\n    }\r\n    reset() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n}\r\nfunction createMirror() {\r\n    return new Mirror();\r\n}\r\nfunction shouldMaskInput({ maskInputOptions, tagName, type, }) {\r\n    if (tagName === 'OPTION') {\r\n        tagName = 'SELECT';\r\n    }\r\n    return Boolean(maskInputOptions[tagName.toLowerCase()] ||\r\n        (type && maskInputOptions[type]) ||\r\n        type === 'password' ||\r\n        (tagName === 'INPUT' && !type && maskInputOptions['text']));\r\n}\r\nfunction maskInputValue({ isMasked, element, value, maskInputFn, }) {\r\n    let text = value || '';\r\n    if (!isMasked) {\r\n        return text;\r\n    }\r\n    if (maskInputFn) {\r\n        text = maskInputFn(text, element);\r\n    }\r\n    return '*'.repeat(text.length);\r\n}\r\nfunction toLowerCase(str) {\r\n    return str.toLowerCase();\r\n}\r\nfunction toUpperCase(str) {\r\n    return str.toUpperCase();\r\n}\r\nconst ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\r\nfunction is2DCanvasBlank(canvas) {\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx)\r\n        return true;\r\n    const chunkSize = 50;\r\n    for (let x = 0; x < canvas.width; x += chunkSize) {\r\n        for (let y = 0; y < canvas.height; y += chunkSize) {\r\n            const getImageData = ctx.getImageData;\r\n            const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData\r\n                ? getImageData[ORIGINAL_ATTRIBUTE_NAME]\r\n                : getImageData;\r\n            const pixelBuffer = new Uint32Array(originalGetImageData.call(ctx, x, y, Math.min(chunkSize, canvas.width - x), Math.min(chunkSize, canvas.height - y)).data.buffer);\r\n            if (pixelBuffer.some((pixel) => pixel !== 0))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isNodeMetaEqual(a, b) {\r\n    if (!a || !b || a.type !== b.type)\r\n        return false;\r\n    if (a.type === NodeType.Document)\r\n        return a.compatMode === b.compatMode;\r\n    else if (a.type === NodeType.DocumentType)\r\n        return (a.name === b.name &&\r\n            a.publicId === b.publicId &&\r\n            a.systemId === b.systemId);\r\n    else if (a.type === NodeType.Comment ||\r\n        a.type === NodeType.Text ||\r\n        a.type === NodeType.CDATA)\r\n        return a.textContent === b.textContent;\r\n    else if (a.type === NodeType.Element)\r\n        return (a.tagName === b.tagName &&\r\n            JSON.stringify(a.attributes) ===\r\n                JSON.stringify(b.attributes) &&\r\n            a.isSVG === b.isSVG &&\r\n            a.needBlock === b.needBlock);\r\n    return false;\r\n}\r\nfunction getInputType(element) {\r\n    const type = element.type;\r\n    return element.hasAttribute('data-rr-is-password')\r\n        ? 'password'\r\n        : type\r\n            ?\r\n                toLowerCase(type)\r\n            : null;\r\n}\r\nfunction getInputValue(el, tagName, type) {\r\n    if (tagName === 'INPUT' && (type === 'radio' || type === 'checkbox')) {\r\n        return el.getAttribute('value') || '';\r\n    }\r\n    return el.value;\r\n}\r\nfunction extractFileExtension(path, baseURL) {\r\n    let url;\r\n    try {\r\n        url = new URL(path, baseURL ?? window.location.href);\r\n    }\r\n    catch (err) {\r\n        return null;\r\n    }\r\n    const regex = /\\.([0-9a-z]+)(?:$)/i;\r\n    const match = url.pathname.match(regex);\r\n    return match?.[1] ?? null;\r\n}\r\nconst cachedImplementations = {};\r\nfunction getImplementation(name) {\r\n    const cached = cachedImplementations[name];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    const document = window.document;\r\n    let impl = window[name];\r\n    if (document && typeof document.createElement === 'function') {\r\n        try {\r\n            const sandbox = document.createElement('iframe');\r\n            sandbox.hidden = true;\r\n            document.head.appendChild(sandbox);\r\n            const contentWindow = sandbox.contentWindow;\r\n            if (contentWindow && contentWindow[name]) {\r\n                impl =\r\n                    contentWindow[name];\r\n            }\r\n            document.head.removeChild(sandbox);\r\n        }\r\n        catch (e) {\r\n        }\r\n    }\r\n    return (cachedImplementations[name] = impl.bind(window));\r\n}\r\nfunction setTimeout(...rest) {\r\n    return getImplementation('setTimeout')(...rest);\r\n}\r\nfunction clearTimeout(...rest) {\r\n    return getImplementation('clearTimeout')(...rest);\r\n}\r\nfunction getIframeContentDocument(iframe) {\r\n    try {\r\n        return iframe.contentDocument;\r\n    }\r\n    catch (e) {\r\n    }\r\n}\n\nlet _id = 1;\r\nconst tagNameRegex = new RegExp('[^a-z0-9-_:]');\r\nconst IGNORED_NODE = -2;\r\nfunction genId() {\r\n    return _id++;\r\n}\r\nfunction getValidTagName(element) {\r\n    if (element instanceof HTMLFormElement) {\r\n        return 'form';\r\n    }\r\n    const processedTagName = toLowerCase(element.tagName);\r\n    if (tagNameRegex.test(processedTagName)) {\r\n        return 'div';\r\n    }\r\n    return processedTagName;\r\n}\r\nfunction extractOrigin(url) {\r\n    let origin = '';\r\n    if (url.indexOf('//') > -1) {\r\n        origin = url.split('/').slice(0, 3).join('/');\r\n    }\r\n    else {\r\n        origin = url.split('/')[0];\r\n    }\r\n    origin = origin.split('?')[0];\r\n    return origin;\r\n}\r\nlet canvasService;\r\nlet canvasCtx;\r\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\r\nconst URL_PROTOCOL_MATCH = /^(?:[a-z+]+:)?\\/\\//i;\r\nconst URL_WWW_MATCH = /^www\\..*/i;\r\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\r\nfunction absoluteToStylesheet(cssText, href) {\r\n    return (cssText || '').replace(URL_IN_CSS_REF, (origin, quote1, path1, quote2, path2, path3) => {\r\n        const filePath = path1 || path2 || path3;\r\n        const maybeQuote = quote1 || quote2 || '';\r\n        if (!filePath) {\r\n            return origin;\r\n        }\r\n        if (URL_PROTOCOL_MATCH.test(filePath) || URL_WWW_MATCH.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (DATA_URI.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (filePath[0] === '/') {\r\n            return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\r\n        }\r\n        const stack = href.split('/');\r\n        const parts = filePath.split('/');\r\n        stack.pop();\r\n        for (const part of parts) {\r\n            if (part === '.') {\r\n                continue;\r\n            }\r\n            else if (part === '..') {\r\n                stack.pop();\r\n            }\r\n            else {\r\n                stack.push(part);\r\n            }\r\n        }\r\n        return `url(${maybeQuote}${stack.join('/')}${maybeQuote})`;\r\n    });\r\n}\r\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\r\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\r\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\r\n    if (attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    let pos = 0;\r\n    function collectCharacters(regEx) {\r\n        let chars;\r\n        const match = regEx.exec(attributeValue.substring(pos));\r\n        if (match) {\r\n            chars = match[0];\r\n            pos += chars.length;\r\n            return chars;\r\n        }\r\n        return '';\r\n    }\r\n    const output = [];\r\n    while (true) {\r\n        collectCharacters(SRCSET_COMMAS_OR_SPACES);\r\n        if (pos >= attributeValue.length) {\r\n            break;\r\n        }\r\n        let url = collectCharacters(SRCSET_NOT_SPACES);\r\n        if (url.slice(-1) === ',') {\r\n            url = absoluteToDoc(doc, url.substring(0, url.length - 1));\r\n            output.push(url);\r\n        }\r\n        else {\r\n            let descriptorsStr = '';\r\n            url = absoluteToDoc(doc, url);\r\n            let inParens = false;\r\n            while (true) {\r\n                const c = attributeValue.charAt(pos);\r\n                if (c === '') {\r\n                    output.push((url + descriptorsStr).trim());\r\n                    break;\r\n                }\r\n                else if (!inParens) {\r\n                    if (c === ',') {\r\n                        pos += 1;\r\n                        output.push((url + descriptorsStr).trim());\r\n                        break;\r\n                    }\r\n                    else if (c === '(') {\r\n                        inParens = true;\r\n                    }\r\n                }\r\n                else {\r\n                    if (c === ')') {\r\n                        inParens = false;\r\n                    }\r\n                }\r\n                descriptorsStr += c;\r\n                pos += 1;\r\n            }\r\n        }\r\n    }\r\n    return output.join(', ');\r\n}\r\nconst cachedDocument = new WeakMap();\r\nfunction absoluteToDoc(doc, attributeValue) {\r\n    if (!attributeValue || attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    return getHref(doc, attributeValue);\r\n}\r\nfunction isSVGElement(el) {\r\n    return Boolean(el.tagName === 'svg' || el.ownerSVGElement);\r\n}\r\nfunction getHref(doc, customHref) {\r\n    let a = cachedDocument.get(doc);\r\n    if (!a) {\r\n        a = doc.createElement('a');\r\n        cachedDocument.set(doc, a);\r\n    }\r\n    if (!customHref) {\r\n        customHref = '';\r\n    }\r\n    else if (customHref.startsWith('blob:') || customHref.startsWith('data:')) {\r\n        return customHref;\r\n    }\r\n    a.setAttribute('href', customHref);\r\n    return a.href;\r\n}\r\nfunction transformAttribute(doc, tagName, name, value, element, maskAttributeFn) {\r\n    if (!value) {\r\n        return value;\r\n    }\r\n    if (name === 'src' ||\r\n        (name === 'href' && !(tagName === 'use' && value[0] === '#'))) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'xlink:href' && value[0] !== '#') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'background' &&\r\n        (tagName === 'table' || tagName === 'td' || tagName === 'th')) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'srcset') {\r\n        return getAbsoluteSrcsetString(doc, value);\r\n    }\r\n    else if (name === 'style') {\r\n        return absoluteToStylesheet(value, getHref(doc));\r\n    }\r\n    else if (tagName === 'object' && name === 'data') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    if (typeof maskAttributeFn === 'function') {\r\n        return maskAttributeFn(name, value, element);\r\n    }\r\n    return value;\r\n}\r\nfunction ignoreAttribute(tagName, name, _value) {\r\n    return (tagName === 'video' || tagName === 'audio') && name === 'autoplay';\r\n}\r\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\r\n    try {\r\n        if (unblockSelector && element.matches(unblockSelector)) {\r\n            return false;\r\n        }\r\n        if (typeof blockClass === 'string') {\r\n            if (element.classList.contains(blockClass)) {\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            for (let eIndex = element.classList.length; eIndex--;) {\r\n                const className = element.classList[eIndex];\r\n                if (blockClass.test(className)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        if (blockSelector) {\r\n            return element.matches(blockSelector);\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n    return false;\r\n}\r\nfunction elementClassMatchesRegex(el, regex) {\r\n    for (let eIndex = el.classList.length; eIndex--;) {\r\n        const className = el.classList[eIndex];\r\n        if (regex.test(className)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\r\n    if (!node)\r\n        return -1;\r\n    if (node.nodeType !== node.ELEMENT_NODE)\r\n        return -1;\r\n    if (distance > limit)\r\n        return -1;\r\n    if (matchPredicate(node))\r\n        return distance;\r\n    return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\r\n}\r\nfunction createMatchPredicate(className, selector) {\r\n    return (node) => {\r\n        const el = node;\r\n        if (el === null)\r\n            return false;\r\n        try {\r\n            if (className) {\r\n                if (typeof className === 'string') {\r\n                    if (el.matches(`.${className}`))\r\n                        return true;\r\n                }\r\n                else if (elementClassMatchesRegex(el, className)) {\r\n                    return true;\r\n                }\r\n            }\r\n            if (selector && el.matches(selector))\r\n                return true;\r\n            return false;\r\n        }\r\n        catch {\r\n            return false;\r\n        }\r\n    };\r\n}\r\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText) {\r\n    try {\r\n        const el = node.nodeType === node.ELEMENT_NODE\r\n            ? node\r\n            : node.parentElement;\r\n        if (el === null)\r\n            return false;\r\n        if (el.tagName === 'INPUT') {\r\n            const autocomplete = el.getAttribute('autocomplete');\r\n            const disallowedAutocompleteValues = [\r\n                'current-password',\r\n                'new-password',\r\n                'cc-number',\r\n                'cc-exp',\r\n                'cc-exp-month',\r\n                'cc-exp-year',\r\n                'cc-csc',\r\n            ];\r\n            if (disallowedAutocompleteValues.includes(autocomplete)) {\r\n                return true;\r\n            }\r\n        }\r\n        let maskDistance = -1;\r\n        let unmaskDistance = -1;\r\n        if (maskAllText) {\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector));\r\n            if (unmaskDistance < 0) {\r\n                return true;\r\n            }\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector), unmaskDistance >= 0 ? unmaskDistance : Infinity);\r\n        }\r\n        else {\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector));\r\n            if (maskDistance < 0) {\r\n                return false;\r\n            }\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector), maskDistance >= 0 ? maskDistance : Infinity);\r\n        }\r\n        return maskDistance >= 0\r\n            ? unmaskDistance >= 0\r\n                ? maskDistance <= unmaskDistance\r\n                : true\r\n            : unmaskDistance >= 0\r\n                ? false\r\n                : !!maskAllText;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return !!maskAllText;\r\n}\r\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\r\n    const win = iframeEl.contentWindow;\r\n    if (!win) {\r\n        return;\r\n    }\r\n    let fired = false;\r\n    let readyState;\r\n    try {\r\n        readyState = win.document.readyState;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (readyState !== 'complete') {\r\n        const timer = setTimeout(() => {\r\n            if (!fired) {\r\n                listener();\r\n                fired = true;\r\n            }\r\n        }, iframeLoadTimeout);\r\n        iframeEl.addEventListener('load', () => {\r\n            clearTimeout(timer);\r\n            fired = true;\r\n            listener();\r\n        });\r\n        return;\r\n    }\r\n    const blankUrl = 'about:blank';\r\n    if (win.location.href !== blankUrl ||\r\n        iframeEl.src === blankUrl ||\r\n        iframeEl.src === '') {\r\n        setTimeout(listener, 0);\r\n        return iframeEl.addEventListener('load', listener);\r\n    }\r\n    iframeEl.addEventListener('load', listener);\r\n}\r\nfunction onceStylesheetLoaded(link, listener, styleSheetLoadTimeout) {\r\n    let fired = false;\r\n    let styleSheetLoaded;\r\n    try {\r\n        styleSheetLoaded = link.sheet;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (styleSheetLoaded)\r\n        return;\r\n    const timer = setTimeout(() => {\r\n        if (!fired) {\r\n            listener();\r\n            fired = true;\r\n        }\r\n    }, styleSheetLoadTimeout);\r\n    link.addEventListener('load', () => {\r\n        clearTimeout(timer);\r\n        fired = true;\r\n        listener();\r\n    });\r\n}\r\nfunction serializeNode(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskAttributeFn, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, inlineStylesheet, maskInputOptions = {}, maskTextFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, } = options;\r\n    const rootId = getRootId(doc, mirror);\r\n    switch (n.nodeType) {\r\n        case n.DOCUMENT_NODE:\r\n            if (n.compatMode !== 'CSS1Compat') {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                    compatMode: n.compatMode,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                };\r\n            }\r\n        case n.DOCUMENT_TYPE_NODE:\r\n            return {\r\n                type: NodeType.DocumentType,\r\n                name: n.name,\r\n                publicId: n.publicId,\r\n                systemId: n.systemId,\r\n                rootId,\r\n            };\r\n        case n.ELEMENT_NODE:\r\n            return serializeElementNode(n, {\r\n                doc,\r\n                blockClass,\r\n                blockSelector,\r\n                unblockSelector,\r\n                inlineStylesheet,\r\n                maskAttributeFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                dataURLOptions,\r\n                inlineImages,\r\n                recordCanvas,\r\n                keepIframeSrcFn,\r\n                newlyAddedElement,\r\n                rootId,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n            });\r\n        case n.TEXT_NODE:\r\n            return serializeTextNode(n, {\r\n                doc,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                maskTextFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                rootId,\r\n            });\r\n        case n.CDATA_SECTION_NODE:\r\n            return {\r\n                type: NodeType.CDATA,\r\n                textContent: '',\r\n                rootId,\r\n            };\r\n        case n.COMMENT_NODE:\r\n            return {\r\n                type: NodeType.Comment,\r\n                textContent: n.textContent || '',\r\n                rootId,\r\n            };\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nfunction getRootId(doc, mirror) {\r\n    if (!mirror.hasNode(doc))\r\n        return undefined;\r\n    const docId = mirror.getId(doc);\r\n    return docId === 1 ? undefined : docId;\r\n}\r\nfunction serializeTextNode(n, options) {\r\n    const { maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, maskTextFn, maskInputOptions, maskInputFn, rootId, } = options;\r\n    const parentTagName = n.parentNode && n.parentNode.tagName;\r\n    let textContent = n.textContent;\r\n    const isStyle = parentTagName === 'STYLE' ? true : undefined;\r\n    const isScript = parentTagName === 'SCRIPT' ? true : undefined;\r\n    const isTextarea = parentTagName === 'TEXTAREA' ? true : undefined;\r\n    if (isStyle && textContent) {\r\n        try {\r\n            if (n.nextSibling || n.previousSibling) {\r\n            }\r\n            else if (n.parentNode.sheet?.cssRules) {\r\n                textContent = stringifyStylesheet(n.parentNode.sheet);\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.warn(`Cannot get CSS styles from text's parentNode. Error: ${err}`, n);\r\n        }\r\n        textContent = absoluteToStylesheet(textContent, getHref(options.doc));\r\n    }\r\n    if (isScript) {\r\n        textContent = 'SCRIPT_PLACEHOLDER';\r\n    }\r\n    const forceMask = needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText);\r\n    if (!isStyle && !isScript && !isTextarea && textContent && forceMask) {\r\n        textContent = maskTextFn\r\n            ? maskTextFn(textContent, n.parentElement)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (isTextarea && textContent && (maskInputOptions.textarea || forceMask)) {\r\n        textContent = maskInputFn\r\n            ? maskInputFn(textContent, n.parentNode)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (parentTagName === 'OPTION' && textContent) {\r\n        const isInputMasked = shouldMaskInput({\r\n            type: null,\r\n            tagName: parentTagName,\r\n            maskInputOptions,\r\n        });\r\n        textContent = maskInputValue({\r\n            isMasked: needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked),\r\n            element: n,\r\n            value: textContent,\r\n            maskInputFn,\r\n        });\r\n    }\r\n    return {\r\n        type: NodeType.Text,\r\n        textContent: textContent || '',\r\n        isStyle,\r\n        rootId,\r\n    };\r\n}\r\nfunction serializeElementNode(n, options) {\r\n    const { doc, blockClass, blockSelector, unblockSelector, inlineStylesheet, maskInputOptions = {}, maskAttributeFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, rootId, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, } = options;\r\n    const needBlock = _isBlockedElement(n, blockClass, blockSelector, unblockSelector);\r\n    const tagName = getValidTagName(n);\r\n    let attributes = {};\r\n    const len = n.attributes.length;\r\n    for (let i = 0; i < len; i++) {\r\n        const attr = n.attributes[i];\r\n        if (attr.name && !ignoreAttribute(tagName, attr.name, attr.value)) {\r\n            attributes[attr.name] = transformAttribute(doc, tagName, toLowerCase(attr.name), attr.value, n, maskAttributeFn);\r\n        }\r\n    }\r\n    if (tagName === 'link' && inlineStylesheet) {\r\n        const stylesheet = Array.from(doc.styleSheets).find((s) => {\r\n            return s.href === n.href;\r\n        });\r\n        let cssText = null;\r\n        if (stylesheet) {\r\n            cssText = stringifyStylesheet(stylesheet);\r\n        }\r\n        if (cssText) {\r\n            attributes.rel = null;\r\n            attributes.href = null;\r\n            attributes.crossorigin = null;\r\n            attributes._cssText = absoluteToStylesheet(cssText, stylesheet.href);\r\n        }\r\n    }\r\n    if (tagName === 'style' &&\r\n        n.sheet &&\r\n        !(n.innerText || n.textContent || '').trim().length) {\r\n        const cssText = stringifyStylesheet(n.sheet);\r\n        if (cssText) {\r\n            attributes._cssText = absoluteToStylesheet(cssText, getHref(doc));\r\n        }\r\n    }\r\n    if (tagName === 'input' ||\r\n        tagName === 'textarea' ||\r\n        tagName === 'select' ||\r\n        tagName === 'option') {\r\n        const el = n;\r\n        const type = getInputType(el);\r\n        const value = getInputValue(el, toUpperCase(tagName), type);\r\n        const checked = el.checked;\r\n        if (type !== 'submit' && type !== 'button' && value) {\r\n            const forceMask = needMaskingText(el, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, shouldMaskInput({\r\n                type,\r\n                tagName: toUpperCase(tagName),\r\n                maskInputOptions,\r\n            }));\r\n            attributes.value = maskInputValue({\r\n                isMasked: forceMask,\r\n                element: el,\r\n                value,\r\n                maskInputFn,\r\n            });\r\n        }\r\n        if (checked) {\r\n            attributes.checked = checked;\r\n        }\r\n    }\r\n    if (tagName === 'option') {\r\n        if (n.selected && !maskInputOptions['select']) {\r\n            attributes.selected = true;\r\n        }\r\n        else {\r\n            delete attributes.selected;\r\n        }\r\n    }\r\n    if (tagName === 'canvas' && recordCanvas) {\r\n        if (n.__context === '2d') {\r\n            if (!is2DCanvasBlank(n)) {\r\n                attributes.rr_dataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n        }\r\n        else if (!('__context' in n)) {\r\n            const canvasDataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            const blankCanvas = doc.createElement('canvas');\r\n            blankCanvas.width = n.width;\r\n            blankCanvas.height = n.height;\r\n            const blankCanvasDataURL = blankCanvas.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            if (canvasDataURL !== blankCanvasDataURL) {\r\n                attributes.rr_dataURL = canvasDataURL;\r\n            }\r\n        }\r\n    }\r\n    if (tagName === 'img' && inlineImages) {\r\n        if (!canvasService) {\r\n            canvasService = doc.createElement('canvas');\r\n            canvasCtx = canvasService.getContext('2d');\r\n        }\r\n        const image = n;\r\n        const imageSrc = image.currentSrc || image.getAttribute('src') || '<unknown-src>';\r\n        const priorCrossOrigin = image.crossOrigin;\r\n        const recordInlineImage = () => {\r\n            image.removeEventListener('load', recordInlineImage);\r\n            try {\r\n                canvasService.width = image.naturalWidth;\r\n                canvasService.height = image.naturalHeight;\r\n                canvasCtx.drawImage(image, 0, 0);\r\n                attributes.rr_dataURL = canvasService.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n            catch (err) {\r\n                if (image.crossOrigin !== 'anonymous') {\r\n                    image.crossOrigin = 'anonymous';\r\n                    if (image.complete && image.naturalWidth !== 0)\r\n                        recordInlineImage();\r\n                    else\r\n                        image.addEventListener('load', recordInlineImage);\r\n                    return;\r\n                }\r\n                else {\r\n                    console.warn(`Cannot inline img src=${imageSrc}! Error: ${err}`);\r\n                }\r\n            }\r\n            if (image.crossOrigin === 'anonymous') {\r\n                priorCrossOrigin\r\n                    ? (attributes.crossOrigin = priorCrossOrigin)\r\n                    : image.removeAttribute('crossorigin');\r\n            }\r\n        };\r\n        if (image.complete && image.naturalWidth !== 0)\r\n            recordInlineImage();\r\n        else\r\n            image.addEventListener('load', recordInlineImage);\r\n    }\r\n    if (tagName === 'audio' || tagName === 'video') {\r\n        attributes.rr_mediaState = n.paused\r\n            ? 'paused'\r\n            : 'played';\r\n        attributes.rr_mediaCurrentTime = n.currentTime;\r\n    }\r\n    if (!newlyAddedElement) {\r\n        if (n.scrollLeft) {\r\n            attributes.rr_scrollLeft = n.scrollLeft;\r\n        }\r\n        if (n.scrollTop) {\r\n            attributes.rr_scrollTop = n.scrollTop;\r\n        }\r\n    }\r\n    if (needBlock) {\r\n        const { width, height } = n.getBoundingClientRect();\r\n        attributes = {\r\n            class: attributes.class,\r\n            rr_width: `${width}px`,\r\n            rr_height: `${height}px`,\r\n        };\r\n    }\r\n    if (tagName === 'iframe' && !keepIframeSrcFn(attributes.src)) {\r\n        if (!needBlock && !getIframeContentDocument(n)) {\r\n            attributes.rr_src = attributes.src;\r\n        }\r\n        delete attributes.src;\r\n    }\r\n    let isCustomElement;\r\n    try {\r\n        if (customElements.get(tagName))\r\n            isCustomElement = true;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return {\r\n        type: NodeType.Element,\r\n        tagName,\r\n        attributes,\r\n        childNodes: [],\r\n        isSVG: isSVGElement(n) || undefined,\r\n        needBlock,\r\n        rootId,\r\n        isCustom: isCustomElement,\r\n    };\r\n}\r\nfunction lowerIfExists(maybeAttr) {\r\n    if (maybeAttr === undefined || maybeAttr === null) {\r\n        return '';\r\n    }\r\n    else {\r\n        return maybeAttr.toLowerCase();\r\n    }\r\n}\r\nfunction slimDOMExcluded(sn, slimDOMOptions) {\r\n    if (slimDOMOptions.comment && sn.type === NodeType.Comment) {\r\n        return true;\r\n    }\r\n    else if (sn.type === NodeType.Element) {\r\n        if (slimDOMOptions.script &&\r\n            (sn.tagName === 'script' ||\r\n                (sn.tagName === 'link' &&\r\n                    (sn.attributes.rel === 'preload' ||\r\n                        sn.attributes.rel === 'modulepreload')) ||\r\n                (sn.tagName === 'link' &&\r\n                    sn.attributes.rel === 'prefetch' &&\r\n                    typeof sn.attributes.href === 'string' &&\r\n                    extractFileExtension(sn.attributes.href) === 'js'))) {\r\n            return true;\r\n        }\r\n        else if (slimDOMOptions.headFavicon &&\r\n            ((sn.tagName === 'link' && sn.attributes.rel === 'shortcut icon') ||\r\n                (sn.tagName === 'meta' &&\r\n                    (lowerIfExists(sn.attributes.name).match(/^msapplication-tile(image|color)$/) ||\r\n                        lowerIfExists(sn.attributes.name) === 'application-name' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'apple-touch-icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'shortcut icon')))) {\r\n            return true;\r\n        }\r\n        else if (sn.tagName === 'meta') {\r\n            if (slimDOMOptions.headMetaDescKeywords &&\r\n                lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaSocial &&\r\n                (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) ||\r\n                    lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) ||\r\n                    lowerIfExists(sn.attributes.name) === 'pinterest')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaRobots &&\r\n                (lowerIfExists(sn.attributes.name) === 'robots' ||\r\n                    lowerIfExists(sn.attributes.name) === 'googlebot' ||\r\n                    lowerIfExists(sn.attributes.name) === 'bingbot')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaHttpEquiv &&\r\n                sn.attributes['http-equiv'] !== undefined) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaAuthorship &&\r\n                (lowerIfExists(sn.attributes.name) === 'author' ||\r\n                    lowerIfExists(sn.attributes.name) === 'generator' ||\r\n                    lowerIfExists(sn.attributes.name) === 'framework' ||\r\n                    lowerIfExists(sn.attributes.name) === 'publisher' ||\r\n                    lowerIfExists(sn.attributes.name) === 'progid' ||\r\n                    lowerIfExists(sn.attributes.property).match(/^article:/) ||\r\n                    lowerIfExists(sn.attributes.property).match(/^product:/))) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaVerification &&\r\n                (lowerIfExists(sn.attributes.name) === 'google-site-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'yandex-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'csrf-token' ||\r\n                    lowerIfExists(sn.attributes.name) === 'p:domain_verify' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verify-v1' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'shopify-checkout-api-token')) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction serializeNodeWithId(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, skipChild = false, inlineStylesheet = true, maskInputOptions = {}, maskAttributeFn, maskTextFn, maskInputFn, slimDOMOptions, dataURLOptions = {}, inlineImages = false, recordCanvas = false, onSerialize, onIframeLoad, iframeLoadTimeout = 5000, onStylesheetLoad, stylesheetLoadTimeout = 5000, keepIframeSrcFn = () => false, newlyAddedElement = false, } = options;\r\n    let { preserveWhiteSpace = true } = options;\r\n    const _serializedNode = serializeNode(n, {\r\n        doc,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        maskAllText,\r\n        unblockSelector,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement,\r\n    });\r\n    if (!_serializedNode) {\r\n        console.warn(n, 'not serialized');\r\n        return null;\r\n    }\r\n    let id;\r\n    if (mirror.hasNode(n)) {\r\n        id = mirror.getId(n);\r\n    }\r\n    else if (slimDOMExcluded(_serializedNode, slimDOMOptions) ||\r\n        (!preserveWhiteSpace &&\r\n            _serializedNode.type === NodeType.Text &&\r\n            !_serializedNode.isStyle &&\r\n            !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, '').length)) {\r\n        id = IGNORED_NODE;\r\n    }\r\n    else {\r\n        id = genId();\r\n    }\r\n    const serializedNode = Object.assign(_serializedNode, { id });\r\n    mirror.add(n, serializedNode);\r\n    if (id === IGNORED_NODE) {\r\n        return null;\r\n    }\r\n    if (onSerialize) {\r\n        onSerialize(n);\r\n    }\r\n    let recordChild = !skipChild;\r\n    if (serializedNode.type === NodeType.Element) {\r\n        recordChild = recordChild && !serializedNode.needBlock;\r\n        delete serializedNode.needBlock;\r\n        const shadowRoot = n.shadowRoot;\r\n        if (shadowRoot && isNativeShadowDom(shadowRoot))\r\n            serializedNode.isShadowHost = true;\r\n    }\r\n    if ((serializedNode.type === NodeType.Document ||\r\n        serializedNode.type === NodeType.Element) &&\r\n        recordChild) {\r\n        if (slimDOMOptions.headWhitespace &&\r\n            serializedNode.type === NodeType.Element &&\r\n            serializedNode.tagName === 'head') {\r\n            preserveWhiteSpace = false;\r\n        }\r\n        const bypassOptions = {\r\n            doc,\r\n            mirror,\r\n            blockClass,\r\n            blockSelector,\r\n            maskAllText,\r\n            unblockSelector,\r\n            maskTextClass,\r\n            unmaskTextClass,\r\n            maskTextSelector,\r\n            unmaskTextSelector,\r\n            skipChild,\r\n            inlineStylesheet,\r\n            maskInputOptions,\r\n            maskAttributeFn,\r\n            maskTextFn,\r\n            maskInputFn,\r\n            slimDOMOptions,\r\n            dataURLOptions,\r\n            inlineImages,\r\n            recordCanvas,\r\n            preserveWhiteSpace,\r\n            onSerialize,\r\n            onIframeLoad,\r\n            iframeLoadTimeout,\r\n            onStylesheetLoad,\r\n            stylesheetLoadTimeout,\r\n            keepIframeSrcFn,\r\n        };\r\n        for (const childN of Array.from(n.childNodes)) {\r\n            const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n            if (serializedChildNode) {\r\n                serializedNode.childNodes.push(serializedChildNode);\r\n            }\r\n        }\r\n        if (isElement(n) && n.shadowRoot) {\r\n            for (const childN of Array.from(n.shadowRoot.childNodes)) {\r\n                const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n                if (serializedChildNode) {\r\n                    isNativeShadowDom(n.shadowRoot) &&\r\n                        (serializedChildNode.isShadow = true);\r\n                    serializedNode.childNodes.push(serializedChildNode);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (n.parentNode &&\r\n        isShadowRoot(n.parentNode) &&\r\n        isNativeShadowDom(n.parentNode)) {\r\n        serializedNode.isShadow = true;\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'iframe') {\r\n        onceIframeLoaded(n, () => {\r\n            const iframeDoc = getIframeContentDocument(n);\r\n            if (iframeDoc && onIframeLoad) {\r\n                const serializedIframeNode = serializeNodeWithId(iframeDoc, {\r\n                    doc: iframeDoc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedIframeNode) {\r\n                    onIframeLoad(n, serializedIframeNode);\r\n                }\r\n            }\r\n        }, iframeLoadTimeout);\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'link' &&\r\n        typeof serializedNode.attributes.rel === 'string' &&\r\n        (serializedNode.attributes.rel === 'stylesheet' ||\r\n            (serializedNode.attributes.rel === 'preload' &&\r\n                typeof serializedNode.attributes.href === 'string' &&\r\n                extractFileExtension(serializedNode.attributes.href) === 'css'))) {\r\n        onceStylesheetLoaded(n, () => {\r\n            if (onStylesheetLoad) {\r\n                const serializedLinkNode = serializeNodeWithId(n, {\r\n                    doc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedLinkNode) {\r\n                    onStylesheetLoad(n, serializedLinkNode);\r\n                }\r\n            }\r\n        }, stylesheetLoadTimeout);\r\n    }\r\n    return serializedNode;\r\n}\r\nfunction snapshot(n, options) {\r\n    const { mirror = new Mirror(), blockClass = 'rr-block', blockSelector = null, unblockSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, inlineImages = false, recordCanvas = false, maskAllInputs = false, maskAttributeFn, maskTextFn, maskInputFn, slimDOM = false, dataURLOptions, preserveWhiteSpace, onSerialize, onIframeLoad, iframeLoadTimeout, onStylesheetLoad, stylesheetLoadTimeout, keepIframeSrcFn = () => false, } = options || {};\r\n    const maskInputOptions = maskAllInputs === true\r\n        ? {\r\n            color: true,\r\n            date: true,\r\n            'datetime-local': true,\r\n            email: true,\r\n            month: true,\r\n            number: true,\r\n            range: true,\r\n            search: true,\r\n            tel: true,\r\n            text: true,\r\n            time: true,\r\n            url: true,\r\n            week: true,\r\n            textarea: true,\r\n            select: true,\r\n        }\r\n        : maskAllInputs === false\r\n            ? {}\r\n            : maskAllInputs;\r\n    const slimDOMOptions = slimDOM === true || slimDOM === 'all'\r\n        ?\r\n            {\r\n                script: true,\r\n                comment: true,\r\n                headFavicon: true,\r\n                headWhitespace: true,\r\n                headMetaDescKeywords: slimDOM === 'all',\r\n                headMetaSocial: true,\r\n                headMetaRobots: true,\r\n                headMetaHttpEquiv: true,\r\n                headMetaAuthorship: true,\r\n                headMetaVerification: true,\r\n            }\r\n        : slimDOM === false\r\n            ? {}\r\n            : slimDOM;\r\n    return serializeNodeWithId(n, {\r\n        doc: n,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        unblockSelector,\r\n        maskAllText,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        skipChild: false,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        slimDOMOptions,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        preserveWhiteSpace,\r\n        onSerialize,\r\n        onIframeLoad,\r\n        iframeLoadTimeout,\r\n        onStylesheetLoad,\r\n        stylesheetLoadTimeout,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement: false,\r\n    });\r\n}\r\n\nconst commentre = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\r\nfunction parse(css, options = {}) {\r\n    let lineno = 1;\r\n    let column = 1;\r\n    function updatePosition(str) {\r\n        const lines = str.match(/\\n/g);\r\n        if (lines) {\r\n            lineno += lines.length;\r\n        }\r\n        const i = str.lastIndexOf('\\n');\r\n        column = i === -1 ? column + str.length : str.length - i;\r\n    }\r\n    function position() {\r\n        const start = { line: lineno, column };\r\n        return (node) => {\r\n            node.position = new Position(start);\r\n            whitespace();\r\n            return node;\r\n        };\r\n    }\r\n    class Position {\r\n        constructor(start) {\r\n            this.start = start;\r\n            this.end = { line: lineno, column };\r\n            this.source = options.source;\r\n        }\r\n    }\r\n    Position.prototype.content = css;\r\n    const errorsList = [];\r\n    function error(msg) {\r\n        const err = new Error(`${options.source || ''}:${lineno}:${column}: ${msg}`);\r\n        err.reason = msg;\r\n        err.filename = options.source;\r\n        err.line = lineno;\r\n        err.column = column;\r\n        err.source = css;\r\n        if (options.silent) {\r\n            errorsList.push(err);\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    }\r\n    function stylesheet() {\r\n        const rulesList = rules();\r\n        return {\r\n            type: 'stylesheet',\r\n            stylesheet: {\r\n                source: options.source,\r\n                rules: rulesList,\r\n                parsingErrors: errorsList,\r\n            },\r\n        };\r\n    }\r\n    function open() {\r\n        return match(/^{\\s*/);\r\n    }\r\n    function close() {\r\n        return match(/^}/);\r\n    }\r\n    function rules() {\r\n        let node;\r\n        const rules = [];\r\n        whitespace();\r\n        comments(rules);\r\n        while (css.length && css.charAt(0) !== '}' && (node = atrule() || rule())) {\r\n            if (node) {\r\n                rules.push(node);\r\n                comments(rules);\r\n            }\r\n        }\r\n        return rules;\r\n    }\r\n    function match(re) {\r\n        const m = re.exec(css);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const str = m[0];\r\n        updatePosition(str);\r\n        css = css.slice(str.length);\r\n        return m;\r\n    }\r\n    function whitespace() {\r\n        match(/^\\s*/);\r\n    }\r\n    function comments(rules = []) {\r\n        let c;\r\n        while ((c = comment())) {\r\n            if (c) {\r\n                rules.push(c);\r\n            }\r\n            c = comment();\r\n        }\r\n        return rules;\r\n    }\r\n    function comment() {\r\n        const pos = position();\r\n        if ('/' !== css.charAt(0) || '*' !== css.charAt(1)) {\r\n            return;\r\n        }\r\n        let i = 2;\r\n        while ('' !== css.charAt(i) &&\r\n            ('*' !== css.charAt(i) || '/' !== css.charAt(i + 1))) {\r\n            ++i;\r\n        }\r\n        i += 2;\r\n        if ('' === css.charAt(i - 1)) {\r\n            return error('End of comment missing');\r\n        }\r\n        const str = css.slice(2, i - 2);\r\n        column += 2;\r\n        updatePosition(str);\r\n        css = css.slice(i);\r\n        column += 2;\r\n        return pos({\r\n            type: 'comment',\r\n            comment: str,\r\n        });\r\n    }\r\n    function selector() {\r\n        const m = match(/^([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const splitSelectors = trim(m[0])\r\n            .replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, '')\r\n            .replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, (m) => {\r\n            return m.replace(/,/g, '\\u200C');\r\n        })\r\n            .split(/\\s*(?![^(]*\\)),\\s*/);\r\n        if (splitSelectors.length <= 1) {\r\n            return splitSelectors.map((s) => {\r\n                return s.replace(/\\u200C/g, ',');\r\n            });\r\n        }\r\n        let i = 0;\r\n        let j = 0;\r\n        const len = splitSelectors.length;\r\n        const finalSelectors = [];\r\n        while (i < len) {\r\n            const openingParensCount = (splitSelectors[i].match(/\\(/g) || []).length;\r\n            const closingParensCount = (splitSelectors[i].match(/\\)/g) || []).length;\r\n            let unbalancedParens = openingParensCount - closingParensCount;\r\n            if (unbalancedParens >= 1) {\r\n                let foundClosingSelector = false;\r\n                j = i + 1;\r\n                while (j < len) {\r\n                    const nextOpeningParensCount = (splitSelectors[j].match(/\\(/g) || [])\r\n                        .length;\r\n                    const nextClosingParensCount = (splitSelectors[j].match(/\\)/g) || [])\r\n                        .length;\r\n                    const nextUnbalancedParens = nextClosingParensCount - nextOpeningParensCount;\r\n                    if (nextUnbalancedParens === unbalancedParens) {\r\n                        finalSelectors.push(splitSelectors.slice(i, j + 1).join(','));\r\n                        i = j + 1;\r\n                        foundClosingSelector = true;\r\n                        break;\r\n                    }\r\n                    j++;\r\n                    unbalancedParens -= nextUnbalancedParens;\r\n                }\r\n                if (foundClosingSelector) {\r\n                    continue;\r\n                }\r\n                splitSelectors\r\n                    .slice(i, len)\r\n                    .forEach((selector) => selector && finalSelectors.push(selector));\r\n                break;\r\n            }\r\n            splitSelectors[i] && finalSelectors.push(splitSelectors[i]);\r\n            i++;\r\n        }\r\n        return finalSelectors.map((s) => {\r\n            return s.replace(/\\u200C/g, ',');\r\n        });\r\n    }\r\n    function declaration() {\r\n        const pos = position();\r\n        const propMatch = match(/^(\\*?[-#\\/\\*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\r\n        if (!propMatch) {\r\n            return;\r\n        }\r\n        const prop = trim(propMatch[0]);\r\n        if (!match(/^:\\s*/)) {\r\n            return error(`property missing ':'`);\r\n        }\r\n        const val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\r\n        const ret = pos({\r\n            type: 'declaration',\r\n            property: prop.replace(commentre, ''),\r\n            value: val ? trim(val[0]).replace(commentre, '') : '',\r\n        });\r\n        match(/^[;\\s]*/);\r\n        return ret;\r\n    }\r\n    function declarations() {\r\n        const decls = [];\r\n        if (!open()) {\r\n            return error(`missing '{'`);\r\n        }\r\n        comments(decls);\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            if (decl !== false) {\r\n                decls.push(decl);\r\n                comments(decls);\r\n            }\r\n            decl = declaration();\r\n        }\r\n        if (!close()) {\r\n            return error(`missing '}'`);\r\n        }\r\n        return decls;\r\n    }\r\n    function keyframe() {\r\n        let m;\r\n        const vals = [];\r\n        const pos = position();\r\n        while ((m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/))) {\r\n            vals.push(m[1]);\r\n            match(/^,\\s*/);\r\n        }\r\n        if (!vals.length) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'keyframe',\r\n            values: vals,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    function atkeyframes() {\r\n        const pos = position();\r\n        let m = match(/^@([-\\w]+)?keyframes\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = m[1];\r\n        m = match(/^([-\\w]+)\\s*/);\r\n        if (!m) {\r\n            return error('@keyframes missing name');\r\n        }\r\n        const name = m[1];\r\n        if (!open()) {\r\n            return error(`@keyframes missing '{'`);\r\n        }\r\n        let frame;\r\n        let frames = comments();\r\n        while ((frame = keyframe())) {\r\n            frames.push(frame);\r\n            frames = frames.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@keyframes missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'keyframes',\r\n            name,\r\n            vendor,\r\n            keyframes: frames,\r\n        });\r\n    }\r\n    function atsupports() {\r\n        const pos = position();\r\n        const m = match(/^@supports *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const supports = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@supports missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@supports missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'supports',\r\n            supports,\r\n            rules: style,\r\n        });\r\n    }\r\n    function athost() {\r\n        const pos = position();\r\n        const m = match(/^@host\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@host missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@host missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'host',\r\n            rules: style,\r\n        });\r\n    }\r\n    function atmedia() {\r\n        const pos = position();\r\n        const m = match(/^@media *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const media = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@media missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@media missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'media',\r\n            media,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atcustommedia() {\r\n        const pos = position();\r\n        const m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'custom-media',\r\n            name: trim(m[1]),\r\n            media: trim(m[2]),\r\n        });\r\n    }\r\n    function atpage() {\r\n        const pos = position();\r\n        const m = match(/^@page */);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const sel = selector() || [];\r\n        if (!open()) {\r\n            return error(`@page missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@page missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'page',\r\n            selectors: sel,\r\n            declarations: decls,\r\n        });\r\n    }\r\n    function atdocument() {\r\n        const pos = position();\r\n        const m = match(/^@([-\\w]+)?document *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = trim(m[1]);\r\n        const doc = trim(m[2]);\r\n        if (!open()) {\r\n            return error(`@document missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@document missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'document',\r\n            document: doc,\r\n            vendor,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atfontface() {\r\n        const pos = position();\r\n        const m = match(/^@font-face\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@font-face missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@font-face missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'font-face',\r\n            declarations: decls,\r\n        });\r\n    }\r\n    const atimport = _compileAtrule('import');\r\n    const atcharset = _compileAtrule('charset');\r\n    const atnamespace = _compileAtrule('namespace');\r\n    function _compileAtrule(name) {\r\n        const re = new RegExp('^@' +\r\n            name +\r\n            '\\\\s*((?:' +\r\n            [\r\n                /[^\\\\]\"(?:\\\\\"|[^\"])*\"/.source,\r\n                /[^\\\\]'(?:\\\\'|[^'])*'/.source,\r\n                '[^;]',\r\n            ].join('|') +\r\n            ')+);');\r\n        return () => {\r\n            const pos = position();\r\n            const m = match(re);\r\n            if (!m) {\r\n                return;\r\n            }\r\n            const ret = { type: name };\r\n            ret[name] = m[1].trim();\r\n            return pos(ret);\r\n        };\r\n    }\r\n    function atrule() {\r\n        if (css[0] !== '@') {\r\n            return;\r\n        }\r\n        return (atkeyframes() ||\r\n            atmedia() ||\r\n            atcustommedia() ||\r\n            atsupports() ||\r\n            atimport() ||\r\n            atcharset() ||\r\n            atnamespace() ||\r\n            atdocument() ||\r\n            atpage() ||\r\n            athost() ||\r\n            atfontface());\r\n    }\r\n    function rule() {\r\n        const pos = position();\r\n        const sel = selector();\r\n        if (!sel) {\r\n            return error('selector missing');\r\n        }\r\n        comments();\r\n        return pos({\r\n            type: 'rule',\r\n            selectors: sel,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    return addParent(stylesheet());\r\n}\r\nfunction trim(str) {\r\n    return str ? str.replace(/^\\s+|\\s+$/g, '') : '';\r\n}\r\nfunction addParent(obj, parent) {\r\n    const isNode = obj && typeof obj.type === 'string';\r\n    const childParent = isNode ? obj : parent;\r\n    for (const k of Object.keys(obj)) {\r\n        const value = obj[k];\r\n        if (Array.isArray(value)) {\r\n            value.forEach((v) => {\r\n                addParent(v, childParent);\r\n            });\r\n        }\r\n        else if (value && typeof value === 'object') {\r\n            addParent(value, childParent);\r\n        }\r\n    }\r\n    if (isNode) {\r\n        Object.defineProperty(obj, 'parent', {\r\n            configurable: true,\r\n            writable: true,\r\n            enumerable: false,\r\n            value: parent || null,\r\n        });\r\n    }\r\n    return obj;\r\n}\n\nconst tagMap = {\r\n    script: 'noscript',\r\n    altglyph: 'altGlyph',\r\n    altglyphdef: 'altGlyphDef',\r\n    altglyphitem: 'altGlyphItem',\r\n    animatecolor: 'animateColor',\r\n    animatemotion: 'animateMotion',\r\n    animatetransform: 'animateTransform',\r\n    clippath: 'clipPath',\r\n    feblend: 'feBlend',\r\n    fecolormatrix: 'feColorMatrix',\r\n    fecomponenttransfer: 'feComponentTransfer',\r\n    fecomposite: 'feComposite',\r\n    feconvolvematrix: 'feConvolveMatrix',\r\n    fediffuselighting: 'feDiffuseLighting',\r\n    fedisplacementmap: 'feDisplacementMap',\r\n    fedistantlight: 'feDistantLight',\r\n    fedropshadow: 'feDropShadow',\r\n    feflood: 'feFlood',\r\n    fefunca: 'feFuncA',\r\n    fefuncb: 'feFuncB',\r\n    fefuncg: 'feFuncG',\r\n    fefuncr: 'feFuncR',\r\n    fegaussianblur: 'feGaussianBlur',\r\n    feimage: 'feImage',\r\n    femerge: 'feMerge',\r\n    femergenode: 'feMergeNode',\r\n    femorphology: 'feMorphology',\r\n    feoffset: 'feOffset',\r\n    fepointlight: 'fePointLight',\r\n    fespecularlighting: 'feSpecularLighting',\r\n    fespotlight: 'feSpotLight',\r\n    fetile: 'feTile',\r\n    feturbulence: 'feTurbulence',\r\n    foreignobject: 'foreignObject',\r\n    glyphref: 'glyphRef',\r\n    lineargradient: 'linearGradient',\r\n    radialgradient: 'radialGradient',\r\n};\r\nfunction getTagName(n) {\r\n    let tagName = tagMap[n.tagName] ? tagMap[n.tagName] : n.tagName;\r\n    if (tagName === 'link' && n.attributes._cssText) {\r\n        tagName = 'style';\r\n    }\r\n    return tagName;\r\n}\r\nfunction escapeRegExp(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\nconst HOVER_SELECTOR = /([^\\\\]):hover/;\r\nconst HOVER_SELECTOR_GLOBAL = new RegExp(HOVER_SELECTOR.source, 'g');\r\nfunction addHoverClass(cssText, cache) {\r\n    const cachedStyle = cache?.stylesWithHoverClass.get(cssText);\r\n    if (cachedStyle)\r\n        return cachedStyle;\r\n    if (cssText.length >= 1000000) {\r\n        return cssText;\r\n    }\r\n    const ast = parse(cssText, {\r\n        silent: true,\r\n    });\r\n    if (!ast.stylesheet) {\r\n        return cssText;\r\n    }\r\n    const selectors = [];\r\n    ast.stylesheet.rules.forEach((rule) => {\r\n        if ('selectors' in rule) {\r\n            (rule.selectors || []).forEach((selector) => {\r\n                if (HOVER_SELECTOR.test(selector)) {\r\n                    selectors.push(selector);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    if (selectors.length === 0) {\r\n        return cssText;\r\n    }\r\n    const selectorMatcher = new RegExp(selectors\r\n        .filter((selector, index) => selectors.indexOf(selector) === index)\r\n        .sort((a, b) => b.length - a.length)\r\n        .map((selector) => {\r\n        return escapeRegExp(selector);\r\n    })\r\n        .join('|'), 'g');\r\n    const result = cssText.replace(selectorMatcher, (selector) => {\r\n        const newSelector = selector.replace(HOVER_SELECTOR_GLOBAL, '$1.\\\\:hover');\r\n        return `${selector}, ${newSelector}`;\r\n    });\r\n    cache?.stylesWithHoverClass.set(cssText, result);\r\n    return result;\r\n}\r\nfunction createCache() {\r\n    const stylesWithHoverClass = new Map();\r\n    return {\r\n        stylesWithHoverClass,\r\n    };\r\n}\r\nfunction buildNode(n, options) {\r\n    const { doc, hackCss, cache } = options;\r\n    switch (n.type) {\r\n        case NodeType.Document:\r\n            return doc.implementation.createDocument(null, '', null);\r\n        case NodeType.DocumentType:\r\n            return doc.implementation.createDocumentType(n.name || 'html', n.publicId, n.systemId);\r\n        case NodeType.Element: {\r\n            const tagName = getTagName(n);\r\n            let node;\r\n            if (n.isSVG) {\r\n                node = doc.createElementNS('http://www.w3.org/2000/svg', tagName);\r\n            }\r\n            else {\r\n                if (n.isCustom &&\r\n                    doc.defaultView?.customElements &&\r\n                    !doc.defaultView.customElements.get(n.tagName))\r\n                    doc.defaultView.customElements.define(n.tagName, class extends doc.defaultView.HTMLElement {\r\n                    });\r\n                node = doc.createElement(tagName);\r\n            }\r\n            const specialAttributes = {};\r\n            for (const name in n.attributes) {\r\n                if (!Object.prototype.hasOwnProperty.call(n.attributes, name)) {\r\n                    continue;\r\n                }\r\n                let value = n.attributes[name];\r\n                if (tagName === 'option' &&\r\n                    name === 'selected' &&\r\n                    value === false) {\r\n                    continue;\r\n                }\r\n                if (value === null) {\r\n                    continue;\r\n                }\r\n                if (value === true)\r\n                    value = '';\r\n                if (name.startsWith('rr_')) {\r\n                    specialAttributes[name] = value;\r\n                    continue;\r\n                }\r\n                const isTextarea = tagName === 'textarea' && name === 'value';\r\n                const isRemoteOrDynamicCss = tagName === 'style' && name === '_cssText';\r\n                if (isRemoteOrDynamicCss && hackCss && typeof value === 'string') {\r\n                    value = addHoverClass(value, cache);\r\n                }\r\n                if ((isTextarea || isRemoteOrDynamicCss) && typeof value === 'string') {\r\n                    const child = doc.createTextNode(value);\r\n                    for (const c of Array.from(node.childNodes)) {\r\n                        if (c.nodeType === node.TEXT_NODE) {\r\n                            node.removeChild(c);\r\n                        }\r\n                    }\r\n                    node.appendChild(child);\r\n                    continue;\r\n                }\r\n                try {\r\n                    if (n.isSVG && name === 'xlink:href') {\r\n                        node.setAttributeNS('http://www.w3.org/1999/xlink', name, value.toString());\r\n                    }\r\n                    else if (name === 'onload' ||\r\n                        name === 'onclick' ||\r\n                        name.substring(0, 7) === 'onmouse') {\r\n                        node.setAttribute('_' + name, value.toString());\r\n                    }\r\n                    else if (tagName === 'meta' &&\r\n                        n.attributes['http-equiv'] === 'Content-Security-Policy' &&\r\n                        name === 'content') {\r\n                        node.setAttribute('csp-content', value.toString());\r\n                        continue;\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        (n.attributes.rel === 'preload' ||\r\n                            n.attributes.rel === 'modulepreload')) {\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        n.attributes.rel === 'prefetch' &&\r\n                        typeof n.attributes.href === 'string' &&\r\n                        extractFileExtension(n.attributes.href) === 'js') {\r\n                    }\r\n                    else if (tagName === 'img' &&\r\n                        n.attributes.srcset &&\r\n                        n.attributes.rr_dataURL) {\r\n                        node.setAttribute('rrweb-original-srcset', n.attributes.srcset);\r\n                    }\r\n                    else {\r\n                        node.setAttribute(name, value.toString());\r\n                    }\r\n                }\r\n                catch (error) {\r\n                }\r\n            }\r\n            for (const name in specialAttributes) {\r\n                const value = specialAttributes[name];\r\n                if (tagName === 'canvas' && name === 'rr_dataURL') {\r\n                    const image = doc.createElement('img');\r\n                    image.onload = () => {\r\n                        const ctx = node.getContext('2d');\r\n                        if (ctx) {\r\n                            ctx.drawImage(image, 0, 0, image.width, image.height);\r\n                        }\r\n                    };\r\n                    image.src = value.toString();\r\n                    if (node.RRNodeType)\r\n                        node.rr_dataURL = value.toString();\r\n                }\r\n                else if (tagName === 'img' && name === 'rr_dataURL') {\r\n                    const image = node;\r\n                    if (!image.currentSrc.startsWith('data:')) {\r\n                        image.setAttribute('rrweb-original-src', n.attributes.src);\r\n                        image.src = value.toString();\r\n                    }\r\n                }\r\n                if (name === 'rr_width') {\r\n                    node.style.setProperty('width', value.toString());\r\n                }\r\n                else if (name === 'rr_height') {\r\n                    node.style.setProperty('height', value.toString());\r\n                }\r\n                else if (name === 'rr_mediaCurrentTime' &&\r\n                    typeof value === 'number') {\r\n                    node.currentTime = value;\r\n                }\r\n                else if (name === 'rr_mediaState') {\r\n                    switch (value) {\r\n                        case 'played':\r\n                            node\r\n                                .play()\r\n                                .catch((e) => console.warn('media playback error', e));\r\n                            break;\r\n                        case 'paused':\r\n                            node.pause();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (n.isShadowHost) {\r\n                if (!node.shadowRoot) {\r\n                    node.attachShadow({ mode: 'open' });\r\n                }\r\n                else {\r\n                    while (node.shadowRoot.firstChild) {\r\n                        node.shadowRoot.removeChild(node.shadowRoot.firstChild);\r\n                    }\r\n                }\r\n            }\r\n            return node;\r\n        }\r\n        case NodeType.Text:\r\n            return doc.createTextNode(n.isStyle && hackCss\r\n                ? addHoverClass(n.textContent, cache)\r\n                : n.textContent);\r\n        case NodeType.CDATA:\r\n            return doc.createCDATASection(n.textContent);\r\n        case NodeType.Comment:\r\n            return doc.createComment(n.textContent);\r\n        default:\r\n            return null;\r\n    }\r\n}\r\nfunction buildNodeWithSN(n, options) {\r\n    const { doc, mirror, skipChild = false, hackCss = true, afterAppend, cache, } = options;\r\n    if (mirror.has(n.id)) {\r\n        const nodeInMirror = mirror.getNode(n.id);\r\n        const meta = mirror.getMeta(nodeInMirror);\r\n        if (isNodeMetaEqual(meta, n))\r\n            return mirror.getNode(n.id);\r\n    }\r\n    let node = buildNode(n, { doc, hackCss, cache });\r\n    if (!node) {\r\n        return null;\r\n    }\r\n    if (n.rootId && mirror.getNode(n.rootId) !== doc) {\r\n        mirror.replace(n.rootId, doc);\r\n    }\r\n    if (n.type === NodeType.Document) {\r\n        doc.close();\r\n        doc.open();\r\n        if (n.compatMode === 'BackCompat' &&\r\n            n.childNodes &&\r\n            n.childNodes[0].type !== NodeType.DocumentType) {\r\n            if (n.childNodes[0].type === NodeType.Element &&\r\n                'xmlns' in n.childNodes[0].attributes &&\r\n                n.childNodes[0].attributes.xmlns === 'http://www.w3.org/1999/xhtml') {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\">');\r\n            }\r\n            else {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\">');\r\n            }\r\n        }\r\n        node = doc;\r\n    }\r\n    mirror.add(node, n);\r\n    if ((n.type === NodeType.Document || n.type === NodeType.Element) &&\r\n        !skipChild) {\r\n        for (const childN of n.childNodes) {\r\n            const childNode = buildNodeWithSN(childN, {\r\n                doc,\r\n                mirror,\r\n                skipChild: false,\r\n                hackCss,\r\n                afterAppend,\r\n                cache,\r\n            });\r\n            if (!childNode) {\r\n                console.warn('Failed to rebuild', childN);\r\n                continue;\r\n            }\r\n            if (childN.isShadow && isElement(node) && node.shadowRoot) {\r\n                node.shadowRoot.appendChild(childNode);\r\n            }\r\n            else if (n.type === NodeType.Document &&\r\n                childN.type == NodeType.Element) {\r\n                const htmlElement = childNode;\r\n                let body = null;\r\n                htmlElement.childNodes.forEach((child) => {\r\n                    if (child.nodeName === 'BODY')\r\n                        body = child;\r\n                });\r\n                if (body) {\r\n                    htmlElement.removeChild(body);\r\n                    node.appendChild(childNode);\r\n                    htmlElement.appendChild(body);\r\n                }\r\n                else {\r\n                    node.appendChild(childNode);\r\n                }\r\n            }\r\n            else {\r\n                node.appendChild(childNode);\r\n            }\r\n            if (afterAppend) {\r\n                afterAppend(childNode, childN.id);\r\n            }\r\n        }\r\n    }\r\n    return node;\r\n}\r\nfunction visit(mirror, onVisit) {\r\n    function walk(node) {\r\n        onVisit(node);\r\n    }\r\n    for (const id of mirror.getIds()) {\r\n        if (mirror.has(id)) {\r\n            walk(mirror.getNode(id));\r\n        }\r\n    }\r\n}\r\nfunction handleScroll(node, mirror) {\r\n    const n = mirror.getMeta(node);\r\n    if (n?.type !== NodeType.Element) {\r\n        return;\r\n    }\r\n    const el = node;\r\n    for (const name in n.attributes) {\r\n        if (!(Object.prototype.hasOwnProperty.call(n.attributes, name) &&\r\n            name.startsWith('rr_'))) {\r\n            continue;\r\n        }\r\n        const value = n.attributes[name];\r\n        if (name === 'rr_scrollLeft') {\r\n            el.scrollLeft = value;\r\n        }\r\n        if (name === 'rr_scrollTop') {\r\n            el.scrollTop = value;\r\n        }\r\n    }\r\n}\r\nfunction rebuild(n, options) {\r\n    const { doc, onVisit, hackCss = true, afterAppend, cache, mirror = new Mirror(), } = options;\r\n    const node = buildNodeWithSN(n, {\r\n        doc,\r\n        mirror,\r\n        skipChild: false,\r\n        hackCss,\r\n        afterAppend,\r\n        cache,\r\n    });\r\n    visit(mirror, (visitedNode) => {\r\n        if (onVisit) {\r\n            onVisit(visitedNode);\r\n        }\r\n        handleScroll(visitedNode, mirror);\r\n    });\r\n    return node;\r\n}\n\nexport { IGNORED_NODE, Mirror, NodeType, addHoverClass, buildNodeWithSN, clearTimeout, createCache, createMatchPredicate, createMirror, distanceToMatch, escapeImportStatement, extractFileExtension, fixAllCssProperty, fixSafariColons, genId, getIframeContentDocument, getInputType, getInputValue, ignoreAttribute, is2DCanvasBlank, isCSSImportRule, isCSSStyleRule, isElement, isNativeShadowDom, isNodeMetaEqual, isShadowRoot, maskInputValue, needMaskingText, rebuild, serializeNodeWithId, setTimeout, shouldMaskInput, snapshot, stringifyRule, stringifyStylesheet, toLowerCase, toUpperCase, transformAttribute };\n","import { distanceToMatch, IGNORED_NODE, isShadowRoot, createMatchPredicate } from '../../rrweb-snapshot/es/rrweb-snapshot.js';\n\nfunction on(type, fn, target = document) {\r\n    const options = { capture: true, passive: true };\r\n    target.addEventListener(type, fn, options);\r\n    return () => target.removeEventListener(type, fn, options);\r\n}\r\nconst DEPARTED_MIRROR_ACCESS_WARNING = 'Please stop import mirror directly. Instead of that,' +\r\n    '\\r\\n' +\r\n    'now you can use replayer.getMirror() to access the mirror instance of a replayer,' +\r\n    '\\r\\n' +\r\n    'or you can use record.mirror to access the mirror instance during recording.';\r\nlet _mirror = {\r\n    map: {},\r\n    getId() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return -1;\r\n    },\r\n    getNode() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return null;\r\n    },\r\n    removeNodeFromMap() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n    },\r\n    has() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n        return false;\r\n    },\r\n    reset() {\r\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n    },\r\n};\r\nif (typeof window !== 'undefined' && window.Proxy && window.Reflect) {\r\n    _mirror = new Proxy(_mirror, {\r\n        get(target, prop, receiver) {\r\n            if (prop === 'map') {\r\n                console.error(DEPARTED_MIRROR_ACCESS_WARNING);\r\n            }\r\n            return Reflect.get(target, prop, receiver);\r\n        },\r\n    });\r\n}\r\nfunction throttle(func, wait, options = {}) {\r\n    let timeout = null;\r\n    let previous = 0;\r\n    return function (...args) {\r\n        const now = Date.now();\r\n        if (!previous && options.leading === false) {\r\n            previous = now;\r\n        }\r\n        const remaining = wait - (now - previous);\r\n        const context = this;\r\n        if (remaining <= 0 || remaining > wait) {\r\n            if (timeout) {\r\n                clearTimeout(timeout);\r\n                timeout = null;\r\n            }\r\n            previous = now;\r\n            func.apply(context, args);\r\n        }\r\n        else if (!timeout && options.trailing !== false) {\r\n            timeout = setTimeout(() => {\r\n                previous = options.leading === false ? 0 : Date.now();\r\n                timeout = null;\r\n                func.apply(context, args);\r\n            }, remaining);\r\n        }\r\n    };\r\n}\r\nfunction hookSetter(target, key, d, isRevoked, win = window) {\r\n    const original = win.Object.getOwnPropertyDescriptor(target, key);\r\n    win.Object.defineProperty(target, key, isRevoked\r\n        ? d\r\n        : {\r\n            set(value) {\r\n                setTimeout(() => {\r\n                    d.set.call(this, value);\r\n                }, 0);\r\n                if (original && original.set) {\r\n                    original.set.call(this, value);\r\n                }\r\n            },\r\n        });\r\n    return () => hookSetter(target, key, original || {}, true);\r\n}\r\nfunction patch(source, name, replacement) {\r\n    try {\r\n        if (!(name in source)) {\r\n            return () => {\r\n            };\r\n        }\r\n        const original = source[name];\r\n        const wrapped = replacement(original);\r\n        if (typeof wrapped === 'function') {\r\n            wrapped.prototype = wrapped.prototype || {};\r\n            Object.defineProperties(wrapped, {\r\n                __rrweb_original__: {\r\n                    enumerable: false,\r\n                    value: original,\r\n                },\r\n            });\r\n        }\r\n        source[name] = wrapped;\r\n        return () => {\r\n            source[name] = original;\r\n        };\r\n    }\r\n    catch {\r\n        return () => {\r\n        };\r\n    }\r\n}\r\nlet nowTimestamp = Date.now;\r\nif (!(/[1-9][0-9]{12}/.test(Date.now().toString()))) {\r\n    nowTimestamp = () => new Date().getTime();\r\n}\r\nfunction getWindowScroll(win) {\r\n    const doc = win.document;\r\n    return {\r\n        left: doc.scrollingElement\r\n            ? doc.scrollingElement.scrollLeft\r\n            : win.pageXOffset !== undefined\r\n                ? win.pageXOffset\r\n                : doc?.documentElement.scrollLeft ||\r\n                    doc?.body?.parentElement?.scrollLeft ||\r\n                    doc?.body?.scrollLeft ||\r\n                    0,\r\n        top: doc.scrollingElement\r\n            ? doc.scrollingElement.scrollTop\r\n            : win.pageYOffset !== undefined\r\n                ? win.pageYOffset\r\n                : doc?.documentElement.scrollTop ||\r\n                    doc?.body?.parentElement?.scrollTop ||\r\n                    doc?.body?.scrollTop ||\r\n                    0,\r\n    };\r\n}\r\nfunction getWindowHeight() {\r\n    return (window.innerHeight ||\r\n        (document.documentElement && document.documentElement.clientHeight) ||\r\n        (document.body && document.body.clientHeight));\r\n}\r\nfunction getWindowWidth() {\r\n    return (window.innerWidth ||\r\n        (document.documentElement && document.documentElement.clientWidth) ||\r\n        (document.body && document.body.clientWidth));\r\n}\r\nfunction closestElementOfNode(node) {\r\n    if (!node) {\r\n        return null;\r\n    }\r\n    const el = node.nodeType === node.ELEMENT_NODE\r\n        ? node\r\n        : node.parentElement;\r\n    return el;\r\n}\r\nfunction isBlocked(node, blockClass, blockSelector, unblockSelector, checkAncestors) {\r\n    if (!node) {\r\n        return false;\r\n    }\r\n    const el = closestElementOfNode(node);\r\n    if (!el) {\r\n        return false;\r\n    }\r\n    const blockedPredicate = createMatchPredicate(blockClass, blockSelector);\r\n    if (!checkAncestors) {\r\n        const isUnblocked = unblockSelector && el.matches(unblockSelector);\r\n        return blockedPredicate(el) && !isUnblocked;\r\n    }\r\n    const blockDistance = distanceToMatch(el, blockedPredicate);\r\n    let unblockDistance = -1;\r\n    if (blockDistance < 0) {\r\n        return false;\r\n    }\r\n    if (unblockSelector) {\r\n        unblockDistance = distanceToMatch(el, createMatchPredicate(null, unblockSelector));\r\n    }\r\n    if (blockDistance > -1 && unblockDistance < 0) {\r\n        return true;\r\n    }\r\n    return blockDistance < unblockDistance;\r\n}\r\nfunction isSerialized(n, mirror) {\r\n    return mirror.getId(n) !== -1;\r\n}\r\nfunction isIgnored(n, mirror) {\r\n    return mirror.getId(n) === IGNORED_NODE;\r\n}\r\nfunction isAncestorRemoved(target, mirror) {\r\n    if (isShadowRoot(target)) {\r\n        return false;\r\n    }\r\n    const id = mirror.getId(target);\r\n    if (!mirror.has(id)) {\r\n        return true;\r\n    }\r\n    if (target.parentNode &&\r\n        target.parentNode.nodeType === target.DOCUMENT_NODE) {\r\n        return false;\r\n    }\r\n    if (!target.parentNode) {\r\n        return true;\r\n    }\r\n    return isAncestorRemoved(target.parentNode, mirror);\r\n}\r\nfunction legacy_isTouchEvent(event) {\r\n    return Boolean(event.changedTouches);\r\n}\r\nfunction polyfill(win = window) {\r\n    if ('NodeList' in win && !win.NodeList.prototype.forEach) {\r\n        win.NodeList.prototype.forEach = Array.prototype\r\n            .forEach;\r\n    }\r\n    if ('DOMTokenList' in win && !win.DOMTokenList.prototype.forEach) {\r\n        win.DOMTokenList.prototype.forEach = Array.prototype\r\n            .forEach;\r\n    }\r\n    if (!Node.prototype.contains) {\r\n        Node.prototype.contains = (...args) => {\r\n            let node = args[0];\r\n            if (!(0 in args)) {\r\n                throw new TypeError('1 argument is required');\r\n            }\r\n            do {\r\n                if (this === node) {\r\n                    return true;\r\n                }\r\n            } while ((node = node && node.parentNode));\r\n            return false;\r\n        };\r\n    }\r\n}\r\nfunction queueToResolveTrees(queue) {\r\n    const queueNodeMap = {};\r\n    const putIntoMap = (m, parent) => {\r\n        const nodeInTree = {\r\n            value: m,\r\n            parent,\r\n            children: [],\r\n        };\r\n        queueNodeMap[m.node.id] = nodeInTree;\r\n        return nodeInTree;\r\n    };\r\n    const queueNodeTrees = [];\r\n    for (const mutation of queue) {\r\n        const { nextId, parentId } = mutation;\r\n        if (nextId && nextId in queueNodeMap) {\r\n            const nextInTree = queueNodeMap[nextId];\r\n            if (nextInTree.parent) {\r\n                const idx = nextInTree.parent.children.indexOf(nextInTree);\r\n                nextInTree.parent.children.splice(idx, 0, putIntoMap(mutation, nextInTree.parent));\r\n            }\r\n            else {\r\n                const idx = queueNodeTrees.indexOf(nextInTree);\r\n                queueNodeTrees.splice(idx, 0, putIntoMap(mutation, null));\r\n            }\r\n            continue;\r\n        }\r\n        if (parentId in queueNodeMap) {\r\n            const parentInTree = queueNodeMap[parentId];\r\n            parentInTree.children.push(putIntoMap(mutation, parentInTree));\r\n            continue;\r\n        }\r\n        queueNodeTrees.push(putIntoMap(mutation, null));\r\n    }\r\n    return queueNodeTrees;\r\n}\r\nfunction iterateResolveTree(tree, cb) {\r\n    cb(tree.value);\r\n    for (let i = tree.children.length - 1; i >= 0; i--) {\r\n        iterateResolveTree(tree.children[i], cb);\r\n    }\r\n}\r\nfunction isSerializedIframe(n, mirror) {\r\n    return Boolean(n.nodeName === 'IFRAME' && mirror.getMeta(n));\r\n}\r\nfunction isSerializedStylesheet(n, mirror) {\r\n    return Boolean(n.nodeName === 'LINK' &&\r\n        n.nodeType === n.ELEMENT_NODE &&\r\n        n.getAttribute &&\r\n        n.getAttribute('rel') === 'stylesheet' &&\r\n        mirror.getMeta(n));\r\n}\r\nfunction getBaseDimension(node, rootIframe) {\r\n    const frameElement = node.ownerDocument?.defaultView?.frameElement;\r\n    if (!frameElement || frameElement === rootIframe) {\r\n        return {\r\n            x: 0,\r\n            y: 0,\r\n            relativeScale: 1,\r\n            absoluteScale: 1,\r\n        };\r\n    }\r\n    const frameDimension = frameElement.getBoundingClientRect();\r\n    const frameBaseDimension = getBaseDimension(frameElement, rootIframe);\r\n    const relativeScale = frameDimension.height / frameElement.clientHeight;\r\n    return {\r\n        x: frameDimension.x * frameBaseDimension.relativeScale +\r\n            frameBaseDimension.x,\r\n        y: frameDimension.y * frameBaseDimension.relativeScale +\r\n            frameBaseDimension.y,\r\n        relativeScale,\r\n        absoluteScale: frameBaseDimension.absoluteScale * relativeScale,\r\n    };\r\n}\r\nfunction hasShadowRoot(n) {\r\n    return Boolean(n?.shadowRoot);\r\n}\r\nfunction getNestedRule(rules, position) {\r\n    const rule = rules[position[0]];\r\n    if (position.length === 1) {\r\n        return rule;\r\n    }\r\n    else {\r\n        return getNestedRule(rule.cssRules[position[1]].cssRules, position.slice(2));\r\n    }\r\n}\r\nfunction getPositionsAndIndex(nestedIndex) {\r\n    const positions = [...nestedIndex];\r\n    const index = positions.pop();\r\n    return { positions, index };\r\n}\r\nfunction uniqueTextMutations(mutations) {\r\n    const idSet = new Set();\r\n    const uniqueMutations = [];\r\n    for (let i = mutations.length; i--;) {\r\n        const mutation = mutations[i];\r\n        if (!idSet.has(mutation.id)) {\r\n            uniqueMutations.push(mutation);\r\n            idSet.add(mutation.id);\r\n        }\r\n    }\r\n    return uniqueMutations;\r\n}\r\nclass StyleSheetMirror {\r\n    constructor() {\r\n        this.id = 1;\r\n        this.styleIDMap = new WeakMap();\r\n        this.idStyleMap = new Map();\r\n    }\r\n    getId(stylesheet) {\r\n        return this.styleIDMap.get(stylesheet) ?? -1;\r\n    }\r\n    has(stylesheet) {\r\n        return this.styleIDMap.has(stylesheet);\r\n    }\r\n    add(stylesheet, id) {\r\n        if (this.has(stylesheet))\r\n            return this.getId(stylesheet);\r\n        let newId;\r\n        if (id === undefined) {\r\n            newId = this.id++;\r\n        }\r\n        else\r\n            newId = id;\r\n        this.styleIDMap.set(stylesheet, newId);\r\n        this.idStyleMap.set(newId, stylesheet);\r\n        return newId;\r\n    }\r\n    getStyle(id) {\r\n        return this.idStyleMap.get(id) || null;\r\n    }\r\n    reset() {\r\n        this.styleIDMap = new WeakMap();\r\n        this.idStyleMap = new Map();\r\n        this.id = 1;\r\n    }\r\n    generateId() {\r\n        return this.id++;\r\n    }\r\n}\r\nfunction getShadowHost(n) {\r\n    let shadowHost = null;\r\n    if (n.getRootNode?.()?.nodeType === Node.DOCUMENT_FRAGMENT_NODE &&\r\n        n.getRootNode().host)\r\n        shadowHost = n.getRootNode().host;\r\n    return shadowHost;\r\n}\r\nfunction getRootShadowHost(n) {\r\n    let rootShadowHost = n;\r\n    let shadowHost;\r\n    while ((shadowHost = getShadowHost(rootShadowHost)))\r\n        rootShadowHost = shadowHost;\r\n    return rootShadowHost;\r\n}\r\nfunction shadowHostInDom(n) {\r\n    const doc = n.ownerDocument;\r\n    if (!doc)\r\n        return false;\r\n    const shadowHost = getRootShadowHost(n);\r\n    return doc.contains(shadowHost);\r\n}\r\nfunction inDom(n) {\r\n    const doc = n.ownerDocument;\r\n    if (!doc)\r\n        return false;\r\n    return doc.contains(n) || shadowHostInDom(n);\r\n}\r\nconst cachedImplementations = {};\r\nfunction getImplementation(name) {\r\n    const cached = cachedImplementations[name];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    const document = window.document;\r\n    let impl = window[name];\r\n    if (document && typeof document.createElement === 'function') {\r\n        try {\r\n            const sandbox = document.createElement('iframe');\r\n            sandbox.hidden = true;\r\n            document.head.appendChild(sandbox);\r\n            const contentWindow = sandbox.contentWindow;\r\n            if (contentWindow && contentWindow[name]) {\r\n                impl =\r\n                    contentWindow[name];\r\n            }\r\n            document.head.removeChild(sandbox);\r\n        }\r\n        catch (e) {\r\n        }\r\n    }\r\n    return (cachedImplementations[name] = impl.bind(window));\r\n}\r\nfunction onRequestAnimationFrame(...rest) {\r\n    return getImplementation('requestAnimationFrame')(...rest);\r\n}\r\nfunction setTimeout(...rest) {\r\n    return getImplementation('setTimeout')(...rest);\r\n}\r\nfunction clearTimeout(...rest) {\r\n    return getImplementation('clearTimeout')(...rest);\r\n}\n\nexport { StyleSheetMirror, _mirror, clearTimeout, closestElementOfNode, getBaseDimension, getNestedRule, getPositionsAndIndex, getRootShadowHost, getShadowHost, getWindowHeight, getWindowScroll, getWindowWidth, hasShadowRoot, hookSetter, inDom, isAncestorRemoved, isBlocked, isIgnored, isSerialized, isSerializedIframe, isSerializedStylesheet, iterateResolveTree, legacy_isTouchEvent, nowTimestamp, on, onRequestAnimationFrame, patch, polyfill, queueToResolveTrees, setTimeout, shadowHostInDom, throttle, uniqueTextMutations };\n","var EventType = /* @__PURE__ */ ((EventType2) => {\n  EventType2[EventType2[\"DomContentLoaded\"] = 0] = \"DomContentLoaded\";\n  EventType2[EventType2[\"Load\"] = 1] = \"Load\";\n  EventType2[EventType2[\"FullSnapshot\"] = 2] = \"FullSnapshot\";\n  EventType2[EventType2[\"IncrementalSnapshot\"] = 3] = \"IncrementalSnapshot\";\n  EventType2[EventType2[\"Meta\"] = 4] = \"Meta\";\n  EventType2[EventType2[\"Custom\"] = 5] = \"Custom\";\n  EventType2[EventType2[\"Plugin\"] = 6] = \"Plugin\";\n  return EventType2;\n})(EventType || {});\nvar IncrementalSource = /* @__PURE__ */ ((IncrementalSource2) => {\n  IncrementalSource2[IncrementalSource2[\"Mutation\"] = 0] = \"Mutation\";\n  IncrementalSource2[IncrementalSource2[\"MouseMove\"] = 1] = \"MouseMove\";\n  IncrementalSource2[IncrementalSource2[\"MouseInteraction\"] = 2] = \"MouseInteraction\";\n  IncrementalSource2[IncrementalSource2[\"Scroll\"] = 3] = \"Scroll\";\n  IncrementalSource2[IncrementalSource2[\"ViewportResize\"] = 4] = \"ViewportResize\";\n  IncrementalSource2[IncrementalSource2[\"Input\"] = 5] = \"Input\";\n  IncrementalSource2[IncrementalSource2[\"TouchMove\"] = 6] = \"TouchMove\";\n  IncrementalSource2[IncrementalSource2[\"MediaInteraction\"] = 7] = \"MediaInteraction\";\n  IncrementalSource2[IncrementalSource2[\"StyleSheetRule\"] = 8] = \"StyleSheetRule\";\n  IncrementalSource2[IncrementalSource2[\"CanvasMutation\"] = 9] = \"CanvasMutation\";\n  IncrementalSource2[IncrementalSource2[\"Font\"] = 10] = \"Font\";\n  IncrementalSource2[IncrementalSource2[\"Log\"] = 11] = \"Log\";\n  IncrementalSource2[IncrementalSource2[\"Drag\"] = 12] = \"Drag\";\n  IncrementalSource2[IncrementalSource2[\"StyleDeclaration\"] = 13] = \"StyleDeclaration\";\n  IncrementalSource2[IncrementalSource2[\"Selection\"] = 14] = \"Selection\";\n  IncrementalSource2[IncrementalSource2[\"AdoptedStyleSheet\"] = 15] = \"AdoptedStyleSheet\";\n  IncrementalSource2[IncrementalSource2[\"CustomElement\"] = 16] = \"CustomElement\";\n  return IncrementalSource2;\n})(IncrementalSource || {});\nvar MouseInteractions = /* @__PURE__ */ ((MouseInteractions2) => {\n  MouseInteractions2[MouseInteractions2[\"MouseUp\"] = 0] = \"MouseUp\";\n  MouseInteractions2[MouseInteractions2[\"MouseDown\"] = 1] = \"MouseDown\";\n  MouseInteractions2[MouseInteractions2[\"Click\"] = 2] = \"Click\";\n  MouseInteractions2[MouseInteractions2[\"ContextMenu\"] = 3] = \"ContextMenu\";\n  MouseInteractions2[MouseInteractions2[\"DblClick\"] = 4] = \"DblClick\";\n  MouseInteractions2[MouseInteractions2[\"Focus\"] = 5] = \"Focus\";\n  MouseInteractions2[MouseInteractions2[\"Blur\"] = 6] = \"Blur\";\n  MouseInteractions2[MouseInteractions2[\"TouchStart\"] = 7] = \"TouchStart\";\n  MouseInteractions2[MouseInteractions2[\"TouchMove_Departed\"] = 8] = \"TouchMove_Departed\";\n  MouseInteractions2[MouseInteractions2[\"TouchEnd\"] = 9] = \"TouchEnd\";\n  MouseInteractions2[MouseInteractions2[\"TouchCancel\"] = 10] = \"TouchCancel\";\n  return MouseInteractions2;\n})(MouseInteractions || {});\nvar PointerTypes = /* @__PURE__ */ ((PointerTypes2) => {\n  PointerTypes2[PointerTypes2[\"Mouse\"] = 0] = \"Mouse\";\n  PointerTypes2[PointerTypes2[\"Pen\"] = 1] = \"Pen\";\n  PointerTypes2[PointerTypes2[\"Touch\"] = 2] = \"Touch\";\n  return PointerTypes2;\n})(PointerTypes || {});\nvar CanvasContext = /* @__PURE__ */ ((CanvasContext2) => {\n  CanvasContext2[CanvasContext2[\"2D\"] = 0] = \"2D\";\n  CanvasContext2[CanvasContext2[\"WebGL\"] = 1] = \"WebGL\";\n  CanvasContext2[CanvasContext2[\"WebGL2\"] = 2] = \"WebGL2\";\n  return CanvasContext2;\n})(CanvasContext || {});\nvar ReplayerEvents = /* @__PURE__ */ ((ReplayerEvents2) => {\n  ReplayerEvents2[\"Start\"] = \"start\";\n  ReplayerEvents2[\"Pause\"] = \"pause\";\n  ReplayerEvents2[\"Resume\"] = \"resume\";\n  ReplayerEvents2[\"Resize\"] = \"resize\";\n  ReplayerEvents2[\"Finish\"] = \"finish\";\n  ReplayerEvents2[\"FullsnapshotRebuilded\"] = \"fullsnapshot-rebuilded\";\n  ReplayerEvents2[\"LoadStylesheetStart\"] = \"load-stylesheet-start\";\n  ReplayerEvents2[\"LoadStylesheetEnd\"] = \"load-stylesheet-end\";\n  ReplayerEvents2[\"SkipStart\"] = \"skip-start\";\n  ReplayerEvents2[\"SkipEnd\"] = \"skip-end\";\n  ReplayerEvents2[\"MouseInteraction\"] = \"mouse-interaction\";\n  ReplayerEvents2[\"EventCast\"] = \"event-cast\";\n  ReplayerEvents2[\"CustomEvent\"] = \"custom-event\";\n  ReplayerEvents2[\"Flush\"] = \"flush\";\n  ReplayerEvents2[\"StateChange\"] = \"state-change\";\n  ReplayerEvents2[\"PlayBack\"] = \"play-back\";\n  ReplayerEvents2[\"Destroy\"] = \"destroy\";\n  return ReplayerEvents2;\n})(ReplayerEvents || {});\n\nexport { CanvasContext, EventType, IncrementalSource, MouseInteractions, PointerTypes, ReplayerEvents };\n","var NodeType$1;\r\n(function (NodeType) {\r\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\r\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\r\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\r\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\r\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\r\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\r\n})(NodeType$1 || (NodeType$1 = {}));\nclass Mirror$1 {\r\n    constructor() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n    getId(n) {\r\n        if (!n)\r\n            return -1;\r\n        const id = this.getMeta(n)?.id;\r\n        return id ?? -1;\r\n    }\r\n    getNode(id) {\r\n        return this.idNodeMap.get(id) || null;\r\n    }\r\n    getIds() {\r\n        return Array.from(this.idNodeMap.keys());\r\n    }\r\n    getMeta(n) {\r\n        return this.nodeMetaMap.get(n) || null;\r\n    }\r\n    removeNodeFromMap(n) {\r\n        const id = this.getId(n);\r\n        this.idNodeMap.delete(id);\r\n        if (n.childNodes) {\r\n            n.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\r\n        }\r\n    }\r\n    has(id) {\r\n        return this.idNodeMap.has(id);\r\n    }\r\n    hasNode(node) {\r\n        return this.nodeMetaMap.has(node);\r\n    }\r\n    add(n, meta) {\r\n        const id = meta.id;\r\n        this.idNodeMap.set(id, n);\r\n        this.nodeMetaMap.set(n, meta);\r\n    }\r\n    replace(id, n) {\r\n        const oldNode = this.getNode(id);\r\n        if (oldNode) {\r\n            const meta = this.nodeMetaMap.get(oldNode);\r\n            if (meta)\r\n                this.nodeMetaMap.set(n, meta);\r\n        }\r\n        this.idNodeMap.set(id, n);\r\n    }\r\n    reset() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n}\r\nfunction createMirror$1() {\r\n    return new Mirror$1();\r\n}\n\nfunction parseCSSText(cssText) {\r\n    const res = {};\r\n    const listDelimiter = /;(?![^(]*\\))/g;\r\n    const propertyDelimiter = /:(.+)/;\r\n    const comment = /\\/\\*.*?\\*\\//g;\r\n    cssText\r\n        .replace(comment, '')\r\n        .split(listDelimiter)\r\n        .forEach(function (item) {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiter);\r\n            tmp.length > 1 && (res[camelize(tmp[0].trim())] = tmp[1].trim());\r\n        }\r\n    });\r\n    return res;\r\n}\r\nfunction toCSSText(style) {\r\n    const properties = [];\r\n    for (const name in style) {\r\n        const value = style[name];\r\n        if (typeof value !== 'string')\r\n            continue;\r\n        const normalizedName = hyphenate(name);\r\n        properties.push(`${normalizedName}: ${value};`);\r\n    }\r\n    return properties.join(' ');\r\n}\r\nconst camelizeRE = /-([a-z])/g;\r\nconst CUSTOM_PROPERTY_REGEX = /^--[a-zA-Z0-9-]+$/;\r\nconst camelize = (str) => {\r\n    if (CUSTOM_PROPERTY_REGEX.test(str))\r\n        return str;\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n};\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\nconst hyphenate = (str) => {\r\n    return str.replace(hyphenateRE, '-$1').toLowerCase();\r\n};\n\nclass BaseRRNode {\r\n    constructor(..._args) {\r\n        this.parentElement = null;\r\n        this.parentNode = null;\r\n        this.firstChild = null;\r\n        this.lastChild = null;\r\n        this.previousSibling = null;\r\n        this.nextSibling = null;\r\n        this.ELEMENT_NODE = NodeType.ELEMENT_NODE;\r\n        this.TEXT_NODE = NodeType.TEXT_NODE;\r\n    }\r\n    get childNodes() {\r\n        const childNodes = [];\r\n        let childIterator = this.firstChild;\r\n        while (childIterator) {\r\n            childNodes.push(childIterator);\r\n            childIterator = childIterator.nextSibling;\r\n        }\r\n        return childNodes;\r\n    }\r\n    contains(node) {\r\n        if (!(node instanceof BaseRRNode))\r\n            return false;\r\n        else if (node.ownerDocument !== this.ownerDocument)\r\n            return false;\r\n        else if (node === this)\r\n            return true;\r\n        while (node.parentNode) {\r\n            if (node.parentNode === this)\r\n                return true;\r\n            node = node.parentNode;\r\n        }\r\n        return false;\r\n    }\r\n    appendChild(_newChild) {\r\n        throw new Error(`RRDomException: Failed to execute 'appendChild' on 'RRNode': This RRNode type does not support this method.`);\r\n    }\r\n    insertBefore(_newChild, _refChild) {\r\n        throw new Error(`RRDomException: Failed to execute 'insertBefore' on 'RRNode': This RRNode type does not support this method.`);\r\n    }\r\n    removeChild(_node) {\r\n        throw new Error(`RRDomException: Failed to execute 'removeChild' on 'RRNode': This RRNode type does not support this method.`);\r\n    }\r\n    toString() {\r\n        return 'RRNode';\r\n    }\r\n}\r\nfunction BaseRRDocumentImpl(RRNodeClass) {\r\n    return class BaseRRDocument extends RRNodeClass {\r\n        constructor(...args) {\r\n            super(args);\r\n            this.nodeType = NodeType.DOCUMENT_NODE;\r\n            this.nodeName = '#document';\r\n            this.compatMode = 'CSS1Compat';\r\n            this.RRNodeType = NodeType$1.Document;\r\n            this.textContent = null;\r\n            this.ownerDocument = this;\r\n        }\r\n        get documentElement() {\r\n            return (this.childNodes.find((node) => node.RRNodeType === NodeType$1.Element &&\r\n                node.tagName === 'HTML') || null);\r\n        }\r\n        get body() {\r\n            return (this.documentElement?.childNodes.find((node) => node.RRNodeType === NodeType$1.Element &&\r\n                node.tagName === 'BODY') || null);\r\n        }\r\n        get head() {\r\n            return (this.documentElement?.childNodes.find((node) => node.RRNodeType === NodeType$1.Element &&\r\n                node.tagName === 'HEAD') || null);\r\n        }\r\n        get implementation() {\r\n            return this;\r\n        }\r\n        get firstElementChild() {\r\n            return this.documentElement;\r\n        }\r\n        appendChild(newChild) {\r\n            const nodeType = newChild.RRNodeType;\r\n            if (nodeType === NodeType$1.Element ||\r\n                nodeType === NodeType$1.DocumentType) {\r\n                if (this.childNodes.some((s) => s.RRNodeType === nodeType)) {\r\n                    throw new Error(`RRDomException: Failed to execute 'appendChild' on 'RRNode': Only one ${nodeType === NodeType$1.Element ? 'RRElement' : 'RRDoctype'} on RRDocument allowed.`);\r\n                }\r\n            }\r\n            const child = appendChild(this, newChild);\r\n            child.parentElement = null;\r\n            return child;\r\n        }\r\n        insertBefore(newChild, refChild) {\r\n            const nodeType = newChild.RRNodeType;\r\n            if (nodeType === NodeType$1.Element ||\r\n                nodeType === NodeType$1.DocumentType) {\r\n                if (this.childNodes.some((s) => s.RRNodeType === nodeType)) {\r\n                    throw new Error(`RRDomException: Failed to execute 'insertBefore' on 'RRNode': Only one ${nodeType === NodeType$1.Element ? 'RRElement' : 'RRDoctype'} on RRDocument allowed.`);\r\n                }\r\n            }\r\n            const child = insertBefore(this, newChild, refChild);\r\n            child.parentElement = null;\r\n            return child;\r\n        }\r\n        removeChild(node) {\r\n            return removeChild(this, node);\r\n        }\r\n        open() {\r\n            this.firstChild = null;\r\n            this.lastChild = null;\r\n        }\r\n        close() {\r\n        }\r\n        write(content) {\r\n            let publicId;\r\n            if (content ===\r\n                '<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\">')\r\n                publicId = '-//W3C//DTD XHTML 1.0 Transitional//EN';\r\n            else if (content ===\r\n                '<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\">')\r\n                publicId = '-//W3C//DTD HTML 4.0 Transitional//EN';\r\n            if (publicId) {\r\n                const doctype = this.createDocumentType('html', publicId, '');\r\n                this.open();\r\n                this.appendChild(doctype);\r\n            }\r\n        }\r\n        createDocument(_namespace, _qualifiedName, _doctype) {\r\n            return new BaseRRDocument();\r\n        }\r\n        createDocumentType(qualifiedName, publicId, systemId) {\r\n            const doctype = new (BaseRRDocumentTypeImpl(BaseRRNode))(qualifiedName, publicId, systemId);\r\n            doctype.ownerDocument = this;\r\n            return doctype;\r\n        }\r\n        createElement(tagName) {\r\n            const element = new (BaseRRElementImpl(BaseRRNode))(tagName);\r\n            element.ownerDocument = this;\r\n            return element;\r\n        }\r\n        createElementNS(_namespaceURI, qualifiedName) {\r\n            return this.createElement(qualifiedName);\r\n        }\r\n        createTextNode(data) {\r\n            const text = new (BaseRRTextImpl(BaseRRNode))(data);\r\n            text.ownerDocument = this;\r\n            return text;\r\n        }\r\n        createComment(data) {\r\n            const comment = new (BaseRRCommentImpl(BaseRRNode))(data);\r\n            comment.ownerDocument = this;\r\n            return comment;\r\n        }\r\n        createCDATASection(data) {\r\n            const CDATASection = new (BaseRRCDATASectionImpl(BaseRRNode))(data);\r\n            CDATASection.ownerDocument = this;\r\n            return CDATASection;\r\n        }\r\n        toString() {\r\n            return 'RRDocument';\r\n        }\r\n    };\r\n}\r\nfunction BaseRRDocumentTypeImpl(RRNodeClass) {\r\n    return class BaseRRDocumentType extends RRNodeClass {\r\n        constructor(qualifiedName, publicId, systemId) {\r\n            super();\r\n            this.nodeType = NodeType.DOCUMENT_TYPE_NODE;\r\n            this.RRNodeType = NodeType$1.DocumentType;\r\n            this.name = qualifiedName;\r\n            this.publicId = publicId;\r\n            this.systemId = systemId;\r\n            this.nodeName = qualifiedName;\r\n            this.textContent = null;\r\n        }\r\n        toString() {\r\n            return 'RRDocumentType';\r\n        }\r\n    };\r\n}\r\nfunction BaseRRElementImpl(RRNodeClass) {\r\n    return class BaseRRElement extends RRNodeClass {\r\n        constructor(tagName) {\r\n            super();\r\n            this.nodeType = NodeType.ELEMENT_NODE;\r\n            this.RRNodeType = NodeType$1.Element;\r\n            this.attributes = {};\r\n            this.shadowRoot = null;\r\n            this.tagName = tagName.toUpperCase();\r\n            this.nodeName = tagName.toUpperCase();\r\n        }\r\n        get textContent() {\r\n            let result = '';\r\n            this.childNodes.forEach((node) => (result += node.textContent));\r\n            return result;\r\n        }\r\n        set textContent(textContent) {\r\n            this.firstChild = null;\r\n            this.lastChild = null;\r\n            this.appendChild(this.ownerDocument.createTextNode(textContent));\r\n        }\r\n        get classList() {\r\n            return new ClassList(this.attributes.class, (newClassName) => {\r\n                this.attributes.class = newClassName;\r\n            });\r\n        }\r\n        get id() {\r\n            return this.attributes.id || '';\r\n        }\r\n        get className() {\r\n            return this.attributes.class || '';\r\n        }\r\n        get style() {\r\n            const style = (this.attributes.style ? parseCSSText(this.attributes.style) : {});\r\n            const hyphenateRE = /\\B([A-Z])/g;\r\n            style.setProperty = (name, value, priority) => {\r\n                if (hyphenateRE.test(name))\r\n                    return;\r\n                const normalizedName = camelize(name);\r\n                if (!value)\r\n                    delete style[normalizedName];\r\n                else\r\n                    style[normalizedName] = value;\r\n                if (priority === 'important')\r\n                    style[normalizedName] += ' !important';\r\n                this.attributes.style = toCSSText(style);\r\n            };\r\n            style.removeProperty = (name) => {\r\n                if (hyphenateRE.test(name))\r\n                    return '';\r\n                const normalizedName = camelize(name);\r\n                const value = style[normalizedName] || '';\r\n                delete style[normalizedName];\r\n                this.attributes.style = toCSSText(style);\r\n                return value;\r\n            };\r\n            return style;\r\n        }\r\n        getAttribute(name) {\r\n            return this.attributes[name] || null;\r\n        }\r\n        setAttribute(name, attribute) {\r\n            this.attributes[name] = attribute;\r\n        }\r\n        setAttributeNS(_namespace, qualifiedName, value) {\r\n            this.setAttribute(qualifiedName, value);\r\n        }\r\n        removeAttribute(name) {\r\n            delete this.attributes[name];\r\n        }\r\n        appendChild(newChild) {\r\n            return appendChild(this, newChild);\r\n        }\r\n        insertBefore(newChild, refChild) {\r\n            return insertBefore(this, newChild, refChild);\r\n        }\r\n        removeChild(node) {\r\n            return removeChild(this, node);\r\n        }\r\n        attachShadow(_init) {\r\n            const shadowRoot = this.ownerDocument.createElement('SHADOWROOT');\r\n            this.shadowRoot = shadowRoot;\r\n            return shadowRoot;\r\n        }\r\n        dispatchEvent(_event) {\r\n            return true;\r\n        }\r\n        toString() {\r\n            let attributeString = '';\r\n            for (const attribute in this.attributes) {\r\n                attributeString += `${attribute}=\"${this.attributes[attribute]}\" `;\r\n            }\r\n            return `${this.tagName} ${attributeString}`;\r\n        }\r\n    };\r\n}\r\nfunction BaseRRMediaElementImpl(RRElementClass) {\r\n    return class BaseRRMediaElement extends RRElementClass {\r\n        attachShadow(_init) {\r\n            throw new Error(`RRDomException: Failed to execute 'attachShadow' on 'RRElement': This RRElement does not support attachShadow`);\r\n        }\r\n        play() {\r\n            this.paused = false;\r\n        }\r\n        pause() {\r\n            this.paused = true;\r\n        }\r\n    };\r\n}\r\nfunction BaseRRTextImpl(RRNodeClass) {\r\n    return class BaseRRText extends RRNodeClass {\r\n        constructor(data) {\r\n            super();\r\n            this.nodeType = NodeType.TEXT_NODE;\r\n            this.nodeName = '#text';\r\n            this.RRNodeType = NodeType$1.Text;\r\n            this.data = data;\r\n        }\r\n        get textContent() {\r\n            return this.data;\r\n        }\r\n        set textContent(textContent) {\r\n            this.data = textContent;\r\n        }\r\n        toString() {\r\n            return `RRText text=${JSON.stringify(this.data)}`;\r\n        }\r\n    };\r\n}\r\nfunction BaseRRCommentImpl(RRNodeClass) {\r\n    return class BaseRRComment extends RRNodeClass {\r\n        constructor(data) {\r\n            super();\r\n            this.nodeType = NodeType.COMMENT_NODE;\r\n            this.nodeName = '#comment';\r\n            this.RRNodeType = NodeType$1.Comment;\r\n            this.data = data;\r\n        }\r\n        get textContent() {\r\n            return this.data;\r\n        }\r\n        set textContent(textContent) {\r\n            this.data = textContent;\r\n        }\r\n        toString() {\r\n            return `RRComment text=${JSON.stringify(this.data)}`;\r\n        }\r\n    };\r\n}\r\nfunction BaseRRCDATASectionImpl(RRNodeClass) {\r\n    return class BaseRRCDATASection extends RRNodeClass {\r\n        constructor(data) {\r\n            super();\r\n            this.nodeName = '#cdata-section';\r\n            this.nodeType = NodeType.CDATA_SECTION_NODE;\r\n            this.RRNodeType = NodeType$1.CDATA;\r\n            this.data = data;\r\n        }\r\n        get textContent() {\r\n            return this.data;\r\n        }\r\n        set textContent(textContent) {\r\n            this.data = textContent;\r\n        }\r\n        toString() {\r\n            return `RRCDATASection data=${JSON.stringify(this.data)}`;\r\n        }\r\n    };\r\n}\r\nclass ClassList {\r\n    constructor(classText, onChange) {\r\n        this.classes = [];\r\n        this.add = (...classNames) => {\r\n            for (const item of classNames) {\r\n                const className = String(item);\r\n                if (this.classes.indexOf(className) >= 0)\r\n                    continue;\r\n                this.classes.push(className);\r\n            }\r\n            this.onChange && this.onChange(this.classes.join(' '));\r\n        };\r\n        this.remove = (...classNames) => {\r\n            this.classes = this.classes.filter((item) => classNames.indexOf(item) === -1);\r\n            this.onChange && this.onChange(this.classes.join(' '));\r\n        };\r\n        if (classText) {\r\n            const classes = classText.trim().split(/\\s+/);\r\n            this.classes.push(...classes);\r\n        }\r\n        this.onChange = onChange;\r\n    }\r\n}\r\nfunction appendChild(parent, newChild) {\r\n    if (newChild.parentNode)\r\n        newChild.parentNode.removeChild(newChild);\r\n    if (parent.lastChild) {\r\n        parent.lastChild.nextSibling = newChild;\r\n        newChild.previousSibling = parent.lastChild;\r\n    }\r\n    else {\r\n        parent.firstChild = newChild;\r\n        newChild.previousSibling = null;\r\n    }\r\n    parent.lastChild = newChild;\r\n    newChild.nextSibling = null;\r\n    newChild.parentNode = parent;\r\n    newChild.parentElement = parent;\r\n    newChild.ownerDocument = parent.ownerDocument;\r\n    return newChild;\r\n}\r\nfunction insertBefore(parent, newChild, refChild) {\r\n    if (!refChild)\r\n        return appendChild(parent, newChild);\r\n    if (refChild.parentNode !== parent)\r\n        throw new Error(\"Failed to execute 'insertBefore' on 'RRNode': The RRNode before which the new node is to be inserted is not a child of this RRNode.\");\r\n    if (newChild === refChild)\r\n        return newChild;\r\n    if (newChild.parentNode)\r\n        newChild.parentNode.removeChild(newChild);\r\n    newChild.previousSibling = refChild.previousSibling;\r\n    refChild.previousSibling = newChild;\r\n    newChild.nextSibling = refChild;\r\n    if (newChild.previousSibling)\r\n        newChild.previousSibling.nextSibling = newChild;\r\n    else\r\n        parent.firstChild = newChild;\r\n    newChild.parentElement = parent;\r\n    newChild.parentNode = parent;\r\n    newChild.ownerDocument = parent.ownerDocument;\r\n    return newChild;\r\n}\r\nfunction removeChild(parent, child) {\r\n    if (child.parentNode !== parent)\r\n        throw new Error(\"Failed to execute 'removeChild' on 'RRNode': The RRNode to be removed is not a child of this RRNode.\");\r\n    if (child.previousSibling)\r\n        child.previousSibling.nextSibling = child.nextSibling;\r\n    else\r\n        parent.firstChild = child.nextSibling;\r\n    if (child.nextSibling)\r\n        child.nextSibling.previousSibling = child.previousSibling;\r\n    else\r\n        parent.lastChild = child.previousSibling;\r\n    child.previousSibling = null;\r\n    child.nextSibling = null;\r\n    child.parentElement = null;\r\n    child.parentNode = null;\r\n    return child;\r\n}\r\nvar NodeType;\r\n(function (NodeType) {\r\n    NodeType[NodeType[\"PLACEHOLDER\"] = 0] = \"PLACEHOLDER\";\r\n    NodeType[NodeType[\"ELEMENT_NODE\"] = 1] = \"ELEMENT_NODE\";\r\n    NodeType[NodeType[\"ATTRIBUTE_NODE\"] = 2] = \"ATTRIBUTE_NODE\";\r\n    NodeType[NodeType[\"TEXT_NODE\"] = 3] = \"TEXT_NODE\";\r\n    NodeType[NodeType[\"CDATA_SECTION_NODE\"] = 4] = \"CDATA_SECTION_NODE\";\r\n    NodeType[NodeType[\"ENTITY_REFERENCE_NODE\"] = 5] = \"ENTITY_REFERENCE_NODE\";\r\n    NodeType[NodeType[\"ENTITY_NODE\"] = 6] = \"ENTITY_NODE\";\r\n    NodeType[NodeType[\"PROCESSING_INSTRUCTION_NODE\"] = 7] = \"PROCESSING_INSTRUCTION_NODE\";\r\n    NodeType[NodeType[\"COMMENT_NODE\"] = 8] = \"COMMENT_NODE\";\r\n    NodeType[NodeType[\"DOCUMENT_NODE\"] = 9] = \"DOCUMENT_NODE\";\r\n    NodeType[NodeType[\"DOCUMENT_TYPE_NODE\"] = 10] = \"DOCUMENT_TYPE_NODE\";\r\n    NodeType[NodeType[\"DOCUMENT_FRAGMENT_NODE\"] = 11] = \"DOCUMENT_FRAGMENT_NODE\";\r\n})(NodeType || (NodeType = {}));\n\nfunction getIFrameContentDocument(iframe) {\r\n    try {\r\n        return iframe.contentDocument;\r\n    }\r\n    catch (e) {\r\n    }\r\n}\r\nfunction getIFrameContentWindow(iframe) {\r\n    try {\r\n        return iframe.contentWindow;\r\n    }\r\n    catch (e) {\r\n    }\r\n}\n\nconst NAMESPACES = {\r\n    svg: 'http://www.w3.org/2000/svg',\r\n    'xlink:href': 'http://www.w3.org/1999/xlink',\r\n    xmlns: 'http://www.w3.org/2000/xmlns/',\r\n};\r\nconst SVGTagMap = {\r\n    altglyph: 'altGlyph',\r\n    altglyphdef: 'altGlyphDef',\r\n    altglyphitem: 'altGlyphItem',\r\n    animatecolor: 'animateColor',\r\n    animatemotion: 'animateMotion',\r\n    animatetransform: 'animateTransform',\r\n    clippath: 'clipPath',\r\n    feblend: 'feBlend',\r\n    fecolormatrix: 'feColorMatrix',\r\n    fecomponenttransfer: 'feComponentTransfer',\r\n    fecomposite: 'feComposite',\r\n    feconvolvematrix: 'feConvolveMatrix',\r\n    fediffuselighting: 'feDiffuseLighting',\r\n    fedisplacementmap: 'feDisplacementMap',\r\n    fedistantlight: 'feDistantLight',\r\n    fedropshadow: 'feDropShadow',\r\n    feflood: 'feFlood',\r\n    fefunca: 'feFuncA',\r\n    fefuncb: 'feFuncB',\r\n    fefuncg: 'feFuncG',\r\n    fefuncr: 'feFuncR',\r\n    fegaussianblur: 'feGaussianBlur',\r\n    feimage: 'feImage',\r\n    femerge: 'feMerge',\r\n    femergenode: 'feMergeNode',\r\n    femorphology: 'feMorphology',\r\n    feoffset: 'feOffset',\r\n    fepointlight: 'fePointLight',\r\n    fespecularlighting: 'feSpecularLighting',\r\n    fespotlight: 'feSpotLight',\r\n    fetile: 'feTile',\r\n    feturbulence: 'feTurbulence',\r\n    foreignobject: 'foreignObject',\r\n    glyphref: 'glyphRef',\r\n    lineargradient: 'linearGradient',\r\n    radialgradient: 'radialGradient',\r\n};\r\nlet createdNodeSet = null;\r\nfunction diff(oldTree, newTree, replayer, rrnodeMirror = newTree.mirror ||\r\n    newTree.ownerDocument.mirror) {\r\n    oldTree = diffBeforeUpdatingChildren(oldTree, newTree, replayer, rrnodeMirror);\r\n    diffChildren(oldTree, newTree, replayer, rrnodeMirror);\r\n    diffAfterUpdatingChildren(oldTree, newTree, replayer);\r\n}\r\nfunction diffBeforeUpdatingChildren(oldTree, newTree, replayer, rrnodeMirror) {\r\n    if (replayer.afterAppend && !createdNodeSet) {\r\n        createdNodeSet = new WeakSet();\r\n        setTimeout(() => {\r\n            createdNodeSet = null;\r\n        }, 0);\r\n    }\r\n    if (!sameNodeType(oldTree, newTree)) {\r\n        const calibratedOldTree = createOrGetNode(newTree, replayer.mirror, rrnodeMirror);\r\n        oldTree.parentNode?.replaceChild(calibratedOldTree, oldTree);\r\n        oldTree = calibratedOldTree;\r\n    }\r\n    switch (newTree.RRNodeType) {\r\n        case NodeType$1.Document: {\r\n            if (!nodeMatching(oldTree, newTree, replayer.mirror, rrnodeMirror)) {\r\n                const newMeta = rrnodeMirror.getMeta(newTree);\r\n                if (newMeta) {\r\n                    replayer.mirror.removeNodeFromMap(oldTree);\r\n                    oldTree.close();\r\n                    oldTree.open();\r\n                    replayer.mirror.add(oldTree, newMeta);\r\n                    createdNodeSet?.add(oldTree);\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        case NodeType$1.Element: {\r\n            const oldElement = oldTree;\r\n            const newRRElement = newTree;\r\n            switch (newRRElement.tagName) {\r\n                case 'IFRAME': {\r\n                    const oldContentDocument = getIFrameContentDocument(oldTree);\r\n                    if (!oldContentDocument)\r\n                        break;\r\n                    diff(oldContentDocument, newTree.contentDocument, replayer, rrnodeMirror);\r\n                    break;\r\n                }\r\n            }\r\n            if (newRRElement.shadowRoot) {\r\n                if (!oldElement.shadowRoot)\r\n                    oldElement.attachShadow({ mode: 'open' });\r\n                diffChildren(oldElement.shadowRoot, newRRElement.shadowRoot, replayer, rrnodeMirror);\r\n            }\r\n            diffProps(oldElement, newRRElement, rrnodeMirror);\r\n            break;\r\n        }\r\n    }\r\n    return oldTree;\r\n}\r\nfunction diffAfterUpdatingChildren(oldTree, newTree, replayer) {\r\n    switch (newTree.RRNodeType) {\r\n        case NodeType$1.Document: {\r\n            const scrollData = newTree.scrollData;\r\n            scrollData && replayer.applyScroll(scrollData, true);\r\n            break;\r\n        }\r\n        case NodeType$1.Element: {\r\n            const oldElement = oldTree;\r\n            const newRRElement = newTree;\r\n            newRRElement.scrollData &&\r\n                replayer.applyScroll(newRRElement.scrollData, true);\r\n            newRRElement.inputData && replayer.applyInput(newRRElement.inputData);\r\n            switch (newRRElement.tagName) {\r\n                case 'AUDIO':\r\n                case 'VIDEO': {\r\n                    const oldMediaElement = oldTree;\r\n                    const newMediaRRElement = newRRElement;\r\n                    if (newMediaRRElement.paused !== undefined)\r\n                        newMediaRRElement.paused\r\n                            ? void oldMediaElement.pause()\r\n                            : void oldMediaElement.play();\r\n                    if (newMediaRRElement.muted !== undefined)\r\n                        oldMediaElement.muted = newMediaRRElement.muted;\r\n                    if (newMediaRRElement.volume !== undefined)\r\n                        oldMediaElement.volume = newMediaRRElement.volume;\r\n                    if (newMediaRRElement.currentTime !== undefined)\r\n                        oldMediaElement.currentTime = newMediaRRElement.currentTime;\r\n                    if (newMediaRRElement.playbackRate !== undefined)\r\n                        oldMediaElement.playbackRate = newMediaRRElement.playbackRate;\r\n                    break;\r\n                }\r\n                case 'CANVAS': {\r\n                    const rrCanvasElement = newTree;\r\n                    if (rrCanvasElement.rr_dataURL !== null) {\r\n                        const image = document.createElement('img');\r\n                        image.onload = () => {\r\n                            const ctx = oldElement.getContext('2d');\r\n                            if (ctx) {\r\n                                ctx.drawImage(image, 0, 0, image.width, image.height);\r\n                            }\r\n                        };\r\n                        image.src = rrCanvasElement.rr_dataURL;\r\n                    }\r\n                    rrCanvasElement.canvasMutations.forEach((canvasMutation) => replayer.applyCanvas(canvasMutation.event, canvasMutation.mutation, oldTree));\r\n                    break;\r\n                }\r\n                case 'STYLE': {\r\n                    const styleSheet = oldElement.sheet;\r\n                    styleSheet &&\r\n                        newTree.rules.forEach((data) => replayer.applyStyleSheetMutation(data, styleSheet));\r\n                    break;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n        case NodeType$1.Text:\r\n        case NodeType$1.Comment:\r\n        case NodeType$1.CDATA: {\r\n            if (oldTree.textContent !==\r\n                newTree.data)\r\n                oldTree.textContent = newTree.data;\r\n            break;\r\n        }\r\n    }\r\n    if (createdNodeSet?.has(oldTree)) {\r\n        createdNodeSet.delete(oldTree);\r\n        replayer.afterAppend?.(oldTree, replayer.mirror.getId(oldTree));\r\n    }\r\n}\r\nfunction diffProps(oldTree, newTree, rrnodeMirror) {\r\n    const oldAttributes = oldTree.attributes;\r\n    const newAttributes = newTree.attributes;\r\n    for (const name in newAttributes) {\r\n        const newValue = newAttributes[name];\r\n        const sn = rrnodeMirror.getMeta(newTree);\r\n        if (sn?.isSVG && NAMESPACES[name])\r\n            oldTree.setAttributeNS(NAMESPACES[name], name, newValue);\r\n        else if (newTree.tagName === 'CANVAS' && name === 'rr_dataURL') {\r\n            const image = document.createElement('img');\r\n            image.src = newValue;\r\n            image.onload = () => {\r\n                const ctx = oldTree.getContext('2d');\r\n                if (ctx) {\r\n                    ctx.drawImage(image, 0, 0, image.width, image.height);\r\n                }\r\n            };\r\n        }\r\n        else if (newTree.tagName === 'IFRAME' && name === 'srcdoc')\r\n            continue;\r\n        else {\r\n            try {\r\n                oldTree.setAttribute(name, newValue);\r\n            }\r\n            catch (err) {\r\n                console.warn(err);\r\n            }\r\n        }\r\n    }\r\n    for (const { name } of Array.from(oldAttributes))\r\n        if (!(name in newAttributes))\r\n            oldTree.removeAttribute(name);\r\n    newTree.scrollLeft && (oldTree.scrollLeft = newTree.scrollLeft);\r\n    newTree.scrollTop && (oldTree.scrollTop = newTree.scrollTop);\r\n}\r\nfunction diffChildren(oldTree, newTree, replayer, rrnodeMirror) {\r\n    const oldChildren = Array.from(oldTree.childNodes);\r\n    const newChildren = newTree.childNodes;\r\n    if (oldChildren.length === 0 && newChildren.length === 0)\r\n        return;\r\n    let oldStartIndex = 0, oldEndIndex = oldChildren.length - 1, newStartIndex = 0, newEndIndex = newChildren.length - 1;\r\n    let oldStartNode = oldChildren[oldStartIndex], oldEndNode = oldChildren[oldEndIndex], newStartNode = newChildren[newStartIndex], newEndNode = newChildren[newEndIndex];\r\n    let oldIdToIndex = undefined, indexInOld = undefined;\r\n    while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\r\n        if (oldStartNode === undefined) {\r\n            oldStartNode = oldChildren[++oldStartIndex];\r\n        }\r\n        else if (oldEndNode === undefined) {\r\n            oldEndNode = oldChildren[--oldEndIndex];\r\n        }\r\n        else if (nodeMatching(oldStartNode, newStartNode, replayer.mirror, rrnodeMirror)) {\r\n            oldStartNode = oldChildren[++oldStartIndex];\r\n            newStartNode = newChildren[++newStartIndex];\r\n        }\r\n        else if (nodeMatching(oldEndNode, newEndNode, replayer.mirror, rrnodeMirror)) {\r\n            oldEndNode = oldChildren[--oldEndIndex];\r\n            newEndNode = newChildren[--newEndIndex];\r\n        }\r\n        else if (nodeMatching(oldStartNode, newEndNode, replayer.mirror, rrnodeMirror)) {\r\n            try {\r\n                oldTree.insertBefore(oldStartNode, oldEndNode.nextSibling);\r\n            }\r\n            catch (e) {\r\n                console.warn(e);\r\n            }\r\n            oldStartNode = oldChildren[++oldStartIndex];\r\n            newEndNode = newChildren[--newEndIndex];\r\n        }\r\n        else if (nodeMatching(oldEndNode, newStartNode, replayer.mirror, rrnodeMirror)) {\r\n            try {\r\n                oldTree.insertBefore(oldEndNode, oldStartNode);\r\n            }\r\n            catch (e) {\r\n                console.warn(e);\r\n            }\r\n            oldEndNode = oldChildren[--oldEndIndex];\r\n            newStartNode = newChildren[++newStartIndex];\r\n        }\r\n        else {\r\n            if (!oldIdToIndex) {\r\n                oldIdToIndex = {};\r\n                for (let i = oldStartIndex; i <= oldEndIndex; i++) {\r\n                    const oldChild = oldChildren[i];\r\n                    if (oldChild && replayer.mirror.hasNode(oldChild))\r\n                        oldIdToIndex[replayer.mirror.getId(oldChild)] = i;\r\n                }\r\n            }\r\n            indexInOld = oldIdToIndex[rrnodeMirror.getId(newStartNode)];\r\n            const nodeToMove = oldChildren[indexInOld];\r\n            if (indexInOld !== undefined &&\r\n                nodeToMove &&\r\n                nodeMatching(nodeToMove, newStartNode, replayer.mirror, rrnodeMirror)) {\r\n                try {\r\n                    oldTree.insertBefore(nodeToMove, oldStartNode);\r\n                }\r\n                catch (e) {\r\n                    console.warn(e);\r\n                }\r\n                oldChildren[indexInOld] = undefined;\r\n            }\r\n            else {\r\n                const newNode = createOrGetNode(newStartNode, replayer.mirror, rrnodeMirror);\r\n                if (oldTree.nodeName === '#document' &&\r\n                    oldStartNode &&\r\n                    ((newNode.nodeType === newNode.DOCUMENT_TYPE_NODE &&\r\n                        oldStartNode.nodeType === oldStartNode.DOCUMENT_TYPE_NODE) ||\r\n                        (newNode.nodeType === newNode.ELEMENT_NODE &&\r\n                            oldStartNode.nodeType === oldStartNode.ELEMENT_NODE))) {\r\n                    oldTree.removeChild(oldStartNode);\r\n                    replayer.mirror.removeNodeFromMap(oldStartNode);\r\n                    oldStartNode = oldChildren[++oldStartIndex];\r\n                }\r\n                try {\r\n                    oldTree.insertBefore(newNode, oldStartNode || null);\r\n                }\r\n                catch (e) {\r\n                    console.warn(e);\r\n                }\r\n            }\r\n            newStartNode = newChildren[++newStartIndex];\r\n        }\r\n    }\r\n    if (oldStartIndex > oldEndIndex) {\r\n        const referenceRRNode = newChildren[newEndIndex + 1];\r\n        let referenceNode = null;\r\n        if (referenceRRNode)\r\n            referenceNode = replayer.mirror.getNode(rrnodeMirror.getId(referenceRRNode));\r\n        for (; newStartIndex <= newEndIndex; ++newStartIndex) {\r\n            const newNode = createOrGetNode(newChildren[newStartIndex], replayer.mirror, rrnodeMirror);\r\n            try {\r\n                oldTree.insertBefore(newNode, referenceNode);\r\n            }\r\n            catch (e) {\r\n                console.warn(e);\r\n            }\r\n        }\r\n    }\r\n    else if (newStartIndex > newEndIndex) {\r\n        for (; oldStartIndex <= oldEndIndex; oldStartIndex++) {\r\n            const node = oldChildren[oldStartIndex];\r\n            if (!node || node.parentNode !== oldTree)\r\n                continue;\r\n            try {\r\n                oldTree.removeChild(node);\r\n                replayer.mirror.removeNodeFromMap(node);\r\n            }\r\n            catch (e) {\r\n                console.warn(e);\r\n            }\r\n        }\r\n    }\r\n    let oldChild = oldTree.firstChild;\r\n    let newChild = newTree.firstChild;\r\n    while (oldChild !== null && newChild !== null) {\r\n        diff(oldChild, newChild, replayer, rrnodeMirror);\r\n        oldChild = oldChild.nextSibling;\r\n        newChild = newChild.nextSibling;\r\n    }\r\n}\r\nfunction createOrGetNode(rrNode, domMirror, rrnodeMirror) {\r\n    const nodeId = rrnodeMirror.getId(rrNode);\r\n    const sn = rrnodeMirror.getMeta(rrNode);\r\n    let node = null;\r\n    if (nodeId > -1)\r\n        node = domMirror.getNode(nodeId);\r\n    if (node !== null && sameNodeType(node, rrNode))\r\n        return node;\r\n    switch (rrNode.RRNodeType) {\r\n        case NodeType$1.Document:\r\n            node = new Document();\r\n            break;\r\n        case NodeType$1.DocumentType:\r\n            node = document.implementation.createDocumentType(rrNode.name, rrNode.publicId, rrNode.systemId);\r\n            break;\r\n        case NodeType$1.Element: {\r\n            let tagName = rrNode.tagName.toLowerCase();\r\n            tagName = SVGTagMap[tagName] || tagName;\r\n            if (sn && 'isSVG' in sn && sn?.isSVG) {\r\n                node = document.createElementNS(NAMESPACES['svg'], tagName);\r\n            }\r\n            else\r\n                node = document.createElement(rrNode.tagName);\r\n            break;\r\n        }\r\n        case NodeType$1.Text:\r\n            node = document.createTextNode(rrNode.data);\r\n            break;\r\n        case NodeType$1.Comment:\r\n            node = document.createComment(rrNode.data);\r\n            break;\r\n        case NodeType$1.CDATA:\r\n            node = document.createCDATASection(rrNode.data);\r\n            break;\r\n    }\r\n    if (sn)\r\n        domMirror.add(node, { ...sn });\r\n    try {\r\n        createdNodeSet?.add(node);\r\n    }\r\n    catch (e) {\r\n    }\r\n    return node;\r\n}\r\nfunction sameNodeType(node1, node2) {\r\n    if (node1.nodeType !== node2.nodeType)\r\n        return false;\r\n    return (node1.nodeType !== node1.ELEMENT_NODE ||\r\n        node1.tagName.toUpperCase() ===\r\n            node2.tagName);\r\n}\r\nfunction nodeMatching(node1, node2, domMirror, rrdomMirror) {\r\n    const node1Id = domMirror.getId(node1);\r\n    const node2Id = rrdomMirror.getId(node2);\r\n    if (node1Id === -1 || node1Id !== node2Id)\r\n        return false;\r\n    return sameNodeType(node1, node2);\r\n}\n\nclass RRDocument extends BaseRRDocumentImpl(BaseRRNode) {\r\n    get unserializedId() {\r\n        return this._unserializedId--;\r\n    }\r\n    constructor(mirror) {\r\n        super();\r\n        this.UNSERIALIZED_STARTING_ID = -2;\r\n        this._unserializedId = this.UNSERIALIZED_STARTING_ID;\r\n        this.mirror = createMirror();\r\n        this.scrollData = null;\r\n        if (mirror) {\r\n            this.mirror = mirror;\r\n        }\r\n    }\r\n    createDocument(_namespace, _qualifiedName, _doctype) {\r\n        return new RRDocument();\r\n    }\r\n    createDocumentType(qualifiedName, publicId, systemId) {\r\n        const documentTypeNode = new RRDocumentType(qualifiedName, publicId, systemId);\r\n        documentTypeNode.ownerDocument = this;\r\n        return documentTypeNode;\r\n    }\r\n    createElement(tagName) {\r\n        const upperTagName = tagName.toUpperCase();\r\n        let element;\r\n        switch (upperTagName) {\r\n            case 'AUDIO':\r\n            case 'VIDEO':\r\n                element = new RRMediaElement(upperTagName);\r\n                break;\r\n            case 'IFRAME':\r\n                element = new RRIFrameElement(upperTagName, this.mirror);\r\n                break;\r\n            case 'CANVAS':\r\n                element = new RRCanvasElement(upperTagName);\r\n                break;\r\n            case 'STYLE':\r\n                element = new RRStyleElement(upperTagName);\r\n                break;\r\n            default:\r\n                element = new RRElement(upperTagName);\r\n                break;\r\n        }\r\n        element.ownerDocument = this;\r\n        return element;\r\n    }\r\n    createComment(data) {\r\n        const commentNode = new RRComment(data);\r\n        commentNode.ownerDocument = this;\r\n        return commentNode;\r\n    }\r\n    createCDATASection(data) {\r\n        const sectionNode = new RRCDATASection(data);\r\n        sectionNode.ownerDocument = this;\r\n        return sectionNode;\r\n    }\r\n    createTextNode(data) {\r\n        const textNode = new RRText(data);\r\n        textNode.ownerDocument = this;\r\n        return textNode;\r\n    }\r\n    destroyTree() {\r\n        this.firstChild = null;\r\n        this.lastChild = null;\r\n        this.mirror.reset();\r\n    }\r\n    open() {\r\n        super.open();\r\n        this._unserializedId = this.UNSERIALIZED_STARTING_ID;\r\n    }\r\n}\r\nconst RRDocumentType = BaseRRDocumentTypeImpl(BaseRRNode);\r\nclass RRElement extends BaseRRElementImpl(BaseRRNode) {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.inputData = null;\r\n        this.scrollData = null;\r\n    }\r\n}\r\nclass RRMediaElement extends BaseRRMediaElementImpl(RRElement) {\r\n}\r\nclass RRCanvasElement extends RRElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.rr_dataURL = null;\r\n        this.canvasMutations = [];\r\n    }\r\n    getContext() {\r\n        return null;\r\n    }\r\n}\r\nclass RRStyleElement extends RRElement {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.rules = [];\r\n    }\r\n}\r\nclass RRIFrameElement extends RRElement {\r\n    constructor(upperTagName, mirror) {\r\n        super(upperTagName);\r\n        this.contentDocument = new RRDocument();\r\n        this.contentDocument.mirror = mirror;\r\n    }\r\n}\r\nconst RRText = BaseRRTextImpl(BaseRRNode);\r\nconst RRComment = BaseRRCommentImpl(BaseRRNode);\r\nconst RRCDATASection = BaseRRCDATASectionImpl(BaseRRNode);\r\nfunction getValidTagName(element) {\r\n    if (element instanceof HTMLFormElement) {\r\n        return 'FORM';\r\n    }\r\n    return element.tagName.toUpperCase();\r\n}\r\nfunction buildFromNode(node, rrdom, domMirror, parentRRNode) {\r\n    let rrNode;\r\n    switch (node.nodeType) {\r\n        case NodeType.DOCUMENT_NODE:\r\n            if (parentRRNode && parentRRNode.nodeName === 'IFRAME')\r\n                rrNode = parentRRNode.contentDocument;\r\n            else {\r\n                rrNode = rrdom;\r\n                rrNode.compatMode = node.compatMode;\r\n            }\r\n            break;\r\n        case NodeType.DOCUMENT_TYPE_NODE: {\r\n            const documentType = node;\r\n            rrNode = rrdom.createDocumentType(documentType.name, documentType.publicId, documentType.systemId);\r\n            break;\r\n        }\r\n        case NodeType.ELEMENT_NODE: {\r\n            const elementNode = node;\r\n            const tagName = getValidTagName(elementNode);\r\n            rrNode = rrdom.createElement(tagName);\r\n            const rrElement = rrNode;\r\n            for (const { name, value } of Array.from(elementNode.attributes)) {\r\n                rrElement.attributes[name] = value;\r\n            }\r\n            elementNode.scrollLeft && (rrElement.scrollLeft = elementNode.scrollLeft);\r\n            elementNode.scrollTop && (rrElement.scrollTop = elementNode.scrollTop);\r\n            break;\r\n        }\r\n        case NodeType.TEXT_NODE:\r\n            rrNode = rrdom.createTextNode(node.textContent || '');\r\n            break;\r\n        case NodeType.CDATA_SECTION_NODE:\r\n            rrNode = rrdom.createCDATASection(node.data);\r\n            break;\r\n        case NodeType.COMMENT_NODE:\r\n            rrNode = rrdom.createComment(node.textContent || '');\r\n            break;\r\n        case NodeType.DOCUMENT_FRAGMENT_NODE:\r\n            rrNode = parentRRNode.attachShadow({ mode: 'open' });\r\n            break;\r\n        default:\r\n            return null;\r\n    }\r\n    let sn = domMirror.getMeta(node);\r\n    if (rrdom instanceof RRDocument) {\r\n        if (!sn) {\r\n            sn = getDefaultSN(rrNode, rrdom.unserializedId);\r\n            domMirror.add(node, sn);\r\n        }\r\n        rrdom.mirror.add(rrNode, { ...sn });\r\n    }\r\n    return rrNode;\r\n}\r\nfunction buildFromDom(dom, domMirror = createMirror$1(), rrdom = new RRDocument()) {\r\n    function walk(node, parentRRNode) {\r\n        const rrNode = buildFromNode(node, rrdom, domMirror, parentRRNode);\r\n        if (rrNode === null)\r\n            return;\r\n        if (parentRRNode?.nodeName !== 'IFRAME' &&\r\n            node.nodeType !== NodeType.DOCUMENT_FRAGMENT_NODE) {\r\n            parentRRNode?.appendChild(rrNode);\r\n            rrNode.parentNode = parentRRNode;\r\n            rrNode.parentElement = parentRRNode;\r\n        }\r\n        if (node.nodeName === 'IFRAME') {\r\n            const iframeDoc = getIFrameContentDocument(node);\r\n            iframeDoc && walk(iframeDoc, rrNode);\r\n        }\r\n        else if (node.nodeType === NodeType.DOCUMENT_NODE ||\r\n            node.nodeType === NodeType.ELEMENT_NODE ||\r\n            node.nodeType === NodeType.DOCUMENT_FRAGMENT_NODE) {\r\n            if (node.nodeType === NodeType.ELEMENT_NODE &&\r\n                node.shadowRoot)\r\n                walk(node.shadowRoot, rrNode);\r\n            node.childNodes.forEach((childNode) => walk(childNode, rrNode));\r\n        }\r\n    }\r\n    walk(dom, null);\r\n    return rrdom;\r\n}\r\nfunction createMirror() {\r\n    return new Mirror();\r\n}\r\nclass Mirror {\r\n    constructor() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n    getId(n) {\r\n        if (!n)\r\n            return -1;\r\n        const id = this.getMeta(n)?.id;\r\n        return id ?? -1;\r\n    }\r\n    getNode(id) {\r\n        return this.idNodeMap.get(id) || null;\r\n    }\r\n    getIds() {\r\n        return Array.from(this.idNodeMap.keys());\r\n    }\r\n    getMeta(n) {\r\n        return this.nodeMetaMap.get(n) || null;\r\n    }\r\n    removeNodeFromMap(n) {\r\n        const id = this.getId(n);\r\n        this.idNodeMap.delete(id);\r\n        if (n.childNodes) {\r\n            n.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\r\n        }\r\n    }\r\n    has(id) {\r\n        return this.idNodeMap.has(id);\r\n    }\r\n    hasNode(node) {\r\n        return this.nodeMetaMap.has(node);\r\n    }\r\n    add(n, meta) {\r\n        const id = meta.id;\r\n        this.idNodeMap.set(id, n);\r\n        this.nodeMetaMap.set(n, meta);\r\n    }\r\n    replace(id, n) {\r\n        const oldNode = this.getNode(id);\r\n        if (oldNode) {\r\n            const meta = this.nodeMetaMap.get(oldNode);\r\n            if (meta)\r\n                this.nodeMetaMap.set(n, meta);\r\n        }\r\n        this.idNodeMap.set(id, n);\r\n    }\r\n    reset() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n}\r\nfunction getDefaultSN(node, id) {\r\n    switch (node.RRNodeType) {\r\n        case NodeType$1.Document:\r\n            return {\r\n                id,\r\n                type: node.RRNodeType,\r\n                childNodes: [],\r\n            };\r\n        case NodeType$1.DocumentType: {\r\n            const doctype = node;\r\n            return {\r\n                id,\r\n                type: node.RRNodeType,\r\n                name: doctype.name,\r\n                publicId: doctype.publicId,\r\n                systemId: doctype.systemId,\r\n            };\r\n        }\r\n        case NodeType$1.Element:\r\n            return {\r\n                id,\r\n                type: node.RRNodeType,\r\n                tagName: node.tagName.toLowerCase(),\r\n                attributes: {},\r\n                childNodes: [],\r\n            };\r\n        case NodeType$1.Text:\r\n            return {\r\n                id,\r\n                type: node.RRNodeType,\r\n                textContent: node.textContent || '',\r\n            };\r\n        case NodeType$1.Comment:\r\n            return {\r\n                id,\r\n                type: node.RRNodeType,\r\n                textContent: node.textContent || '',\r\n            };\r\n        case NodeType$1.CDATA:\r\n            return {\r\n                id,\r\n                type: node.RRNodeType,\r\n                textContent: '',\r\n            };\r\n    }\r\n}\n\nexport { BaseRRCDATASectionImpl, BaseRRCommentImpl, BaseRRDocumentImpl, BaseRRDocumentTypeImpl, BaseRRElementImpl, BaseRRMediaElementImpl, BaseRRNode, BaseRRTextImpl, ClassList, Mirror, NodeType, RRCDATASection, RRCanvasElement, RRComment, RRDocument, RRDocumentType, RRElement, RRIFrameElement, RRMediaElement, BaseRRNode as RRNode, RRStyleElement, RRText, buildFromDom, buildFromNode, createMirror, createOrGetNode, diff, getDefaultSN, getIFrameContentDocument, getIFrameContentWindow };\n","import { isShadowRoot, isNativeShadowDom, getInputType, getInputValue, shouldMaskInput, needMaskingText, maskInputValue, ignoreAttribute, transformAttribute, toLowerCase, IGNORED_NODE, serializeNodeWithId } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { isIgnored, isBlocked, isSerialized, isAncestorRemoved, closestElementOfNode, hasShadowRoot, inDom, getShadowHost, isSerializedIframe, isSerializedStylesheet } from '../utils.js';\nimport { getIFrameContentDocument } from '../../../rrdom/es/rrdom.js';\n\nfunction isNodeInLinkedList(n) {\r\n    return '__ln' in n;\r\n}\r\nclass DoubleLinkedList {\r\n    constructor() {\r\n        this.length = 0;\r\n        this.head = null;\r\n        this.tail = null;\r\n    }\r\n    get(position) {\r\n        if (position >= this.length) {\r\n            throw new Error('Position outside of list range');\r\n        }\r\n        let current = this.head;\r\n        for (let index = 0; index < position; index++) {\r\n            current = current?.next || null;\r\n        }\r\n        return current;\r\n    }\r\n    addNode(n) {\r\n        const node = {\r\n            value: n,\r\n            previous: null,\r\n            next: null,\r\n        };\r\n        n.__ln = node;\r\n        if (n.previousSibling && isNodeInLinkedList(n.previousSibling)) {\r\n            const current = n.previousSibling.__ln.next;\r\n            node.next = current;\r\n            node.previous = n.previousSibling.__ln;\r\n            n.previousSibling.__ln.next = node;\r\n            if (current) {\r\n                current.previous = node;\r\n            }\r\n        }\r\n        else if (n.nextSibling &&\r\n            isNodeInLinkedList(n.nextSibling) &&\r\n            n.nextSibling.__ln.previous) {\r\n            const current = n.nextSibling.__ln.previous;\r\n            node.previous = current;\r\n            node.next = n.nextSibling.__ln;\r\n            n.nextSibling.__ln.previous = node;\r\n            if (current) {\r\n                current.next = node;\r\n            }\r\n        }\r\n        else {\r\n            if (this.head) {\r\n                this.head.previous = node;\r\n            }\r\n            node.next = this.head;\r\n            this.head = node;\r\n        }\r\n        if (node.next === null) {\r\n            this.tail = node;\r\n        }\r\n        this.length++;\r\n    }\r\n    removeNode(n) {\r\n        const current = n.__ln;\r\n        if (!this.head) {\r\n            return;\r\n        }\r\n        if (!current.previous) {\r\n            this.head = current.next;\r\n            if (this.head) {\r\n                this.head.previous = null;\r\n            }\r\n            else {\r\n                this.tail = null;\r\n            }\r\n        }\r\n        else {\r\n            current.previous.next = current.next;\r\n            if (current.next) {\r\n                current.next.previous = current.previous;\r\n            }\r\n            else {\r\n                this.tail = current.previous;\r\n            }\r\n        }\r\n        if (n.__ln) {\r\n            delete n.__ln;\r\n        }\r\n        this.length--;\r\n    }\r\n}\r\nconst moveKey = (id, parentId) => `${id}@${parentId}`;\r\nclass MutationBuffer {\r\n    constructor() {\r\n        this.frozen = false;\r\n        this.locked = false;\r\n        this.texts = [];\r\n        this.attributes = [];\r\n        this.attributeMap = new WeakMap();\r\n        this.removes = [];\r\n        this.mapRemoves = [];\r\n        this.movedMap = {};\r\n        this.addedSet = new Set();\r\n        this.movedSet = new Set();\r\n        this.droppedSet = new Set();\r\n        this.processMutations = (mutations) => {\r\n            mutations.forEach(this.processMutation);\r\n            this.emit();\r\n        };\r\n        this.emit = () => {\r\n            if (this.frozen || this.locked) {\r\n                return;\r\n            }\r\n            const adds = [];\r\n            const addedIds = new Set();\r\n            const addList = new DoubleLinkedList();\r\n            const getNextId = (n) => {\r\n                let ns = n;\r\n                let nextId = IGNORED_NODE;\r\n                while (nextId === IGNORED_NODE) {\r\n                    ns = ns && ns.nextSibling;\r\n                    nextId = ns && this.mirror.getId(ns);\r\n                }\r\n                return nextId;\r\n            };\r\n            const pushAdd = (n) => {\r\n                if (!n.parentNode || !inDom(n)) {\r\n                    return;\r\n                }\r\n                const parentId = isShadowRoot(n.parentNode)\r\n                    ? this.mirror.getId(getShadowHost(n))\r\n                    : this.mirror.getId(n.parentNode);\r\n                const nextId = getNextId(n);\r\n                if (parentId === -1 || nextId === -1) {\r\n                    return addList.addNode(n);\r\n                }\r\n                const sn = serializeNodeWithId(n, {\r\n                    doc: this.doc,\r\n                    mirror: this.mirror,\r\n                    blockClass: this.blockClass,\r\n                    blockSelector: this.blockSelector,\r\n                    maskAllText: this.maskAllText,\r\n                    unblockSelector: this.unblockSelector,\r\n                    maskTextClass: this.maskTextClass,\r\n                    unmaskTextClass: this.unmaskTextClass,\r\n                    maskTextSelector: this.maskTextSelector,\r\n                    unmaskTextSelector: this.unmaskTextSelector,\r\n                    skipChild: true,\r\n                    newlyAddedElement: true,\r\n                    inlineStylesheet: this.inlineStylesheet,\r\n                    maskInputOptions: this.maskInputOptions,\r\n                    maskAttributeFn: this.maskAttributeFn,\r\n                    maskTextFn: this.maskTextFn,\r\n                    maskInputFn: this.maskInputFn,\r\n                    slimDOMOptions: this.slimDOMOptions,\r\n                    dataURLOptions: this.dataURLOptions,\r\n                    recordCanvas: this.recordCanvas,\r\n                    inlineImages: this.inlineImages,\r\n                    onSerialize: (currentN) => {\r\n                        if (isSerializedIframe(currentN, this.mirror) &&\r\n                            !isBlocked(currentN, this.blockClass, this.blockSelector, this.unblockSelector, false)) {\r\n                            this.iframeManager.addIframe(currentN);\r\n                        }\r\n                        if (isSerializedStylesheet(currentN, this.mirror)) {\r\n                            this.stylesheetManager.trackLinkElement(currentN);\r\n                        }\r\n                        if (hasShadowRoot(n)) {\r\n                            this.shadowDomManager.addShadowRoot(n.shadowRoot, this.doc);\r\n                        }\r\n                    },\r\n                    onIframeLoad: (iframe, childSn) => {\r\n                        if (isBlocked(iframe, this.blockClass, this.blockSelector, this.unblockSelector, false)) {\r\n                            return;\r\n                        }\r\n                        this.iframeManager.attachIframe(iframe, childSn);\r\n                        if (iframe.contentWindow) {\r\n                            this.canvasManager.addWindow(iframe.contentWindow);\r\n                        }\r\n                        this.shadowDomManager.observeAttachShadow(iframe);\r\n                    },\r\n                    onStylesheetLoad: (link, childSn) => {\r\n                        this.stylesheetManager.attachLinkElement(link, childSn);\r\n                    },\r\n                });\r\n                if (sn) {\r\n                    adds.push({\r\n                        parentId,\r\n                        nextId,\r\n                        node: sn,\r\n                    });\r\n                    addedIds.add(sn.id);\r\n                }\r\n            };\r\n            while (this.mapRemoves.length) {\r\n                this.mirror.removeNodeFromMap(this.mapRemoves.shift());\r\n            }\r\n            for (const n of this.movedSet) {\r\n                if (isParentRemoved(this.removes, n, this.mirror) &&\r\n                    !this.movedSet.has(n.parentNode)) {\r\n                    continue;\r\n                }\r\n                pushAdd(n);\r\n            }\r\n            for (const n of this.addedSet) {\r\n                if (!isAncestorInSet(this.droppedSet, n) &&\r\n                    !isParentRemoved(this.removes, n, this.mirror)) {\r\n                    pushAdd(n);\r\n                }\r\n                else if (isAncestorInSet(this.movedSet, n)) {\r\n                    pushAdd(n);\r\n                }\r\n                else {\r\n                    this.droppedSet.add(n);\r\n                }\r\n            }\r\n            let candidate = null;\r\n            while (addList.length) {\r\n                let node = null;\r\n                if (candidate) {\r\n                    const parentId = this.mirror.getId(candidate.value.parentNode);\r\n                    const nextId = getNextId(candidate.value);\r\n                    if (parentId !== -1 && nextId !== -1) {\r\n                        node = candidate;\r\n                    }\r\n                }\r\n                if (!node) {\r\n                    let tailNode = addList.tail;\r\n                    while (tailNode) {\r\n                        const _node = tailNode;\r\n                        tailNode = tailNode.previous;\r\n                        if (_node) {\r\n                            const parentId = this.mirror.getId(_node.value.parentNode);\r\n                            const nextId = getNextId(_node.value);\r\n                            if (nextId === -1)\r\n                                continue;\r\n                            else if (parentId !== -1) {\r\n                                node = _node;\r\n                                break;\r\n                            }\r\n                            else {\r\n                                const unhandledNode = _node.value;\r\n                                if (unhandledNode.parentNode &&\r\n                                    unhandledNode.parentNode.nodeType ===\r\n                                        Node.DOCUMENT_FRAGMENT_NODE) {\r\n                                    const shadowHost = unhandledNode.parentNode\r\n                                        .host;\r\n                                    const parentId = this.mirror.getId(shadowHost);\r\n                                    if (parentId !== -1) {\r\n                                        node = _node;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (!node) {\r\n                    while (addList.head) {\r\n                        addList.removeNode(addList.head.value);\r\n                    }\r\n                    break;\r\n                }\r\n                candidate = node.previous;\r\n                addList.removeNode(node.value);\r\n                pushAdd(node.value);\r\n            }\r\n            const payload = {\r\n                texts: this.texts\r\n                    .map((text) => ({\r\n                    id: this.mirror.getId(text.node),\r\n                    value: text.value,\r\n                }))\r\n                    .filter((text) => !addedIds.has(text.id))\r\n                    .filter((text) => this.mirror.has(text.id)),\r\n                attributes: this.attributes\r\n                    .map((attribute) => {\r\n                    const { attributes } = attribute;\r\n                    if (typeof attributes.style === 'string') {\r\n                        const diffAsStr = JSON.stringify(attribute.styleDiff);\r\n                        const unchangedAsStr = JSON.stringify(attribute._unchangedStyles);\r\n                        if (diffAsStr.length < attributes.style.length) {\r\n                            if ((diffAsStr + unchangedAsStr).split('var(').length ===\r\n                                attributes.style.split('var(').length) {\r\n                                attributes.style = attribute.styleDiff;\r\n                            }\r\n                        }\r\n                    }\r\n                    return {\r\n                        id: this.mirror.getId(attribute.node),\r\n                        attributes: attributes,\r\n                    };\r\n                })\r\n                    .filter((attribute) => !addedIds.has(attribute.id))\r\n                    .filter((attribute) => this.mirror.has(attribute.id)),\r\n                removes: this.removes,\r\n                adds,\r\n            };\r\n            if (!payload.texts.length &&\r\n                !payload.attributes.length &&\r\n                !payload.removes.length &&\r\n                !payload.adds.length) {\r\n                return;\r\n            }\r\n            this.texts = [];\r\n            this.attributes = [];\r\n            this.attributeMap = new WeakMap();\r\n            this.removes = [];\r\n            this.addedSet = new Set();\r\n            this.movedSet = new Set();\r\n            this.droppedSet = new Set();\r\n            this.movedMap = {};\r\n            this.mutationCb(payload);\r\n        };\r\n        this.processMutation = (m) => {\r\n            if (isIgnored(m.target, this.mirror)) {\r\n                return;\r\n            }\r\n            switch (m.type) {\r\n                case 'characterData': {\r\n                    const value = m.target.textContent;\r\n                    if (!isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) &&\r\n                        value !== m.oldValue) {\r\n                        this.texts.push({\r\n                            value: needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, this.maskAllText) && value\r\n                                ? this.maskTextFn\r\n                                    ? this.maskTextFn(value, closestElementOfNode(m.target))\r\n                                    : value.replace(/[\\S]/g, '*')\r\n                                : value,\r\n                            node: m.target,\r\n                        });\r\n                    }\r\n                    break;\r\n                }\r\n                case 'attributes': {\r\n                    const target = m.target;\r\n                    let attributeName = m.attributeName;\r\n                    let value = m.target.getAttribute(attributeName);\r\n                    if (attributeName === 'value') {\r\n                        const type = getInputType(target);\r\n                        const tagName = target.tagName;\r\n                        value = getInputValue(target, tagName, type);\r\n                        const isInputMasked = shouldMaskInput({\r\n                            maskInputOptions: this.maskInputOptions,\r\n                            tagName,\r\n                            type,\r\n                        });\r\n                        const forceMask = needMaskingText(m.target, this.maskTextClass, this.maskTextSelector, this.unmaskTextClass, this.unmaskTextSelector, isInputMasked);\r\n                        value = maskInputValue({\r\n                            isMasked: forceMask,\r\n                            element: target,\r\n                            value,\r\n                            maskInputFn: this.maskInputFn,\r\n                        });\r\n                    }\r\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) ||\r\n                        value === m.oldValue) {\r\n                        return;\r\n                    }\r\n                    let item = this.attributeMap.get(m.target);\r\n                    if (target.tagName === 'IFRAME' &&\r\n                        attributeName === 'src' &&\r\n                        !this.keepIframeSrcFn(value)) {\r\n                        const iframeDoc = getIFrameContentDocument(target);\r\n                        if (!iframeDoc) {\r\n                            attributeName = 'rr_src';\r\n                        }\r\n                        else {\r\n                            return;\r\n                        }\r\n                    }\r\n                    if (!item) {\r\n                        item = {\r\n                            node: m.target,\r\n                            attributes: {},\r\n                            styleDiff: {},\r\n                            _unchangedStyles: {},\r\n                        };\r\n                        this.attributes.push(item);\r\n                        this.attributeMap.set(m.target, item);\r\n                    }\r\n                    if (attributeName === 'type' &&\r\n                        target.tagName === 'INPUT' &&\r\n                        (m.oldValue || '').toLowerCase() === 'password') {\r\n                        target.setAttribute('data-rr-is-password', 'true');\r\n                    }\r\n                    if (!ignoreAttribute(target.tagName, attributeName)) {\r\n                        item.attributes[attributeName] = transformAttribute(this.doc, toLowerCase(target.tagName), toLowerCase(attributeName), value, target, this.maskAttributeFn);\r\n                        if (attributeName === 'style') {\r\n                            if (!this.unattachedDoc) {\r\n                                try {\r\n                                    this.unattachedDoc =\r\n                                        document.implementation.createHTMLDocument();\r\n                                }\r\n                                catch (e) {\r\n                                    this.unattachedDoc = this.doc;\r\n                                }\r\n                            }\r\n                            const old = this.unattachedDoc.createElement('span');\r\n                            if (m.oldValue) {\r\n                                old.setAttribute('style', m.oldValue);\r\n                            }\r\n                            for (const pname of Array.from(target.style)) {\r\n                                const newValue = target.style.getPropertyValue(pname);\r\n                                const newPriority = target.style.getPropertyPriority(pname);\r\n                                if (newValue !== old.style.getPropertyValue(pname) ||\r\n                                    newPriority !== old.style.getPropertyPriority(pname)) {\r\n                                    if (newPriority === '') {\r\n                                        item.styleDiff[pname] = newValue;\r\n                                    }\r\n                                    else {\r\n                                        item.styleDiff[pname] = [newValue, newPriority];\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    item._unchangedStyles[pname] = [newValue, newPriority];\r\n                                }\r\n                            }\r\n                            for (const pname of Array.from(old.style)) {\r\n                                if (target.style.getPropertyValue(pname) === '') {\r\n                                    item.styleDiff[pname] = false;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n                case 'childList': {\r\n                    if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, true)) {\r\n                        return;\r\n                    }\r\n                    m.addedNodes.forEach((n) => this.genAdds(n, m.target));\r\n                    m.removedNodes.forEach((n) => {\r\n                        const nodeId = this.mirror.getId(n);\r\n                        const parentId = isShadowRoot(m.target)\r\n                            ? this.mirror.getId(m.target.host)\r\n                            : this.mirror.getId(m.target);\r\n                        if (isBlocked(m.target, this.blockClass, this.blockSelector, this.unblockSelector, false) ||\r\n                            isIgnored(n, this.mirror) ||\r\n                            !isSerialized(n, this.mirror)) {\r\n                            return;\r\n                        }\r\n                        if (this.addedSet.has(n)) {\r\n                            deepDelete(this.addedSet, n);\r\n                            this.droppedSet.add(n);\r\n                        }\r\n                        else if (this.addedSet.has(m.target) && nodeId === -1) ;\r\n                        else if (isAncestorRemoved(m.target, this.mirror)) ;\r\n                        else if (this.movedSet.has(n) &&\r\n                            this.movedMap[moveKey(nodeId, parentId)]) {\r\n                            deepDelete(this.movedSet, n);\r\n                        }\r\n                        else {\r\n                            this.removes.push({\r\n                                parentId,\r\n                                id: nodeId,\r\n                                isShadow: isShadowRoot(m.target) && isNativeShadowDom(m.target)\r\n                                    ? true\r\n                                    : undefined,\r\n                            });\r\n                        }\r\n                        this.mapRemoves.push(n);\r\n                    });\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n        this.genAdds = (n, target) => {\r\n            if (this.processedNodeManager.inOtherBuffer(n, this))\r\n                return;\r\n            if (this.addedSet.has(n) || this.movedSet.has(n))\r\n                return;\r\n            if (this.mirror.hasNode(n)) {\r\n                if (isIgnored(n, this.mirror)) {\r\n                    return;\r\n                }\r\n                this.movedSet.add(n);\r\n                let targetId = null;\r\n                if (target && this.mirror.hasNode(target)) {\r\n                    targetId = this.mirror.getId(target);\r\n                }\r\n                if (targetId && targetId !== -1) {\r\n                    this.movedMap[moveKey(this.mirror.getId(n), targetId)] = true;\r\n                }\r\n            }\r\n            else {\r\n                this.addedSet.add(n);\r\n                this.droppedSet.delete(n);\r\n            }\r\n            if (!isBlocked(n, this.blockClass, this.blockSelector, this.unblockSelector, false)) {\r\n                n.childNodes.forEach((childN) => this.genAdds(childN));\r\n                if (hasShadowRoot(n)) {\r\n                    n.shadowRoot.childNodes.forEach((childN) => {\r\n                        this.processedNodeManager.add(childN, this);\r\n                        this.genAdds(childN, n);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n    }\r\n    init(options) {\r\n        [\r\n            'mutationCb',\r\n            'blockClass',\r\n            'blockSelector',\r\n            'unblockSelector',\r\n            'maskAllText',\r\n            'maskTextClass',\r\n            'unmaskTextClass',\r\n            'maskTextSelector',\r\n            'unmaskTextSelector',\r\n            'inlineStylesheet',\r\n            'maskInputOptions',\r\n            'maskAttributeFn',\r\n            'maskTextFn',\r\n            'maskInputFn',\r\n            'keepIframeSrcFn',\r\n            'recordCanvas',\r\n            'inlineImages',\r\n            'slimDOMOptions',\r\n            'dataURLOptions',\r\n            'doc',\r\n            'mirror',\r\n            'iframeManager',\r\n            'stylesheetManager',\r\n            'shadowDomManager',\r\n            'canvasManager',\r\n            'processedNodeManager',\r\n        ].forEach((key) => {\r\n            this[key] = options[key];\r\n        });\r\n    }\r\n    freeze() {\r\n        this.frozen = true;\r\n        this.canvasManager.freeze();\r\n    }\r\n    unfreeze() {\r\n        this.frozen = false;\r\n        this.canvasManager.unfreeze();\r\n        this.emit();\r\n    }\r\n    isFrozen() {\r\n        return this.frozen;\r\n    }\r\n    lock() {\r\n        this.locked = true;\r\n        this.canvasManager.lock();\r\n    }\r\n    unlock() {\r\n        this.locked = false;\r\n        this.canvasManager.unlock();\r\n        this.emit();\r\n    }\r\n    reset() {\r\n        this.shadowDomManager.reset();\r\n        this.canvasManager.reset();\r\n    }\r\n}\r\nfunction deepDelete(addsSet, n) {\r\n    addsSet.delete(n);\r\n    n.childNodes.forEach((childN) => deepDelete(addsSet, childN));\r\n}\r\nfunction isParentRemoved(removes, n, mirror) {\r\n    if (removes.length === 0)\r\n        return false;\r\n    return _isParentRemoved(removes, n, mirror);\r\n}\r\nfunction _isParentRemoved(removes, n, mirror) {\r\n    let node = n.parentNode;\r\n    while (node) {\r\n        const parentId = mirror.getId(node);\r\n        if (removes.some((r) => r.id === parentId)) {\r\n            return true;\r\n        }\r\n        node = node.parentNode;\r\n    }\r\n    return false;\r\n}\r\nfunction isAncestorInSet(set, n) {\r\n    if (set.size === 0)\r\n        return false;\r\n    return _isAncestorInSet(set, n);\r\n}\r\nfunction _isAncestorInSet(set, n) {\r\n    const { parentNode } = n;\r\n    if (!parentNode) {\r\n        return false;\r\n    }\r\n    if (set.has(parentNode)) {\r\n        return true;\r\n    }\r\n    return _isAncestorInSet(set, parentNode);\r\n}\n\nexport { MutationBuffer as default };\n","let errorHandler;\r\nfunction registerErrorHandler(handler) {\r\n    errorHandler = handler;\r\n}\r\nfunction unregisterErrorHandler() {\r\n    errorHandler = undefined;\r\n}\r\nconst callbackWrapper = (cb) => {\r\n    if (!errorHandler) {\r\n        return cb;\r\n    }\r\n    const rrwebWrapped = ((...rest) => {\r\n        try {\r\n            return cb(...rest);\r\n        }\r\n        catch (error) {\r\n            if (errorHandler && errorHandler(error) === true) {\r\n                return () => {\r\n                };\r\n            }\r\n            throw error;\r\n        }\r\n    });\r\n    return rrwebWrapped;\r\n};\n\nexport { callbackWrapper, registerErrorHandler, unregisterErrorHandler };\n","import { toLowerCase, toUpperCase, getInputType, getInputValue, shouldMaskInput, needMaskingText, maskInputValue } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { on, throttle, isBlocked, getWindowScroll, hookSetter, patch, setTimeout, legacy_isTouchEvent, nowTimestamp, getWindowHeight, getWindowWidth } from '../utils.js';\nimport { MouseInteractions, IncrementalSource, PointerTypes } from '../../../types/dist/rrweb-types.js';\nimport MutationBuffer from './mutation.js';\nimport { callbackWrapper } from './error-handler.js';\n\nconst mutationBuffers = [];\r\nfunction getEventTarget(event) {\r\n    try {\r\n        if ('composedPath' in event) {\r\n            const path = event.composedPath();\r\n            if (path.length) {\r\n                return path[0];\r\n            }\r\n        }\r\n        else if ('path' in event && event.path.length) {\r\n            return event.path[0];\r\n        }\r\n    }\r\n    catch {\r\n    }\r\n    return event && event.target;\r\n}\r\nfunction initMutationObserver(options, rootEl) {\r\n    const mutationBuffer = new MutationBuffer();\r\n    mutationBuffers.push(mutationBuffer);\r\n    mutationBuffer.init(options);\r\n    let mutationObserverCtor = window.MutationObserver ||\r\n        window.__rrMutationObserver;\r\n    const angularZoneSymbol = window?.Zone?.__symbol__?.('MutationObserver');\r\n    if (angularZoneSymbol &&\r\n        window[angularZoneSymbol]) {\r\n        mutationObserverCtor = window[angularZoneSymbol];\r\n    }\r\n    const observer = new mutationObserverCtor(callbackWrapper((mutations) => {\r\n        if (options.onMutation && options.onMutation(mutations) === false) {\r\n            return;\r\n        }\r\n        mutationBuffer.processMutations.bind(mutationBuffer)(mutations);\r\n    }));\r\n    observer.observe(rootEl, {\r\n        attributes: true,\r\n        attributeOldValue: true,\r\n        characterData: true,\r\n        characterDataOldValue: true,\r\n        childList: true,\r\n        subtree: true,\r\n    });\r\n    return observer;\r\n}\r\nfunction initMoveObserver({ mousemoveCb, sampling, doc, mirror, }) {\r\n    if (sampling.mousemove === false) {\r\n        return () => {\r\n        };\r\n    }\r\n    const threshold = typeof sampling.mousemove === 'number' ? sampling.mousemove : 50;\r\n    const callbackThreshold = typeof sampling.mousemoveCallback === 'number'\r\n        ? sampling.mousemoveCallback\r\n        : 500;\r\n    let positions = [];\r\n    let timeBaseline;\r\n    const wrappedCb = throttle(callbackWrapper((source) => {\r\n        const totalOffset = Date.now() - timeBaseline;\r\n        mousemoveCb(positions.map((p) => {\r\n            p.timeOffset -= totalOffset;\r\n            return p;\r\n        }), source);\r\n        positions = [];\r\n        timeBaseline = null;\r\n    }), callbackThreshold);\r\n    const updatePosition = callbackWrapper(throttle(callbackWrapper((evt) => {\r\n        const target = getEventTarget(evt);\r\n        const { clientX, clientY } = legacy_isTouchEvent(evt)\r\n            ? evt.changedTouches[0]\r\n            : evt;\r\n        if (!timeBaseline) {\r\n            timeBaseline = nowTimestamp();\r\n        }\r\n        positions.push({\r\n            x: clientX,\r\n            y: clientY,\r\n            id: mirror.getId(target),\r\n            timeOffset: nowTimestamp() - timeBaseline,\r\n        });\r\n        wrappedCb(typeof DragEvent !== 'undefined' && evt instanceof DragEvent\r\n            ? IncrementalSource.Drag\r\n            : evt instanceof MouseEvent\r\n                ? IncrementalSource.MouseMove\r\n                : IncrementalSource.TouchMove);\r\n    }), threshold, {\r\n        trailing: false,\r\n    }));\r\n    const handlers = [\r\n        on('mousemove', updatePosition, doc),\r\n        on('touchmove', updatePosition, doc),\r\n        on('drag', updatePosition, doc),\r\n    ];\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initMouseInteractionObserver({ mouseInteractionCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\r\n    if (sampling.mouseInteraction === false) {\r\n        return () => {\r\n        };\r\n    }\r\n    const disableMap = sampling.mouseInteraction === true ||\r\n        sampling.mouseInteraction === undefined\r\n        ? {}\r\n        : sampling.mouseInteraction;\r\n    const handlers = [];\r\n    let currentPointerType = null;\r\n    const getHandler = (eventKey) => {\r\n        return (event) => {\r\n            const target = getEventTarget(event);\r\n            if (isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n                return;\r\n            }\r\n            let pointerType = null;\r\n            let thisEventKey = eventKey;\r\n            if ('pointerType' in event) {\r\n                switch (event.pointerType) {\r\n                    case 'mouse':\r\n                        pointerType = PointerTypes.Mouse;\r\n                        break;\r\n                    case 'touch':\r\n                        pointerType = PointerTypes.Touch;\r\n                        break;\r\n                    case 'pen':\r\n                        pointerType = PointerTypes.Pen;\r\n                        break;\r\n                }\r\n                if (pointerType === PointerTypes.Touch) {\r\n                    if (MouseInteractions[eventKey] === MouseInteractions.MouseDown) {\r\n                        thisEventKey = 'TouchStart';\r\n                    }\r\n                    else if (MouseInteractions[eventKey] === MouseInteractions.MouseUp) {\r\n                        thisEventKey = 'TouchEnd';\r\n                    }\r\n                }\r\n                else if (pointerType === PointerTypes.Pen) ;\r\n            }\r\n            else if (legacy_isTouchEvent(event)) {\r\n                pointerType = PointerTypes.Touch;\r\n            }\r\n            if (pointerType !== null) {\r\n                currentPointerType = pointerType;\r\n                if ((thisEventKey.startsWith('Touch') &&\r\n                    pointerType === PointerTypes.Touch) ||\r\n                    (thisEventKey.startsWith('Mouse') &&\r\n                        pointerType === PointerTypes.Mouse)) {\r\n                    pointerType = null;\r\n                }\r\n            }\r\n            else if (MouseInteractions[eventKey] === MouseInteractions.Click) {\r\n                pointerType = currentPointerType;\r\n                currentPointerType = null;\r\n            }\r\n            const e = legacy_isTouchEvent(event) ? event.changedTouches[0] : event;\r\n            if (!e) {\r\n                return;\r\n            }\r\n            const id = mirror.getId(target);\r\n            const { clientX, clientY } = e;\r\n            callbackWrapper(mouseInteractionCb)({\r\n                type: MouseInteractions[thisEventKey],\r\n                id,\r\n                x: clientX,\r\n                y: clientY,\r\n                ...(pointerType !== null && { pointerType }),\r\n            });\r\n        };\r\n    };\r\n    Object.keys(MouseInteractions)\r\n        .filter((key) => Number.isNaN(Number(key)) &&\r\n        !key.endsWith('_Departed') &&\r\n        disableMap[key] !== false)\r\n        .forEach((eventKey) => {\r\n        let eventName = toLowerCase(eventKey);\r\n        const handler = getHandler(eventKey);\r\n        if (window.PointerEvent) {\r\n            switch (MouseInteractions[eventKey]) {\r\n                case MouseInteractions.MouseDown:\r\n                case MouseInteractions.MouseUp:\r\n                    eventName = eventName.replace('mouse', 'pointer');\r\n                    break;\r\n                case MouseInteractions.TouchStart:\r\n                case MouseInteractions.TouchEnd:\r\n                    return;\r\n            }\r\n        }\r\n        handlers.push(on(eventName, handler, doc));\r\n    });\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initScrollObserver({ scrollCb, doc, mirror, blockClass, blockSelector, unblockSelector, sampling, }) {\r\n    const updatePosition = callbackWrapper(throttle(callbackWrapper((evt) => {\r\n        const target = getEventTarget(evt);\r\n        if (!target ||\r\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n            return;\r\n        }\r\n        const id = mirror.getId(target);\r\n        if (target === doc && doc.defaultView) {\r\n            const scrollLeftTop = getWindowScroll(doc.defaultView);\r\n            scrollCb({\r\n                id,\r\n                x: scrollLeftTop.left,\r\n                y: scrollLeftTop.top,\r\n            });\r\n        }\r\n        else {\r\n            scrollCb({\r\n                id,\r\n                x: target.scrollLeft,\r\n                y: target.scrollTop,\r\n            });\r\n        }\r\n    }), sampling.scroll || 100));\r\n    return on('scroll', updatePosition, doc);\r\n}\r\nfunction initViewportResizeObserver({ viewportResizeCb }, { win }) {\r\n    let lastH = -1;\r\n    let lastW = -1;\r\n    const updateDimension = callbackWrapper(throttle(callbackWrapper(() => {\r\n        const height = getWindowHeight();\r\n        const width = getWindowWidth();\r\n        if (lastH !== height || lastW !== width) {\r\n            viewportResizeCb({\r\n                width: Number(width),\r\n                height: Number(height),\r\n            });\r\n            lastH = height;\r\n            lastW = width;\r\n        }\r\n    }), 200));\r\n    return on('resize', updateDimension, win);\r\n}\r\nconst INPUT_TAGS = ['INPUT', 'TEXTAREA', 'SELECT'];\r\nconst lastInputValueMap = new WeakMap();\r\nfunction initInputObserver({ inputCb, doc, mirror, blockClass, blockSelector, unblockSelector, ignoreClass, ignoreSelector, maskInputOptions, maskInputFn, sampling, userTriggeredOnInput, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, }) {\r\n    function eventHandler(event) {\r\n        let target = getEventTarget(event);\r\n        const userTriggered = event.isTrusted;\r\n        const tagName = target && toUpperCase(target.tagName);\r\n        if (tagName === 'OPTION')\r\n            target = target.parentElement;\r\n        if (!target ||\r\n            !tagName ||\r\n            INPUT_TAGS.indexOf(tagName) < 0 ||\r\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n            return;\r\n        }\r\n        const el = target;\r\n        if (el.classList.contains(ignoreClass) ||\r\n            (ignoreSelector && el.matches(ignoreSelector))) {\r\n            return;\r\n        }\r\n        const type = getInputType(target);\r\n        let text = getInputValue(el, tagName, type);\r\n        let isChecked = false;\r\n        const isInputMasked = shouldMaskInput({\r\n            maskInputOptions,\r\n            tagName,\r\n            type,\r\n        });\r\n        const forceMask = needMaskingText(target, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked);\r\n        if (type === 'radio' || type === 'checkbox') {\r\n            isChecked = target.checked;\r\n        }\r\n        text = maskInputValue({\r\n            isMasked: forceMask,\r\n            element: target,\r\n            value: text,\r\n            maskInputFn,\r\n        });\r\n        cbWithDedup(target, userTriggeredOnInput\r\n            ? { text, isChecked, userTriggered }\r\n            : { text, isChecked });\r\n        const name = target.name;\r\n        if (type === 'radio' && name && isChecked) {\r\n            doc\r\n                .querySelectorAll(`input[type=\"radio\"][name=\"${name}\"]`)\r\n                .forEach((el) => {\r\n                if (el !== target) {\r\n                    const text = maskInputValue({\r\n                        isMasked: forceMask,\r\n                        element: el,\r\n                        value: getInputValue(el, tagName, type),\r\n                        maskInputFn,\r\n                    });\r\n                    cbWithDedup(el, userTriggeredOnInput\r\n                        ? { text, isChecked: !isChecked, userTriggered: false }\r\n                        : { text, isChecked: !isChecked });\r\n                }\r\n            });\r\n        }\r\n    }\r\n    function cbWithDedup(target, v) {\r\n        const lastInputValue = lastInputValueMap.get(target);\r\n        if (!lastInputValue ||\r\n            lastInputValue.text !== v.text ||\r\n            lastInputValue.isChecked !== v.isChecked) {\r\n            lastInputValueMap.set(target, v);\r\n            const id = mirror.getId(target);\r\n            callbackWrapper(inputCb)({\r\n                ...v,\r\n                id,\r\n            });\r\n        }\r\n    }\r\n    const events = sampling.input === 'last' ? ['change'] : ['input', 'change'];\r\n    const handlers = events.map((eventName) => on(eventName, callbackWrapper(eventHandler), doc));\r\n    const currentWindow = doc.defaultView;\r\n    if (!currentWindow) {\r\n        return () => {\r\n            handlers.forEach((h) => h());\r\n        };\r\n    }\r\n    const propertyDescriptor = currentWindow.Object.getOwnPropertyDescriptor(currentWindow.HTMLInputElement.prototype, 'value');\r\n    const hookProperties = [\r\n        [currentWindow.HTMLInputElement.prototype, 'value'],\r\n        [currentWindow.HTMLInputElement.prototype, 'checked'],\r\n        [currentWindow.HTMLSelectElement.prototype, 'value'],\r\n        [currentWindow.HTMLTextAreaElement.prototype, 'value'],\r\n        [currentWindow.HTMLSelectElement.prototype, 'selectedIndex'],\r\n        [currentWindow.HTMLOptionElement.prototype, 'selected'],\r\n    ];\r\n    if (propertyDescriptor && propertyDescriptor.set) {\r\n        handlers.push(...hookProperties.map((p) => hookSetter(p[0], p[1], {\r\n            set() {\r\n                callbackWrapper(eventHandler)({\r\n                    target: this,\r\n                    isTrusted: false,\r\n                });\r\n            },\r\n        }, false, currentWindow)));\r\n    }\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction getNestedCSSRulePositions(rule) {\r\n    const positions = [];\r\n    function recurse(childRule, pos) {\r\n        if ((hasNestedCSSRule('CSSGroupingRule') &&\r\n            childRule.parentRule instanceof CSSGroupingRule) ||\r\n            (hasNestedCSSRule('CSSMediaRule') &&\r\n                childRule.parentRule instanceof CSSMediaRule) ||\r\n            (hasNestedCSSRule('CSSSupportsRule') &&\r\n                childRule.parentRule instanceof CSSSupportsRule) ||\r\n            (hasNestedCSSRule('CSSConditionRule') &&\r\n                childRule.parentRule instanceof CSSConditionRule)) {\r\n            const rules = Array.from(childRule.parentRule.cssRules);\r\n            const index = rules.indexOf(childRule);\r\n            pos.unshift(index);\r\n        }\r\n        else if (childRule.parentStyleSheet) {\r\n            const rules = Array.from(childRule.parentStyleSheet.cssRules);\r\n            const index = rules.indexOf(childRule);\r\n            pos.unshift(index);\r\n        }\r\n        return pos;\r\n    }\r\n    return recurse(rule, positions);\r\n}\r\nfunction getIdAndStyleId(sheet, mirror, styleMirror) {\r\n    let id, styleId;\r\n    if (!sheet)\r\n        return {};\r\n    if (sheet.ownerNode)\r\n        id = mirror.getId(sheet.ownerNode);\r\n    else\r\n        styleId = styleMirror.getId(sheet);\r\n    return {\r\n        styleId,\r\n        id,\r\n    };\r\n}\r\nfunction initStyleSheetObserver({ styleSheetRuleCb, mirror, stylesheetManager }, { win }) {\r\n    if (!win.CSSStyleSheet || !win.CSSStyleSheet.prototype) {\r\n        return () => {\r\n        };\r\n    }\r\n    const insertRule = win.CSSStyleSheet.prototype.insertRule;\r\n    win.CSSStyleSheet.prototype.insertRule = new Proxy(insertRule, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [rule, index] = argumentsList;\r\n            const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleSheetRuleCb({\r\n                    id,\r\n                    styleId,\r\n                    adds: [{ rule, index }],\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    const deleteRule = win.CSSStyleSheet.prototype.deleteRule;\r\n    win.CSSStyleSheet.prototype.deleteRule = new Proxy(deleteRule, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [index] = argumentsList;\r\n            const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleSheetRuleCb({\r\n                    id,\r\n                    styleId,\r\n                    removes: [{ index }],\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    let replace;\r\n    if (win.CSSStyleSheet.prototype.replace) {\r\n        replace = win.CSSStyleSheet.prototype.replace;\r\n        win.CSSStyleSheet.prototype.replace = new Proxy(replace, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [text] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        replace: text,\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n    }\r\n    let replaceSync;\r\n    if (win.CSSStyleSheet.prototype.replaceSync) {\r\n        replaceSync = win.CSSStyleSheet.prototype.replaceSync;\r\n        win.CSSStyleSheet.prototype.replaceSync = new Proxy(replaceSync, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [text] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        replaceSync: text,\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n    }\r\n    const supportedNestedCSSRuleTypes = {};\r\n    if (canMonkeyPatchNestedCSSRule('CSSGroupingRule')) {\r\n        supportedNestedCSSRuleTypes.CSSGroupingRule = win.CSSGroupingRule;\r\n    }\r\n    else {\r\n        if (canMonkeyPatchNestedCSSRule('CSSMediaRule')) {\r\n            supportedNestedCSSRuleTypes.CSSMediaRule = win.CSSMediaRule;\r\n        }\r\n        if (canMonkeyPatchNestedCSSRule('CSSConditionRule')) {\r\n            supportedNestedCSSRuleTypes.CSSConditionRule = win.CSSConditionRule;\r\n        }\r\n        if (canMonkeyPatchNestedCSSRule('CSSSupportsRule')) {\r\n            supportedNestedCSSRuleTypes.CSSSupportsRule = win.CSSSupportsRule;\r\n        }\r\n    }\r\n    const unmodifiedFunctions = {};\r\n    Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\r\n        unmodifiedFunctions[typeKey] = {\r\n            insertRule: type.prototype.insertRule,\r\n            deleteRule: type.prototype.deleteRule,\r\n        };\r\n        type.prototype.insertRule = new Proxy(unmodifiedFunctions[typeKey].insertRule, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [rule, index] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        adds: [\r\n                            {\r\n                                rule,\r\n                                index: [\r\n                                    ...getNestedCSSRulePositions(thisArg),\r\n                                    index || 0,\r\n                                ],\r\n                            },\r\n                        ],\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n        type.prototype.deleteRule = new Proxy(unmodifiedFunctions[typeKey].deleteRule, {\r\n            apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n                const [index] = argumentsList;\r\n                const { id, styleId } = getIdAndStyleId(thisArg.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n                if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                    styleSheetRuleCb({\r\n                        id,\r\n                        styleId,\r\n                        removes: [\r\n                            { index: [...getNestedCSSRulePositions(thisArg), index] },\r\n                        ],\r\n                    });\r\n                }\r\n                return target.apply(thisArg, argumentsList);\r\n            }),\r\n        });\r\n    });\r\n    return callbackWrapper(() => {\r\n        win.CSSStyleSheet.prototype.insertRule = insertRule;\r\n        win.CSSStyleSheet.prototype.deleteRule = deleteRule;\r\n        replace && (win.CSSStyleSheet.prototype.replace = replace);\r\n        replaceSync && (win.CSSStyleSheet.prototype.replaceSync = replaceSync);\r\n        Object.entries(supportedNestedCSSRuleTypes).forEach(([typeKey, type]) => {\r\n            type.prototype.insertRule = unmodifiedFunctions[typeKey].insertRule;\r\n            type.prototype.deleteRule = unmodifiedFunctions[typeKey].deleteRule;\r\n        });\r\n    });\r\n}\r\nfunction initAdoptedStyleSheetObserver({ mirror, stylesheetManager, }, host) {\r\n    let hostId = null;\r\n    if (host.nodeName === '#document')\r\n        hostId = mirror.getId(host);\r\n    else\r\n        hostId = mirror.getId(host.host);\r\n    const patchTarget = host.nodeName === '#document'\r\n        ? host.defaultView?.Document\r\n        : host.ownerDocument?.defaultView?.ShadowRoot;\r\n    const originalPropertyDescriptor = patchTarget?.prototype\r\n        ? Object.getOwnPropertyDescriptor(patchTarget?.prototype, 'adoptedStyleSheets')\r\n        : undefined;\r\n    if (hostId === null ||\r\n        hostId === -1 ||\r\n        !patchTarget ||\r\n        !originalPropertyDescriptor)\r\n        return () => {\r\n        };\r\n    Object.defineProperty(host, 'adoptedStyleSheets', {\r\n        configurable: originalPropertyDescriptor.configurable,\r\n        enumerable: originalPropertyDescriptor.enumerable,\r\n        get() {\r\n            return originalPropertyDescriptor.get?.call(this);\r\n        },\r\n        set(sheets) {\r\n            const result = originalPropertyDescriptor.set?.call(this, sheets);\r\n            if (hostId !== null && hostId !== -1) {\r\n                try {\r\n                    stylesheetManager.adoptStyleSheets(sheets, hostId);\r\n                }\r\n                catch (e) {\r\n                }\r\n            }\r\n            return result;\r\n        },\r\n    });\r\n    return callbackWrapper(() => {\r\n        Object.defineProperty(host, 'adoptedStyleSheets', {\r\n            configurable: originalPropertyDescriptor.configurable,\r\n            enumerable: originalPropertyDescriptor.enumerable,\r\n            get: originalPropertyDescriptor.get,\r\n            set: originalPropertyDescriptor.set,\r\n        });\r\n    });\r\n}\r\nfunction initStyleDeclarationObserver({ styleDeclarationCb, mirror, ignoreCSSAttributes, stylesheetManager, }, { win }) {\r\n    const setProperty = win.CSSStyleDeclaration.prototype.setProperty;\r\n    win.CSSStyleDeclaration.prototype.setProperty = new Proxy(setProperty, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [property, value, priority] = argumentsList;\r\n            if (ignoreCSSAttributes.has(property)) {\r\n                return setProperty.apply(thisArg, [property, value, priority]);\r\n            }\r\n            const { id, styleId } = getIdAndStyleId(thisArg.parentRule?.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleDeclarationCb({\r\n                    id,\r\n                    styleId,\r\n                    set: {\r\n                        property,\r\n                        value,\r\n                        priority,\r\n                    },\r\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    const removeProperty = win.CSSStyleDeclaration.prototype.removeProperty;\r\n    win.CSSStyleDeclaration.prototype.removeProperty = new Proxy(removeProperty, {\r\n        apply: callbackWrapper((target, thisArg, argumentsList) => {\r\n            const [property] = argumentsList;\r\n            if (ignoreCSSAttributes.has(property)) {\r\n                return removeProperty.apply(thisArg, [property]);\r\n            }\r\n            const { id, styleId } = getIdAndStyleId(thisArg.parentRule?.parentStyleSheet, mirror, stylesheetManager.styleMirror);\r\n            if ((id && id !== -1) || (styleId && styleId !== -1)) {\r\n                styleDeclarationCb({\r\n                    id,\r\n                    styleId,\r\n                    remove: {\r\n                        property,\r\n                    },\r\n                    index: getNestedCSSRulePositions(thisArg.parentRule),\r\n                });\r\n            }\r\n            return target.apply(thisArg, argumentsList);\r\n        }),\r\n    });\r\n    return callbackWrapper(() => {\r\n        win.CSSStyleDeclaration.prototype.setProperty = setProperty;\r\n        win.CSSStyleDeclaration.prototype.removeProperty = removeProperty;\r\n    });\r\n}\r\nfunction initMediaInteractionObserver({ mediaInteractionCb, blockClass, blockSelector, unblockSelector, mirror, sampling, doc, }) {\r\n    const handler = callbackWrapper((type) => throttle(callbackWrapper((event) => {\r\n        const target = getEventTarget(event);\r\n        if (!target ||\r\n            isBlocked(target, blockClass, blockSelector, unblockSelector, true)) {\r\n            return;\r\n        }\r\n        const { currentTime, volume, muted, playbackRate } = target;\r\n        mediaInteractionCb({\r\n            type,\r\n            id: mirror.getId(target),\r\n            currentTime,\r\n            volume,\r\n            muted,\r\n            playbackRate,\r\n        });\r\n    }), sampling.media || 500));\r\n    const handlers = [\r\n        on('play', handler(0), doc),\r\n        on('pause', handler(1), doc),\r\n        on('seeked', handler(2), doc),\r\n        on('volumechange', handler(3), doc),\r\n        on('ratechange', handler(4), doc),\r\n    ];\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initFontObserver({ fontCb, doc }) {\r\n    const win = doc.defaultView;\r\n    if (!win) {\r\n        return () => {\r\n        };\r\n    }\r\n    const handlers = [];\r\n    const fontMap = new WeakMap();\r\n    const originalFontFace = win.FontFace;\r\n    win.FontFace = function FontFace(family, source, descriptors) {\r\n        const fontFace = new originalFontFace(family, source, descriptors);\r\n        fontMap.set(fontFace, {\r\n            family,\r\n            buffer: typeof source !== 'string',\r\n            descriptors,\r\n            fontSource: typeof source === 'string'\r\n                ? source\r\n                : JSON.stringify(Array.from(new Uint8Array(source))),\r\n        });\r\n        return fontFace;\r\n    };\r\n    const restoreHandler = patch(doc.fonts, 'add', function (original) {\r\n        return function (fontFace) {\r\n            setTimeout(callbackWrapper(() => {\r\n                const p = fontMap.get(fontFace);\r\n                if (p) {\r\n                    fontCb(p);\r\n                    fontMap.delete(fontFace);\r\n                }\r\n            }), 0);\r\n            return original.apply(this, [fontFace]);\r\n        };\r\n    });\r\n    handlers.push(() => {\r\n        win.FontFace = originalFontFace;\r\n    });\r\n    handlers.push(restoreHandler);\r\n    return callbackWrapper(() => {\r\n        handlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction initSelectionObserver(param) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, selectionCb, } = param;\r\n    let collapsed = true;\r\n    const updateSelection = callbackWrapper(() => {\r\n        const selection = doc.getSelection();\r\n        if (!selection || (collapsed && selection?.isCollapsed))\r\n            return;\r\n        collapsed = selection.isCollapsed || false;\r\n        const ranges = [];\r\n        const count = selection.rangeCount || 0;\r\n        for (let i = 0; i < count; i++) {\r\n            const range = selection.getRangeAt(i);\r\n            const { startContainer, startOffset, endContainer, endOffset } = range;\r\n            const blocked = isBlocked(startContainer, blockClass, blockSelector, unblockSelector, true) ||\r\n                isBlocked(endContainer, blockClass, blockSelector, unblockSelector, true);\r\n            if (blocked)\r\n                continue;\r\n            ranges.push({\r\n                start: mirror.getId(startContainer),\r\n                startOffset,\r\n                end: mirror.getId(endContainer),\r\n                endOffset,\r\n            });\r\n        }\r\n        selectionCb({ ranges });\r\n    });\r\n    updateSelection();\r\n    return on('selectionchange', updateSelection);\r\n}\r\nfunction initCustomElementObserver({ doc, customElementCb, }) {\r\n    const win = doc.defaultView;\r\n    if (!win || !win.customElements)\r\n        return () => { };\r\n    const restoreHandler = patch(win.customElements, 'define', function (original) {\r\n        return function (name, constructor, options) {\r\n            try {\r\n                customElementCb({\r\n                    define: {\r\n                        name,\r\n                    },\r\n                });\r\n            }\r\n            catch (e) {\r\n            }\r\n            return original.apply(this, [name, constructor, options]);\r\n        };\r\n    });\r\n    return restoreHandler;\r\n}\r\nfunction initObservers(o, _hooks = {}) {\r\n    const currentWindow = o.doc.defaultView;\r\n    if (!currentWindow) {\r\n        return () => {\r\n        };\r\n    }\r\n    let mutationObserver;\r\n    if (o.recordDOM) {\r\n        mutationObserver = initMutationObserver(o, o.doc);\r\n    }\r\n    const mousemoveHandler = initMoveObserver(o);\r\n    const mouseInteractionHandler = initMouseInteractionObserver(o);\r\n    const scrollHandler = initScrollObserver(o);\r\n    const viewportResizeHandler = initViewportResizeObserver(o, {\r\n        win: currentWindow,\r\n    });\r\n    const inputHandler = initInputObserver(o);\r\n    const mediaInteractionHandler = initMediaInteractionObserver(o);\r\n    let styleSheetObserver = () => { };\r\n    let adoptedStyleSheetObserver = () => { };\r\n    let styleDeclarationObserver = () => { };\r\n    let fontObserver = () => { };\r\n    if (o.recordDOM) {\r\n        styleSheetObserver = initStyleSheetObserver(o, { win: currentWindow });\r\n        adoptedStyleSheetObserver = initAdoptedStyleSheetObserver(o, o.doc);\r\n        styleDeclarationObserver = initStyleDeclarationObserver(o, {\r\n            win: currentWindow,\r\n        });\r\n        if (o.collectFonts) {\r\n            fontObserver = initFontObserver(o);\r\n        }\r\n    }\r\n    const selectionObserver = initSelectionObserver(o);\r\n    const customElementObserver = initCustomElementObserver(o);\r\n    const pluginHandlers = [];\r\n    for (const plugin of o.plugins) {\r\n        pluginHandlers.push(plugin.observer(plugin.callback, currentWindow, plugin.options));\r\n    }\r\n    return callbackWrapper(() => {\r\n        mutationBuffers.forEach((b) => b.reset());\r\n        mutationObserver?.disconnect();\r\n        mousemoveHandler();\r\n        mouseInteractionHandler();\r\n        scrollHandler();\r\n        viewportResizeHandler();\r\n        inputHandler();\r\n        mediaInteractionHandler();\r\n        styleSheetObserver();\r\n        adoptedStyleSheetObserver();\r\n        styleDeclarationObserver();\r\n        fontObserver();\r\n        selectionObserver();\r\n        customElementObserver();\r\n        pluginHandlers.forEach((h) => h());\r\n    });\r\n}\r\nfunction hasNestedCSSRule(prop) {\r\n    return typeof window[prop] !== 'undefined';\r\n}\r\nfunction canMonkeyPatchNestedCSSRule(prop) {\r\n    return Boolean(typeof window[prop] !== 'undefined' &&\r\n        window[prop].prototype &&\r\n        'insertRule' in window[prop].prototype &&\r\n        'deleteRule' in window[prop].prototype);\r\n}\n\nexport { INPUT_TAGS, initAdoptedStyleSheetObserver, initMutationObserver, initObservers, initScrollObserver, mutationBuffers };\n","class CrossOriginIframeMirror {\r\n    constructor(generateIdFn) {\r\n        this.generateIdFn = generateIdFn;\r\n        this.iframeIdToRemoteIdMap = new WeakMap();\r\n        this.iframeRemoteIdToIdMap = new WeakMap();\r\n    }\r\n    getId(iframe, remoteId, idToRemoteMap, remoteToIdMap) {\r\n        const idToRemoteIdMap = idToRemoteMap || this.getIdToRemoteIdMap(iframe);\r\n        const remoteIdToIdMap = remoteToIdMap || this.getRemoteIdToIdMap(iframe);\r\n        let id = idToRemoteIdMap.get(remoteId);\r\n        if (!id) {\r\n            id = this.generateIdFn();\r\n            idToRemoteIdMap.set(remoteId, id);\r\n            remoteIdToIdMap.set(id, remoteId);\r\n        }\r\n        return id;\r\n    }\r\n    getIds(iframe, remoteId) {\r\n        const idToRemoteIdMap = this.getIdToRemoteIdMap(iframe);\r\n        const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\r\n        return remoteId.map((id) => this.getId(iframe, id, idToRemoteIdMap, remoteIdToIdMap));\r\n    }\r\n    getRemoteId(iframe, id, map) {\r\n        const remoteIdToIdMap = map || this.getRemoteIdToIdMap(iframe);\r\n        if (typeof id !== 'number')\r\n            return id;\r\n        const remoteId = remoteIdToIdMap.get(id);\r\n        if (!remoteId)\r\n            return -1;\r\n        return remoteId;\r\n    }\r\n    getRemoteIds(iframe, ids) {\r\n        const remoteIdToIdMap = this.getRemoteIdToIdMap(iframe);\r\n        return ids.map((id) => this.getRemoteId(iframe, id, remoteIdToIdMap));\r\n    }\r\n    reset(iframe) {\r\n        if (!iframe) {\r\n            this.iframeIdToRemoteIdMap = new WeakMap();\r\n            this.iframeRemoteIdToIdMap = new WeakMap();\r\n            return;\r\n        }\r\n        this.iframeIdToRemoteIdMap.delete(iframe);\r\n        this.iframeRemoteIdToIdMap.delete(iframe);\r\n    }\r\n    getIdToRemoteIdMap(iframe) {\r\n        let idToRemoteIdMap = this.iframeIdToRemoteIdMap.get(iframe);\r\n        if (!idToRemoteIdMap) {\r\n            idToRemoteIdMap = new Map();\r\n            this.iframeIdToRemoteIdMap.set(iframe, idToRemoteIdMap);\r\n        }\r\n        return idToRemoteIdMap;\r\n    }\r\n    getRemoteIdToIdMap(iframe) {\r\n        let remoteIdToIdMap = this.iframeRemoteIdToIdMap.get(iframe);\r\n        if (!remoteIdToIdMap) {\r\n            remoteIdToIdMap = new Map();\r\n            this.iframeRemoteIdToIdMap.set(iframe, remoteIdToIdMap);\r\n        }\r\n        return remoteIdToIdMap;\r\n    }\r\n}\n\nexport { CrossOriginIframeMirror as default };\n","import { genId, NodeType } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport CrossOriginIframeMirror from './cross-origin-iframe-mirror.js';\nimport { EventType, IncrementalSource } from '../../../types/dist/rrweb-types.js';\nimport { getIFrameContentDocument } from '../../../rrdom/es/rrdom.js';\n\nclass IframeManagerNoop {\r\n    constructor() {\r\n        this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\r\n        this.crossOriginIframeRootIdMap = new WeakMap();\r\n    }\r\n    addIframe() {\r\n    }\r\n    addLoadListener() {\r\n    }\r\n    attachIframe() {\r\n    }\r\n}\r\nclass IframeManager {\r\n    constructor(options) {\r\n        this.iframes = new WeakMap();\r\n        this.crossOriginIframeMap = new WeakMap();\r\n        this.crossOriginIframeMirror = new CrossOriginIframeMirror(genId);\r\n        this.crossOriginIframeRootIdMap = new WeakMap();\r\n        this.mutationCb = options.mutationCb;\r\n        this.wrappedEmit = options.wrappedEmit;\r\n        this.stylesheetManager = options.stylesheetManager;\r\n        this.recordCrossOriginIframes = options.recordCrossOriginIframes;\r\n        this.crossOriginIframeStyleMirror = new CrossOriginIframeMirror(this.stylesheetManager.styleMirror.generateId.bind(this.stylesheetManager.styleMirror));\r\n        this.mirror = options.mirror;\r\n        if (this.recordCrossOriginIframes) {\r\n            window.addEventListener('message', this.handleMessage.bind(this));\r\n        }\r\n    }\r\n    addIframe(iframeEl) {\r\n        this.iframes.set(iframeEl, true);\r\n        if (iframeEl.contentWindow)\r\n            this.crossOriginIframeMap.set(iframeEl.contentWindow, iframeEl);\r\n    }\r\n    addLoadListener(cb) {\r\n        this.loadListener = cb;\r\n    }\r\n    attachIframe(iframeEl, childSn) {\r\n        this.mutationCb({\r\n            adds: [\r\n                {\r\n                    parentId: this.mirror.getId(iframeEl),\r\n                    nextId: null,\r\n                    node: childSn,\r\n                },\r\n            ],\r\n            removes: [],\r\n            texts: [],\r\n            attributes: [],\r\n            isAttachIframe: true,\r\n        });\r\n        this.loadListener?.(iframeEl);\r\n        const iframeDoc = getIFrameContentDocument(iframeEl);\r\n        if (iframeDoc &&\r\n            iframeDoc.adoptedStyleSheets &&\r\n            iframeDoc.adoptedStyleSheets.length > 0)\r\n            this.stylesheetManager.adoptStyleSheets(iframeDoc.adoptedStyleSheets, this.mirror.getId(iframeDoc));\r\n    }\r\n    handleMessage(message) {\r\n        const crossOriginMessageEvent = message;\r\n        if (crossOriginMessageEvent.data.type !== 'rrweb' ||\r\n            crossOriginMessageEvent.origin !== crossOriginMessageEvent.data.origin)\r\n            return;\r\n        const iframeSourceWindow = message.source;\r\n        if (!iframeSourceWindow)\r\n            return;\r\n        const iframeEl = this.crossOriginIframeMap.get(message.source);\r\n        if (!iframeEl)\r\n            return;\r\n        const transformedEvent = this.transformCrossOriginEvent(iframeEl, crossOriginMessageEvent.data.event);\r\n        if (transformedEvent)\r\n            this.wrappedEmit(transformedEvent, crossOriginMessageEvent.data.isCheckout);\r\n    }\r\n    transformCrossOriginEvent(iframeEl, e) {\r\n        switch (e.type) {\r\n            case EventType.FullSnapshot: {\r\n                this.crossOriginIframeMirror.reset(iframeEl);\r\n                this.crossOriginIframeStyleMirror.reset(iframeEl);\r\n                this.replaceIdOnNode(e.data.node, iframeEl);\r\n                const rootId = e.data.node.id;\r\n                this.crossOriginIframeRootIdMap.set(iframeEl, rootId);\r\n                this.patchRootIdOnNode(e.data.node, rootId);\r\n                return {\r\n                    timestamp: e.timestamp,\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.Mutation,\r\n                        adds: [\r\n                            {\r\n                                parentId: this.mirror.getId(iframeEl),\r\n                                nextId: null,\r\n                                node: e.data.node,\r\n                            },\r\n                        ],\r\n                        removes: [],\r\n                        texts: [],\r\n                        attributes: [],\r\n                        isAttachIframe: true,\r\n                    },\r\n                };\r\n            }\r\n            case EventType.Meta:\r\n            case EventType.Load:\r\n            case EventType.DomContentLoaded: {\r\n                return false;\r\n            }\r\n            case EventType.Plugin: {\r\n                return e;\r\n            }\r\n            case EventType.Custom: {\r\n                this.replaceIds(e.data.payload, iframeEl, ['id', 'parentId', 'previousId', 'nextId']);\r\n                return e;\r\n            }\r\n            case EventType.IncrementalSnapshot: {\r\n                switch (e.data.source) {\r\n                    case IncrementalSource.Mutation: {\r\n                        e.data.adds.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, [\r\n                                'parentId',\r\n                                'nextId',\r\n                                'previousId',\r\n                            ]);\r\n                            this.replaceIdOnNode(n.node, iframeEl);\r\n                            const rootId = this.crossOriginIframeRootIdMap.get(iframeEl);\r\n                            rootId && this.patchRootIdOnNode(n.node, rootId);\r\n                        });\r\n                        e.data.removes.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, ['parentId', 'id']);\r\n                        });\r\n                        e.data.attributes.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, ['id']);\r\n                        });\r\n                        e.data.texts.forEach((n) => {\r\n                            this.replaceIds(n, iframeEl, ['id']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.Drag:\r\n                    case IncrementalSource.TouchMove:\r\n                    case IncrementalSource.MouseMove: {\r\n                        e.data.positions.forEach((p) => {\r\n                            this.replaceIds(p, iframeEl, ['id']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.ViewportResize: {\r\n                        return false;\r\n                    }\r\n                    case IncrementalSource.MediaInteraction:\r\n                    case IncrementalSource.MouseInteraction:\r\n                    case IncrementalSource.Scroll:\r\n                    case IncrementalSource.CanvasMutation:\r\n                    case IncrementalSource.Input: {\r\n                        this.replaceIds(e.data, iframeEl, ['id']);\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.StyleSheetRule:\r\n                    case IncrementalSource.StyleDeclaration: {\r\n                        this.replaceIds(e.data, iframeEl, ['id']);\r\n                        this.replaceStyleIds(e.data, iframeEl, ['styleId']);\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.Font: {\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.Selection: {\r\n                        e.data.ranges.forEach((range) => {\r\n                            this.replaceIds(range, iframeEl, ['start', 'end']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                    case IncrementalSource.AdoptedStyleSheet: {\r\n                        this.replaceIds(e.data, iframeEl, ['id']);\r\n                        this.replaceStyleIds(e.data, iframeEl, ['styleIds']);\r\n                        e.data.styles?.forEach((style) => {\r\n                            this.replaceStyleIds(style, iframeEl, ['styleId']);\r\n                        });\r\n                        return e;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    replace(iframeMirror, obj, iframeEl, keys) {\r\n        for (const key of keys) {\r\n            if (!Array.isArray(obj[key]) && typeof obj[key] !== 'number')\r\n                continue;\r\n            if (Array.isArray(obj[key])) {\r\n                obj[key] = iframeMirror.getIds(iframeEl, obj[key]);\r\n            }\r\n            else {\r\n                obj[key] = iframeMirror.getId(iframeEl, obj[key]);\r\n            }\r\n        }\r\n        return obj;\r\n    }\r\n    replaceIds(obj, iframeEl, keys) {\r\n        return this.replace(this.crossOriginIframeMirror, obj, iframeEl, keys);\r\n    }\r\n    replaceStyleIds(obj, iframeEl, keys) {\r\n        return this.replace(this.crossOriginIframeStyleMirror, obj, iframeEl, keys);\r\n    }\r\n    replaceIdOnNode(node, iframeEl) {\r\n        this.replaceIds(node, iframeEl, ['id', 'rootId']);\r\n        if ('childNodes' in node) {\r\n            node.childNodes.forEach((child) => {\r\n                this.replaceIdOnNode(child, iframeEl);\r\n            });\r\n        }\r\n    }\r\n    patchRootIdOnNode(node, rootId) {\r\n        if (node.type !== NodeType.Document && !node.rootId)\r\n            node.rootId = rootId;\r\n        if ('childNodes' in node) {\r\n            node.childNodes.forEach((child) => {\r\n                this.patchRootIdOnNode(child, rootId);\r\n            });\r\n        }\r\n    }\r\n}\n\nexport { IframeManager, IframeManagerNoop };\n","import { initMutationObserver, initScrollObserver, initAdoptedStyleSheetObserver } from './observer.js';\nimport { setTimeout, patch, inDom } from '../utils.js';\nimport { isNativeShadowDom } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { getIFrameContentDocument, getIFrameContentWindow } from '../../../rrdom/es/rrdom.js';\n\nclass ShadowDomManagerNoop {\r\n    init() {\r\n    }\r\n    addShadowRoot() {\r\n    }\r\n    observeAttachShadow() {\r\n    }\r\n    reset() {\r\n    }\r\n}\r\nclass ShadowDomManager {\r\n    constructor(options) {\r\n        this.shadowDoms = new WeakSet();\r\n        this.restoreHandlers = [];\r\n        this.mutationCb = options.mutationCb;\r\n        this.scrollCb = options.scrollCb;\r\n        this.bypassOptions = options.bypassOptions;\r\n        this.mirror = options.mirror;\r\n        this.init();\r\n    }\r\n    init() {\r\n        this.reset();\r\n        this.patchAttachShadow(Element, document);\r\n    }\r\n    addShadowRoot(shadowRoot, doc) {\r\n        if (!isNativeShadowDom(shadowRoot))\r\n            return;\r\n        if (this.shadowDoms.has(shadowRoot))\r\n            return;\r\n        this.shadowDoms.add(shadowRoot);\r\n        this.bypassOptions.canvasManager.addShadowRoot(shadowRoot);\r\n        const observer = initMutationObserver({\r\n            ...this.bypassOptions,\r\n            doc,\r\n            mutationCb: this.mutationCb,\r\n            mirror: this.mirror,\r\n            shadowDomManager: this,\r\n        }, shadowRoot);\r\n        this.restoreHandlers.push(() => observer.disconnect());\r\n        this.restoreHandlers.push(initScrollObserver({\r\n            ...this.bypassOptions,\r\n            scrollCb: this.scrollCb,\r\n            doc: shadowRoot,\r\n            mirror: this.mirror,\r\n        }));\r\n        setTimeout(() => {\r\n            if (shadowRoot.adoptedStyleSheets &&\r\n                shadowRoot.adoptedStyleSheets.length > 0)\r\n                this.bypassOptions.stylesheetManager.adoptStyleSheets(shadowRoot.adoptedStyleSheets, this.mirror.getId(shadowRoot.host));\r\n            this.restoreHandlers.push(initAdoptedStyleSheetObserver({\r\n                mirror: this.mirror,\r\n                stylesheetManager: this.bypassOptions.stylesheetManager,\r\n            }, shadowRoot));\r\n        }, 0);\r\n    }\r\n    observeAttachShadow(iframeElement) {\r\n        const iframeDoc = getIFrameContentDocument(iframeElement);\r\n        const iframeWindow = getIFrameContentWindow(iframeElement);\r\n        if (!iframeDoc || !iframeWindow)\r\n            return;\r\n        this.patchAttachShadow(iframeWindow.Element, iframeDoc);\r\n    }\r\n    patchAttachShadow(element, doc) {\r\n        const manager = this;\r\n        this.restoreHandlers.push(patch(element.prototype, 'attachShadow', function (original) {\r\n            return function (option) {\r\n                const shadowRoot = original.call(this, option);\r\n                if (this.shadowRoot && inDom(this))\r\n                    manager.addShadowRoot(this.shadowRoot, doc);\r\n                return shadowRoot;\r\n            };\r\n        }));\r\n    }\r\n    reset() {\r\n        this.restoreHandlers.forEach((handler) => {\r\n            try {\r\n                handler();\r\n            }\r\n            catch (e) {\r\n            }\r\n        });\r\n        this.restoreHandlers = [];\r\n        this.shadowDoms = new WeakSet();\r\n        this.bypassOptions.canvasManager.resetShadowRoots();\r\n    }\r\n}\n\nexport { ShadowDomManager, ShadowDomManagerNoop };\n","import { onRequestAnimationFrame, isBlocked } from '../../../utils.js';\nimport { CanvasContext } from '../../../../../types/dist/rrweb-types.js';\nimport initCanvas2DMutationObserver from './2d.js';\nimport initCanvasContextObserver from './canvas.js';\nimport initCanvasWebGLMutationObserver from './webgl.js';\nimport { getImageBitmapDataUrlWorkerURL as t } from '../../../../../rrweb-worker/es/rrweb-worker/index.js';\nimport { callbackWrapper, registerErrorHandler } from '../../error-handler.js';\n\nclass CanvasManagerNoop {\r\n    reset() {\r\n    }\r\n    freeze() {\r\n    }\r\n    unfreeze() {\r\n    }\r\n    lock() {\r\n    }\r\n    unlock() {\r\n    }\r\n    snapshot() {\r\n    }\r\n    addWindow() {\r\n    }\r\n    addShadowRoot() {\r\n    }\r\n    resetShadowRoots() {\r\n    }\r\n}\r\nclass CanvasManager {\r\n    reset() {\r\n        this.pendingCanvasMutations.clear();\r\n        this.restoreHandlers.forEach((handler) => {\r\n            try {\r\n                handler();\r\n            }\r\n            catch (e) {\r\n            }\r\n        });\r\n        this.restoreHandlers = [];\r\n        this.windowsSet = new WeakSet();\r\n        this.windows = [];\r\n        this.shadowDoms = new Set();\r\n        this.worker?.terminate();\r\n        this.worker = null;\r\n        this.snapshotInProgressMap = new Map();\r\n    }\r\n    freeze() {\r\n        this.frozen = true;\r\n    }\r\n    unfreeze() {\r\n        this.frozen = false;\r\n    }\r\n    lock() {\r\n        this.locked = true;\r\n    }\r\n    unlock() {\r\n        this.locked = false;\r\n    }\r\n    constructor(options) {\r\n        this.pendingCanvasMutations = new Map();\r\n        this.rafStamps = { latestId: 0, invokeId: null };\r\n        this.shadowDoms = new Set();\r\n        this.windowsSet = new WeakSet();\r\n        this.windows = [];\r\n        this.restoreHandlers = [];\r\n        this.frozen = false;\r\n        this.locked = false;\r\n        this.snapshotInProgressMap = new Map();\r\n        this.worker = null;\r\n        this.processMutation = (target, mutation) => {\r\n            const newFrame = this.rafStamps.invokeId &&\r\n                this.rafStamps.latestId !== this.rafStamps.invokeId;\r\n            if (newFrame || !this.rafStamps.invokeId)\r\n                this.rafStamps.invokeId = this.rafStamps.latestId;\r\n            if (!this.pendingCanvasMutations.has(target)) {\r\n                this.pendingCanvasMutations.set(target, []);\r\n            }\r\n            this.pendingCanvasMutations.get(target).push(mutation);\r\n        };\r\n        const { sampling = 'all', win, blockClass, blockSelector, unblockSelector, maxCanvasSize, recordCanvas, dataURLOptions, errorHandler, } = options;\r\n        this.mutationCb = options.mutationCb;\r\n        this.mirror = options.mirror;\r\n        this.options = options;\r\n        if (errorHandler) {\r\n            registerErrorHandler(errorHandler);\r\n        }\r\n        if ((recordCanvas && typeof sampling === 'number') ||\r\n            options.enableManualSnapshot) {\r\n            this.worker = this.initFPSWorker();\r\n        }\r\n        this.addWindow(win);\r\n        if (options.enableManualSnapshot) {\r\n            return;\r\n        }\r\n        callbackWrapper(() => {\r\n            if (recordCanvas && sampling === 'all') {\r\n                this.startRAFTimestamping();\r\n                this.startPendingCanvasMutationFlusher();\r\n            }\r\n            if (recordCanvas && typeof sampling === 'number') {\r\n                this.initCanvasFPSObserver(sampling, blockClass, blockSelector, unblockSelector, maxCanvasSize, {\r\n                    dataURLOptions,\r\n                });\r\n            }\r\n        })();\r\n    }\r\n    addWindow(win) {\r\n        const { sampling = 'all', blockClass, blockSelector, unblockSelector, recordCanvas, enableManualSnapshot, } = this.options;\r\n        if (this.windowsSet.has(win))\r\n            return;\r\n        if (enableManualSnapshot) {\r\n            this.windowsSet.add(win);\r\n            this.windows.push(new WeakRef(win));\r\n            return;\r\n        }\r\n        callbackWrapper(() => {\r\n            if (recordCanvas && sampling === 'all') {\r\n                this.initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector);\r\n            }\r\n            if (recordCanvas && typeof sampling === 'number') {\r\n                const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, true);\r\n                this.restoreHandlers.push(() => {\r\n                    canvasContextReset();\r\n                });\r\n            }\r\n        })();\r\n        this.windowsSet.add(win);\r\n        this.windows.push(new WeakRef(win));\r\n    }\r\n    addShadowRoot(shadowRoot) {\r\n        this.shadowDoms.add(new WeakRef(shadowRoot));\r\n    }\r\n    resetShadowRoots() {\r\n        this.shadowDoms = new Set();\r\n    }\r\n    initFPSWorker() {\r\n        const worker = new Worker(t());\r\n        worker.onmessage = (e) => {\r\n            const data = e.data;\r\n            const { id } = data;\r\n            this.snapshotInProgressMap.set(id, false);\r\n            if (!('base64' in data))\r\n                return;\r\n            const { base64, type, width, height } = data;\r\n            this.mutationCb({\r\n                id,\r\n                type: CanvasContext['2D'],\r\n                commands: [\r\n                    {\r\n                        property: 'clearRect',\r\n                        args: [0, 0, width, height],\r\n                    },\r\n                    {\r\n                        property: 'drawImage',\r\n                        args: [\r\n                            {\r\n                                rr_type: 'ImageBitmap',\r\n                                args: [\r\n                                    {\r\n                                        rr_type: 'Blob',\r\n                                        data: [{ rr_type: 'ArrayBuffer', base64 }],\r\n                                        type,\r\n                                    },\r\n                                ],\r\n                            },\r\n                            0,\r\n                            0,\r\n                            width,\r\n                            height,\r\n                        ],\r\n                    },\r\n                ],\r\n            });\r\n        };\r\n        return worker;\r\n    }\r\n    initCanvasFPSObserver(fps, blockClass, blockSelector, unblockSelector, maxCanvasSize, options) {\r\n        const rafId = this.takeSnapshot(false, fps, blockClass, blockSelector, unblockSelector, maxCanvasSize, options.dataURLOptions);\r\n        this.restoreHandlers.push(() => {\r\n            cancelAnimationFrame(rafId);\r\n        });\r\n    }\r\n    initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector) {\r\n        const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, false);\r\n        const canvas2DReset = initCanvas2DMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector);\r\n        const canvasWebGL1and2Reset = initCanvasWebGLMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector, this.mirror);\r\n        this.restoreHandlers.push(() => {\r\n            canvasContextReset();\r\n            canvas2DReset();\r\n            canvasWebGL1and2Reset();\r\n        });\r\n    }\r\n    snapshot(canvasElement) {\r\n        const { options } = this;\r\n        const rafId = this.takeSnapshot(true, options.sampling === 'all' ? 2 : options.sampling || 2, options.blockClass, options.blockSelector, options.unblockSelector, options.maxCanvasSize, options.dataURLOptions, canvasElement);\r\n        this.restoreHandlers.push(() => {\r\n            cancelAnimationFrame(rafId);\r\n        });\r\n    }\r\n    takeSnapshot(isManualSnapshot, fps, blockClass, blockSelector, unblockSelector, maxCanvasSize, dataURLOptions, canvasElement) {\r\n        const timeBetweenSnapshots = 1000 / fps;\r\n        let lastSnapshotTime = 0;\r\n        let rafId;\r\n        const getCanvas = (canvasElement) => {\r\n            if (canvasElement) {\r\n                return [canvasElement];\r\n            }\r\n            const matchedCanvas = [];\r\n            const searchCanvas = (root) => {\r\n                root.querySelectorAll('canvas').forEach((canvas) => {\r\n                    if (!isBlocked(canvas, blockClass, blockSelector, unblockSelector, true)) {\r\n                        matchedCanvas.push(canvas);\r\n                    }\r\n                });\r\n            };\r\n            for (const item of this.windows) {\r\n                const window = item.deref();\r\n                if (window) {\r\n                    searchCanvas(window.document);\r\n                }\r\n            }\r\n            for (const item of this.shadowDoms) {\r\n                const shadowRoot = item.deref();\r\n                if (shadowRoot) {\r\n                    searchCanvas(shadowRoot);\r\n                }\r\n            }\r\n            return matchedCanvas;\r\n        };\r\n        const takeCanvasSnapshots = (timestamp) => {\r\n            if (!this.windows.length) {\r\n                return;\r\n            }\r\n            if (lastSnapshotTime &&\r\n                timestamp - lastSnapshotTime < timeBetweenSnapshots) {\r\n                rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n                return;\r\n            }\r\n            lastSnapshotTime = timestamp;\r\n            getCanvas(canvasElement).forEach((canvas) => {\r\n                if (!this.mirror.hasNode(canvas)) {\r\n                    return;\r\n                }\r\n                const id = this.mirror.getId(canvas);\r\n                if (this.snapshotInProgressMap.get(id))\r\n                    return;\r\n                if (!canvas.width || !canvas.height)\r\n                    return;\r\n                this.snapshotInProgressMap.set(id, true);\r\n                if (!isManualSnapshot &&\r\n                    ['webgl', 'webgl2'].includes(canvas.__context)) {\r\n                    const context = canvas.getContext(canvas.__context);\r\n                    if (context?.getContextAttributes()?.preserveDrawingBuffer === false) {\r\n                        context.clear(context.COLOR_BUFFER_BIT);\r\n                    }\r\n                }\r\n                createImageBitmap(canvas)\r\n                    .then((bitmap) => {\r\n                    this.worker?.postMessage({\r\n                        id,\r\n                        bitmap,\r\n                        width: canvas.width,\r\n                        height: canvas.height,\r\n                        dataURLOptions,\r\n                        maxCanvasSize,\r\n                    }, [bitmap]);\r\n                })\r\n                    .catch((error) => {\r\n                    callbackWrapper(() => {\r\n                        throw error;\r\n                    })();\r\n                });\r\n            });\r\n            if (!isManualSnapshot) {\r\n                rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n            }\r\n        };\r\n        rafId = onRequestAnimationFrame(takeCanvasSnapshots);\r\n        return rafId;\r\n    }\r\n    startPendingCanvasMutationFlusher() {\r\n        onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\r\n    }\r\n    startRAFTimestamping() {\r\n        const setLatestRAFTimestamp = (timestamp) => {\r\n            this.rafStamps.latestId = timestamp;\r\n            onRequestAnimationFrame(setLatestRAFTimestamp);\r\n        };\r\n        onRequestAnimationFrame(setLatestRAFTimestamp);\r\n    }\r\n    flushPendingCanvasMutations() {\r\n        this.pendingCanvasMutations.forEach((values, canvas) => {\r\n            const id = this.mirror.getId(canvas);\r\n            this.flushPendingCanvasMutationFor(canvas, id);\r\n        });\r\n        onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\r\n    }\r\n    flushPendingCanvasMutationFor(canvas, id) {\r\n        if (this.frozen || this.locked) {\r\n            return;\r\n        }\r\n        const valuesWithType = this.pendingCanvasMutations.get(canvas);\r\n        if (!valuesWithType || id === -1)\r\n            return;\r\n        const values = valuesWithType.map((value) => {\r\n            const { type, ...rest } = value;\r\n            return rest;\r\n        });\r\n        const { type } = valuesWithType[0];\r\n        this.mutationCb({ id, type, commands: values });\r\n        this.pendingCanvasMutations.delete(canvas);\r\n    }\r\n}\n\nexport { CanvasManager, CanvasManagerNoop };\n","import { stringifyRule } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { StyleSheetMirror } from '../utils.js';\n\nclass StylesheetManager {\r\n    constructor(options) {\r\n        this.trackedLinkElements = new WeakSet();\r\n        this.styleMirror = new StyleSheetMirror();\r\n        this.mutationCb = options.mutationCb;\r\n        this.adoptedStyleSheetCb = options.adoptedStyleSheetCb;\r\n    }\r\n    attachLinkElement(linkEl, childSn) {\r\n        if ('_cssText' in childSn.attributes)\r\n            this.mutationCb({\r\n                adds: [],\r\n                removes: [],\r\n                texts: [],\r\n                attributes: [\r\n                    {\r\n                        id: childSn.id,\r\n                        attributes: childSn\r\n                            .attributes,\r\n                    },\r\n                ],\r\n            });\r\n        this.trackLinkElement(linkEl);\r\n    }\r\n    trackLinkElement(linkEl) {\r\n        if (this.trackedLinkElements.has(linkEl))\r\n            return;\r\n        this.trackedLinkElements.add(linkEl);\r\n        this.trackStylesheetInLinkElement(linkEl);\r\n    }\r\n    adoptStyleSheets(sheets, hostId) {\r\n        if (sheets.length === 0)\r\n            return;\r\n        const adoptedStyleSheetData = {\r\n            id: hostId,\r\n            styleIds: [],\r\n        };\r\n        const styles = [];\r\n        for (const sheet of sheets) {\r\n            let styleId;\r\n            if (!this.styleMirror.has(sheet)) {\r\n                styleId = this.styleMirror.add(sheet);\r\n                styles.push({\r\n                    styleId,\r\n                    rules: Array.from(sheet.rules || CSSRule, (r, index) => ({\r\n                        rule: stringifyRule(r),\r\n                        index,\r\n                    })),\r\n                });\r\n            }\r\n            else\r\n                styleId = this.styleMirror.getId(sheet);\r\n            adoptedStyleSheetData.styleIds.push(styleId);\r\n        }\r\n        if (styles.length > 0)\r\n            adoptedStyleSheetData.styles = styles;\r\n        this.adoptedStyleSheetCb(adoptedStyleSheetData);\r\n    }\r\n    reset() {\r\n        this.styleMirror.reset();\r\n        this.trackedLinkElements = new WeakSet();\r\n    }\r\n    trackStylesheetInLinkElement(linkEl) {\r\n    }\r\n}\n\nexport { StylesheetManager };\n","import { onRequestAnimationFrame } from '../utils.js';\n\nclass ProcessedNodeManager {\r\n    constructor() {\r\n        this.nodeMap = new WeakMap();\r\n        this.active = false;\r\n    }\r\n    inOtherBuffer(node, thisBuffer) {\r\n        const buffers = this.nodeMap.get(node);\r\n        return (buffers && Array.from(buffers).some((buffer) => buffer !== thisBuffer));\r\n    }\r\n    add(node, buffer) {\r\n        if (!this.active) {\r\n            this.active = true;\r\n            onRequestAnimationFrame(() => {\r\n                this.nodeMap = new WeakMap();\r\n                this.active = false;\r\n            });\r\n        }\r\n        this.nodeMap.set(node, (this.nodeMap.get(node) || new Set()).add(buffer));\r\n    }\r\n    destroy() {\r\n    }\r\n}\n\nexport { ProcessedNodeManager as default };\n","import { createMirror, snapshot } from '../../../rrweb-snapshot/es/rrweb-snapshot.js';\nimport { initObservers, mutationBuffers } from './observer.js';\nimport { polyfill, on, nowTimestamp, getWindowWidth, getWindowHeight, getWindowScroll, isSerializedIframe, isSerializedStylesheet, hasShadowRoot } from '../utils.js';\nimport { EventType, IncrementalSource } from '../../../types/dist/rrweb-types.js';\nimport { IframeManagerNoop, IframeManager } from './iframe-manager.js';\nimport { ShadowDomManagerNoop, ShadowDomManager } from './shadow-dom-manager.js';\nimport { CanvasManagerNoop } from './observers/canvas/canvas-manager.js';\nexport { CanvasManager } from './observers/canvas/canvas-manager.js';\nimport { StylesheetManager } from './stylesheet-manager.js';\nimport ProcessedNodeManager from './processed-node-manager.js';\nimport { callbackWrapper, unregisterErrorHandler, registerErrorHandler } from './error-handler.js';\n\nlet wrappedEmit;\r\nlet _wrappedEmit;\r\nlet _takeFullSnapshot;\r\ntry {\r\n    if (Array.from([1], (x) => x * 2)[0] !== 2) {\r\n        const cleanFrame = document.createElement('iframe');\r\n        document.body.appendChild(cleanFrame);\r\n        Array.from = cleanFrame.contentWindow?.Array.from || Array.from;\r\n        document.body.removeChild(cleanFrame);\r\n    }\r\n}\r\ncatch (err) {\r\n    console.debug('Unable to override Array.from', err);\r\n}\r\nconst mirror = createMirror();\r\nfunction record(options = {}) {\r\n    const { emit, checkoutEveryNms, checkoutEveryNth, blockClass = 'rr-block', blockSelector = null, unblockSelector = null, ignoreClass = 'rr-ignore', ignoreSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, maskAllInputs, maskInputOptions: _maskInputOptions, slimDOMOptions: _slimDOMOptions, maskAttributeFn, maskInputFn, maskTextFn, maxCanvasSize = null, packFn, sampling = {}, dataURLOptions = {}, mousemoveWait, recordDOM = true, recordCanvas = false, recordCrossOriginIframes = false, recordAfter = options.recordAfter === 'DOMContentLoaded'\r\n        ? options.recordAfter\r\n        : 'load', userTriggeredOnInput = false, collectFonts = false, inlineImages = false, plugins, keepIframeSrcFn = () => false, ignoreCSSAttributes = new Set([]), errorHandler, onMutation, getCanvasManager, } = options;\r\n    registerErrorHandler(errorHandler);\r\n    const inEmittingFrame = recordCrossOriginIframes\r\n        ? window.parent === window\r\n        : true;\r\n    let passEmitsToParent = false;\r\n    if (!inEmittingFrame) {\r\n        try {\r\n            if (window.parent.document) {\r\n                passEmitsToParent = false;\r\n            }\r\n        }\r\n        catch (e) {\r\n            passEmitsToParent = true;\r\n        }\r\n    }\r\n    if (inEmittingFrame && !emit) {\r\n        throw new Error('emit function is required');\r\n    }\r\n    if (!inEmittingFrame && !passEmitsToParent) {\r\n        return () => {\r\n        };\r\n    }\r\n    if (mousemoveWait !== undefined && sampling.mousemove === undefined) {\r\n        sampling.mousemove = mousemoveWait;\r\n    }\r\n    mirror.reset();\r\n    const maskInputOptions = maskAllInputs === true\r\n        ? {\r\n            color: true,\r\n            date: true,\r\n            'datetime-local': true,\r\n            email: true,\r\n            month: true,\r\n            number: true,\r\n            range: true,\r\n            search: true,\r\n            tel: true,\r\n            text: true,\r\n            time: true,\r\n            url: true,\r\n            week: true,\r\n            textarea: true,\r\n            select: true,\r\n            radio: true,\r\n            checkbox: true,\r\n        }\r\n        : _maskInputOptions !== undefined\r\n            ? _maskInputOptions\r\n            : {};\r\n    const slimDOMOptions = _slimDOMOptions === true || _slimDOMOptions === 'all'\r\n        ? {\r\n            script: true,\r\n            comment: true,\r\n            headFavicon: true,\r\n            headWhitespace: true,\r\n            headMetaSocial: true,\r\n            headMetaRobots: true,\r\n            headMetaHttpEquiv: true,\r\n            headMetaVerification: true,\r\n            headMetaAuthorship: _slimDOMOptions === 'all',\r\n            headMetaDescKeywords: _slimDOMOptions === 'all',\r\n        }\r\n        : _slimDOMOptions\r\n            ? _slimDOMOptions\r\n            : {};\r\n    polyfill();\r\n    let lastFullSnapshotEvent;\r\n    let incrementalSnapshotCount = 0;\r\n    const eventProcessor = (e) => {\r\n        for (const plugin of plugins || []) {\r\n            if (plugin.eventProcessor) {\r\n                e = plugin.eventProcessor(e);\r\n            }\r\n        }\r\n        if (packFn &&\r\n            !passEmitsToParent) {\r\n            e = packFn(e);\r\n        }\r\n        return e;\r\n    };\r\n    wrappedEmit = (r, isCheckout) => {\r\n        const e = r;\r\n        e.timestamp = nowTimestamp();\r\n        if (mutationBuffers[0]?.isFrozen() &&\r\n            e.type !== EventType.FullSnapshot &&\r\n            !(e.type === EventType.IncrementalSnapshot &&\r\n                e.data.source === IncrementalSource.Mutation)) {\r\n            mutationBuffers.forEach((buf) => buf.unfreeze());\r\n        }\r\n        if (inEmittingFrame) {\r\n            emit?.(eventProcessor(e), isCheckout);\r\n        }\r\n        else if (passEmitsToParent) {\r\n            const message = {\r\n                type: 'rrweb',\r\n                event: eventProcessor(e),\r\n                origin: window.location.origin,\r\n                isCheckout,\r\n            };\r\n            window.parent.postMessage(message, '*');\r\n        }\r\n        if (e.type === EventType.FullSnapshot) {\r\n            lastFullSnapshotEvent = e;\r\n            incrementalSnapshotCount = 0;\r\n        }\r\n        else if (e.type === EventType.IncrementalSnapshot) {\r\n            if (e.data.source === IncrementalSource.Mutation &&\r\n                e.data.isAttachIframe) {\r\n                return;\r\n            }\r\n            incrementalSnapshotCount++;\r\n            const exceedCount = checkoutEveryNth && incrementalSnapshotCount >= checkoutEveryNth;\r\n            const exceedTime = checkoutEveryNms &&\r\n                lastFullSnapshotEvent &&\r\n                e.timestamp - lastFullSnapshotEvent.timestamp > checkoutEveryNms;\r\n            if (exceedCount || exceedTime) {\r\n                takeFullSnapshot(true);\r\n            }\r\n        }\r\n    };\r\n    _wrappedEmit = wrappedEmit;\r\n    const wrappedMutationEmit = (m) => {\r\n        wrappedEmit({\r\n            type: EventType.IncrementalSnapshot,\r\n            data: {\r\n                source: IncrementalSource.Mutation,\r\n                ...m,\r\n            },\r\n        });\r\n    };\r\n    const wrappedScrollEmit = (p) => wrappedEmit({\r\n        type: EventType.IncrementalSnapshot,\r\n        data: {\r\n            source: IncrementalSource.Scroll,\r\n            ...p,\r\n        },\r\n    });\r\n    const wrappedCanvasMutationEmit = (p) => wrappedEmit({\r\n        type: EventType.IncrementalSnapshot,\r\n        data: {\r\n            source: IncrementalSource.CanvasMutation,\r\n            ...p,\r\n        },\r\n    });\r\n    const wrappedAdoptedStyleSheetEmit = (a) => wrappedEmit({\r\n        type: EventType.IncrementalSnapshot,\r\n        data: {\r\n            source: IncrementalSource.AdoptedStyleSheet,\r\n            ...a,\r\n        },\r\n    });\r\n    const stylesheetManager = new StylesheetManager({\r\n        mutationCb: wrappedMutationEmit,\r\n        adoptedStyleSheetCb: wrappedAdoptedStyleSheetEmit,\r\n    });\r\n    const iframeManager = typeof __RRWEB_EXCLUDE_IFRAME__ === 'boolean' && __RRWEB_EXCLUDE_IFRAME__\r\n        ? new IframeManagerNoop()\r\n        : new IframeManager({\r\n            mirror,\r\n            mutationCb: wrappedMutationEmit,\r\n            stylesheetManager: stylesheetManager,\r\n            recordCrossOriginIframes,\r\n            wrappedEmit,\r\n        });\r\n    for (const plugin of plugins || []) {\r\n        if (plugin.getMirror)\r\n            plugin.getMirror({\r\n                nodeMirror: mirror,\r\n                crossOriginIframeMirror: iframeManager.crossOriginIframeMirror,\r\n                crossOriginIframeStyleMirror: iframeManager.crossOriginIframeStyleMirror,\r\n            });\r\n    }\r\n    const processedNodeManager = new ProcessedNodeManager();\r\n    const canvasManager = _getCanvasManager(getCanvasManager, {\r\n        mirror,\r\n        win: window,\r\n        mutationCb: (p) => wrappedEmit({\r\n            type: EventType.IncrementalSnapshot,\r\n            data: {\r\n                source: IncrementalSource.CanvasMutation,\r\n                ...p,\r\n            },\r\n        }),\r\n        recordCanvas,\r\n        blockClass,\r\n        blockSelector,\r\n        unblockSelector,\r\n        maxCanvasSize,\r\n        sampling: sampling['canvas'],\r\n        dataURLOptions,\r\n        errorHandler,\r\n    });\r\n    const shadowDomManager = typeof __RRWEB_EXCLUDE_SHADOW_DOM__ === 'boolean' &&\r\n        __RRWEB_EXCLUDE_SHADOW_DOM__\r\n        ? new ShadowDomManagerNoop()\r\n        : new ShadowDomManager({\r\n            mutationCb: wrappedMutationEmit,\r\n            scrollCb: wrappedScrollEmit,\r\n            bypassOptions: {\r\n                onMutation,\r\n                blockClass,\r\n                blockSelector,\r\n                unblockSelector,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                inlineStylesheet,\r\n                maskInputOptions,\r\n                dataURLOptions,\r\n                maskAttributeFn,\r\n                maskTextFn,\r\n                maskInputFn,\r\n                recordCanvas,\r\n                inlineImages,\r\n                sampling,\r\n                slimDOMOptions,\r\n                iframeManager,\r\n                stylesheetManager,\r\n                canvasManager,\r\n                keepIframeSrcFn,\r\n                processedNodeManager,\r\n            },\r\n            mirror,\r\n        });\r\n    const takeFullSnapshot = (isCheckout = false) => {\r\n        if (!recordDOM) {\r\n            return;\r\n        }\r\n        wrappedEmit({\r\n            type: EventType.Meta,\r\n            data: {\r\n                href: window.location.href,\r\n                width: getWindowWidth(),\r\n                height: getWindowHeight(),\r\n            },\r\n        }, isCheckout);\r\n        stylesheetManager.reset();\r\n        shadowDomManager.init();\r\n        mutationBuffers.forEach((buf) => buf.lock());\r\n        const node = snapshot(document, {\r\n            mirror,\r\n            blockClass,\r\n            blockSelector,\r\n            unblockSelector,\r\n            maskAllText,\r\n            maskTextClass,\r\n            unmaskTextClass,\r\n            maskTextSelector,\r\n            unmaskTextSelector,\r\n            inlineStylesheet,\r\n            maskAllInputs: maskInputOptions,\r\n            maskAttributeFn,\r\n            maskInputFn,\r\n            maskTextFn,\r\n            slimDOM: slimDOMOptions,\r\n            dataURLOptions,\r\n            recordCanvas,\r\n            inlineImages,\r\n            onSerialize: (n) => {\r\n                if (isSerializedIframe(n, mirror)) {\r\n                    iframeManager.addIframe(n);\r\n                }\r\n                if (isSerializedStylesheet(n, mirror)) {\r\n                    stylesheetManager.trackLinkElement(n);\r\n                }\r\n                if (hasShadowRoot(n)) {\r\n                    shadowDomManager.addShadowRoot(n.shadowRoot, document);\r\n                }\r\n            },\r\n            onIframeLoad: (iframe, childSn) => {\r\n                iframeManager.attachIframe(iframe, childSn);\r\n                if (iframe.contentWindow) {\r\n                    canvasManager.addWindow(iframe.contentWindow);\r\n                }\r\n                shadowDomManager.observeAttachShadow(iframe);\r\n            },\r\n            onStylesheetLoad: (linkEl, childSn) => {\r\n                stylesheetManager.attachLinkElement(linkEl, childSn);\r\n            },\r\n            keepIframeSrcFn,\r\n        });\r\n        if (!node) {\r\n            return console.warn('Failed to snapshot the document');\r\n        }\r\n        wrappedEmit({\r\n            type: EventType.FullSnapshot,\r\n            data: {\r\n                node,\r\n                initialOffset: getWindowScroll(window),\r\n            },\r\n        });\r\n        mutationBuffers.forEach((buf) => buf.unlock());\r\n        if (document.adoptedStyleSheets && document.adoptedStyleSheets.length > 0)\r\n            stylesheetManager.adoptStyleSheets(document.adoptedStyleSheets, mirror.getId(document));\r\n    };\r\n    _takeFullSnapshot = takeFullSnapshot;\r\n    try {\r\n        const handlers = [];\r\n        const observe = (doc) => {\r\n            return callbackWrapper(initObservers)({\r\n                onMutation,\r\n                mutationCb: wrappedMutationEmit,\r\n                mousemoveCb: (positions, source) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source,\r\n                        positions,\r\n                    },\r\n                }),\r\n                mouseInteractionCb: (d) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.MouseInteraction,\r\n                        ...d,\r\n                    },\r\n                }),\r\n                scrollCb: wrappedScrollEmit,\r\n                viewportResizeCb: (d) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.ViewportResize,\r\n                        ...d,\r\n                    },\r\n                }),\r\n                inputCb: (v) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.Input,\r\n                        ...v,\r\n                    },\r\n                }),\r\n                mediaInteractionCb: (p) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.MediaInteraction,\r\n                        ...p,\r\n                    },\r\n                }),\r\n                styleSheetRuleCb: (r) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.StyleSheetRule,\r\n                        ...r,\r\n                    },\r\n                }),\r\n                styleDeclarationCb: (r) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.StyleDeclaration,\r\n                        ...r,\r\n                    },\r\n                }),\r\n                canvasMutationCb: wrappedCanvasMutationEmit,\r\n                fontCb: (p) => wrappedEmit({\r\n                    type: EventType.IncrementalSnapshot,\r\n                    data: {\r\n                        source: IncrementalSource.Font,\r\n                        ...p,\r\n                    },\r\n                }),\r\n                selectionCb: (p) => {\r\n                    wrappedEmit({\r\n                        type: EventType.IncrementalSnapshot,\r\n                        data: {\r\n                            source: IncrementalSource.Selection,\r\n                            ...p,\r\n                        },\r\n                    });\r\n                },\r\n                customElementCb: (c) => {\r\n                    wrappedEmit({\r\n                        type: EventType.IncrementalSnapshot,\r\n                        data: {\r\n                            source: IncrementalSource.CustomElement,\r\n                            ...c,\r\n                        },\r\n                    });\r\n                },\r\n                blockClass,\r\n                ignoreClass,\r\n                ignoreSelector,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                maskInputOptions,\r\n                inlineStylesheet,\r\n                sampling,\r\n                recordDOM,\r\n                recordCanvas,\r\n                inlineImages,\r\n                userTriggeredOnInput,\r\n                collectFonts,\r\n                doc,\r\n                maskAttributeFn,\r\n                maskInputFn,\r\n                maskTextFn,\r\n                keepIframeSrcFn,\r\n                blockSelector,\r\n                unblockSelector,\r\n                slimDOMOptions,\r\n                dataURLOptions,\r\n                mirror,\r\n                iframeManager,\r\n                stylesheetManager,\r\n                shadowDomManager,\r\n                processedNodeManager,\r\n                canvasManager,\r\n                ignoreCSSAttributes,\r\n                plugins: plugins\r\n                    ?.filter((p) => p.observer)\r\n                    ?.map((p) => ({\r\n                    observer: p.observer,\r\n                    options: p.options,\r\n                    callback: (payload) => wrappedEmit({\r\n                        type: EventType.Plugin,\r\n                        data: {\r\n                            plugin: p.name,\r\n                            payload,\r\n                        },\r\n                    }),\r\n                })) || [],\r\n            }, {});\r\n        };\r\n        iframeManager.addLoadListener((iframeEl) => {\r\n            try {\r\n                handlers.push(observe(iframeEl.contentDocument));\r\n            }\r\n            catch (error) {\r\n                console.warn(error);\r\n            }\r\n        });\r\n        const init = () => {\r\n            takeFullSnapshot();\r\n            handlers.push(observe(document));\r\n        };\r\n        if (document.readyState === 'interactive' ||\r\n            document.readyState === 'complete') {\r\n            init();\r\n        }\r\n        else {\r\n            handlers.push(on('DOMContentLoaded', () => {\r\n                wrappedEmit({\r\n                    type: EventType.DomContentLoaded,\r\n                    data: {},\r\n                });\r\n                if (recordAfter === 'DOMContentLoaded')\r\n                    init();\r\n            }));\r\n            handlers.push(on('load', () => {\r\n                wrappedEmit({\r\n                    type: EventType.Load,\r\n                    data: {},\r\n                });\r\n                if (recordAfter === 'load')\r\n                    init();\r\n            }, window));\r\n        }\r\n        return () => {\r\n            handlers.forEach((h) => h());\r\n            processedNodeManager.destroy();\r\n            _takeFullSnapshot = undefined;\r\n            unregisterErrorHandler();\r\n        };\r\n    }\r\n    catch (error) {\r\n        console.warn(error);\r\n    }\r\n}\r\nfunction addCustomEvent(tag, payload) {\r\n    if (!_wrappedEmit) {\r\n        throw new Error('please add custom event after start recording');\r\n    }\r\n    wrappedEmit({\r\n        type: EventType.Custom,\r\n        data: {\r\n            tag,\r\n            payload,\r\n        },\r\n    });\r\n}\r\nfunction freezePage() {\r\n    mutationBuffers.forEach((buf) => buf.freeze());\r\n}\r\nfunction takeFullSnapshot(isCheckout) {\r\n    if (!_takeFullSnapshot) {\r\n        throw new Error('please take full snapshot after start recording');\r\n    }\r\n    _takeFullSnapshot(isCheckout);\r\n}\r\nrecord.mirror = mirror;\r\nrecord.takeFullSnapshot = takeFullSnapshot;\r\nfunction _getCanvasManager(getCanvasManagerFn, options) {\r\n    try {\r\n        return getCanvasManagerFn\r\n            ? getCanvasManagerFn(options)\r\n            : new CanvasManagerNoop();\r\n    }\r\n    catch {\r\n        console.warn('Unable to initialize CanvasManager');\r\n        return new CanvasManagerNoop();\r\n    }\r\n}\n\nexport { addCustomEvent, record as default, freezePage, takeFullSnapshot };\n","type ClassOption = string | RegExp;\n\n/** Duplicate this from @sentry-internal/rrweb so we can export this as well. */\nexport const ReplayEventTypeDomContentLoaded = 0;\nexport const ReplayEventTypeLoad = 1;\nexport const ReplayEventTypeFullSnapshot = 2;\nexport const ReplayEventTypeIncrementalSnapshot = 3;\nexport const ReplayEventTypeMeta = 4;\nexport const ReplayEventTypeCustom = 5;\nexport const ReplayEventTypePlugin = 6;\n\nexport type ReplayEventType =\n  | typeof ReplayEventTypeDomContentLoaded\n  | typeof ReplayEventTypeLoad\n  | typeof ReplayEventTypeFullSnapshot\n  | typeof ReplayEventTypeIncrementalSnapshot\n  | typeof ReplayEventTypeMeta\n  | typeof ReplayEventTypeCustom\n  | typeof ReplayEventTypePlugin;\n\n/**\n * This is a partial copy of rrweb's eventWithTime type which only contains the properties\n * we specifically need in the SDK.\n */\nexport type ReplayEventWithTime = {\n  type: ReplayEventType;\n  data: unknown;\n  timestamp: number;\n  delay?: number;\n};\n\n/**\n * This is a partial copy of rrweb's recording options which only contains the properties\n * we specifically use in the SDK. Users can specify additional properties, hence we add the\n * Record<string, unknown> union type.\n */\nexport type RrwebRecordOptions = {\n  maskAllText?: boolean;\n  maskAllInputs?: boolean;\n  blockClass?: ClassOption;\n  ignoreClass?: string;\n  maskTextClass?: ClassOption;\n  maskTextSelector?: string;\n  blockSelector?: string;\n  maskInputOptions?: Record<string, boolean>;\n} & Record<string, unknown>;\n\nexport interface CanvasManagerInterface {\n  reset(): void;\n  freeze(): void;\n  unfreeze(): void;\n  lock(): void;\n  unlock(): void;\n  snapshot(): void;\n  addWindow(win: typeof globalThis & Window): void;\n  addShadowRoot(shadowRoot: ShadowRoot): void;\n  resetShadowRoots(): void;\n}\n\nexport interface CanvasManagerOptions {\n  recordCanvas: boolean;\n  enableManualSnapshot?: boolean;\n  blockClass: string | RegExp;\n  blockSelector: string | null;\n  unblockSelector: string | null;\n  sampling?: 'all' | number;\n  dataURLOptions: Partial<{\n    type: string;\n    quality: number;\n  }>;\n  mutationCb: (p: any) => void;\n  win: typeof globalThis & Window;\n  mirror: any;\n}\n","/**\n * Converts a timestamp to ms, if it was in s, or keeps it as ms.\n */\nexport function timestampToMs(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp : timestamp * 1000;\n}\n\n/**\n * Converts a timestamp to s, if it was in ms, or keeps it as s.\n */\nexport function timestampToS(timestamp: number): number {\n  const isMs = timestamp > 9999999999;\n  return isMs ? timestamp / 1000 : timestamp;\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport { normalize } from '@sentry/core';\nimport type { Breadcrumb } from '@sentry/core';\n\nimport type { ReplayContainer } from '../../types';\n\n/**\n * Add a breadcrumb event to replay.\n */\nexport function addBreadcrumbEvent(replay: ReplayContainer, breadcrumb: Breadcrumb): void {\n  if (breadcrumb.category === 'sentry.transaction') {\n    return;\n  }\n\n  if (['ui.click', 'ui.input'].includes(breadcrumb.category as string)) {\n    replay.triggerUserActivity();\n  } else {\n    replay.checkAndHandleExpiredSession();\n  }\n\n  replay.addUpdate(() => {\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.throttledAddEvent({\n      type: EventType.Custom,\n      // TODO: We were converting from ms to seconds for breadcrumbs, spans,\n      // but maybe we should just keep them as milliseconds\n      timestamp: (breadcrumb.timestamp || 0) * 1000,\n      data: {\n        tag: 'breadcrumb',\n        // normalize to max. 10 depth and 1_000 properties per object\n        payload: normalize(breadcrumb, 10, 1_000),\n      },\n    });\n\n    // Do not flush after console log messages\n    return breadcrumb.category === 'console';\n  });\n}\n","import type { INode } from '@sentry-internal/rrweb-snapshot';\n\nconst INTERACTIVE_SELECTOR = 'button,a';\n\n/** Get the closest interactive parent element, or else return the given element. */\nexport function getClosestInteractive(element: Element): Element {\n  const closestInteractive = element.closest(INTERACTIVE_SELECTOR);\n  return closestInteractive || element;\n}\n\n/**\n * For clicks, we check if the target is inside of a button or link\n * If so, we use this as the target instead\n * This is useful because if you click on the image in <button><img></button>,\n * The target will be the image, not the button, which we don't want here\n */\nexport function getClickTargetNode(event: Event | MouseEvent | Node): Node | INode | null {\n  const target = getTargetNode(event);\n\n  if (!target || !(target instanceof Element)) {\n    return target;\n  }\n\n  return getClosestInteractive(target);\n}\n\n/** Get the event target node. */\nexport function getTargetNode(event: Node | { target: EventTarget | null }): Node | INode | null {\n  if (isEventWithTarget(event)) {\n    return event.target as Node | null;\n  }\n\n  return event;\n}\n\nfunction isEventWithTarget(event: unknown): event is { target: EventTarget | null } {\n  return typeof event === 'object' && !!event && 'target' in event;\n}\n","import { fill } from '@sentry/core';\n\nimport { WINDOW } from '../../constants';\n\ntype WindowOpenHandler = () => void;\n\nlet handlers: undefined | WindowOpenHandler[];\n\n/**\n * Register a handler to be called when `window.open()` is called.\n * Returns a cleanup function.\n */\nexport function onWindowOpen(cb: WindowOpenHandler): () => void {\n  // Ensure to only register this once\n  if (!handlers) {\n    handlers = [];\n    monkeyPatchWindowOpen();\n  }\n\n  handlers.push(cb);\n\n  return () => {\n    const pos = handlers ? handlers.indexOf(cb) : -1;\n    if (pos > -1) {\n      (handlers as WindowOpenHandler[]).splice(pos, 1);\n    }\n  };\n}\n\nfunction monkeyPatchWindowOpen(): void {\n  fill(WINDOW, 'open', function (originalWindowOpen: () => void): () => void {\n    return function (...args: unknown[]): void {\n      if (handlers) {\n        try {\n          handlers.forEach(handler => handler());\n        } catch (e) {\n          // ignore errors in here\n        }\n      }\n\n      return originalWindowOpen.apply(WINDOW, args);\n    };\n  });\n}\n","import { setTimeout } from '@sentry-internal/browser-utils';\nimport { IncrementalSource, MouseInteractions, record } from '@sentry-internal/rrweb';\nimport type { Breadcrumb } from '@sentry/core';\n\nimport { WINDOW } from '../constants';\nimport type {\n  RecordingEvent,\n  ReplayClickDetector,\n  ReplayContainer,\n  ReplayMultiClickFrame,\n  ReplaySlowClickFrame,\n  SlowClickConfig,\n} from '../types';\nimport { ReplayEventTypeIncrementalSnapshot } from '../types';\nimport { timestampToS } from '../util/timestamp';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\nimport { getClosestInteractive } from './util/domUtils';\nimport { onWindowOpen } from './util/onWindowOpen';\n\ntype ClickBreadcrumb = Breadcrumb & {\n  timestamp: number;\n};\n\ninterface Click {\n  timestamp: number;\n  mutationAfter?: number;\n  scrollAfter?: number;\n  clickBreadcrumb: ClickBreadcrumb;\n  clickCount: number;\n  node: HTMLElement;\n}\n\ntype IncrementalRecordingEvent = RecordingEvent & {\n  type: typeof ReplayEventTypeIncrementalSnapshot;\n  data: { source: IncrementalSource };\n};\n\ntype IncrementalMouseInteractionRecordingEvent = IncrementalRecordingEvent & {\n  type: typeof ReplayEventTypeIncrementalSnapshot;\n  data: { type: MouseInteractions; id: number };\n};\n\n/** Any IncrementalSource for rrweb that we interpret as a kind of mutation. */\nconst IncrementalMutationSources = new Set([\n  IncrementalSource.Mutation,\n  IncrementalSource.StyleSheetRule,\n  IncrementalSource.StyleDeclaration,\n  IncrementalSource.AdoptedStyleSheet,\n  IncrementalSource.CanvasMutation,\n  IncrementalSource.Selection,\n  IncrementalSource.MediaInteraction,\n]);\n\n/** Handle a click. */\nexport function handleClick(clickDetector: ReplayClickDetector, clickBreadcrumb: Breadcrumb, node: HTMLElement): void {\n  clickDetector.handleClick(clickBreadcrumb, node);\n}\n\n/** A click detector class that can be used to detect slow or rage clicks on elements. */\nexport class ClickDetector implements ReplayClickDetector {\n  // protected for testing\n  protected _lastMutation: number;\n  protected _lastScroll: number;\n\n  private _clicks: Click[];\n  private _teardown: undefined | (() => void);\n\n  private _threshold: number;\n  private _scrollTimeout: number;\n  private _timeout: number;\n  private _ignoreSelector: string;\n\n  private _replay: ReplayContainer;\n  private _checkClickTimeout?: ReturnType<typeof setTimeout>;\n  private _addBreadcrumbEvent: typeof addBreadcrumbEvent;\n\n  public constructor(\n    replay: ReplayContainer,\n    slowClickConfig: SlowClickConfig,\n    // Just for easier testing\n    _addBreadcrumbEvent = addBreadcrumbEvent,\n  ) {\n    this._lastMutation = 0;\n    this._lastScroll = 0;\n    this._clicks = [];\n\n    // We want everything in s, but options are in ms\n    this._timeout = slowClickConfig.timeout / 1000;\n    this._threshold = slowClickConfig.threshold / 1000;\n    this._scrollTimeout = slowClickConfig.scrollTimeout / 1000;\n    this._replay = replay;\n    this._ignoreSelector = slowClickConfig.ignoreSelector;\n    this._addBreadcrumbEvent = _addBreadcrumbEvent;\n  }\n\n  /** Register click detection handlers on mutation or scroll. */\n  public addListeners(): void {\n    const cleanupWindowOpen = onWindowOpen(() => {\n      // Treat window.open as mutation\n      this._lastMutation = nowInSeconds();\n    });\n\n    this._teardown = () => {\n      cleanupWindowOpen();\n\n      this._clicks = [];\n      this._lastMutation = 0;\n      this._lastScroll = 0;\n    };\n  }\n\n  /** Clean up listeners. */\n  public removeListeners(): void {\n    if (this._teardown) {\n      this._teardown();\n    }\n\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n  }\n\n  /** @inheritDoc */\n  public handleClick(breadcrumb: Breadcrumb, node: HTMLElement): void {\n    if (ignoreElement(node, this._ignoreSelector) || !isClickBreadcrumb(breadcrumb)) {\n      return;\n    }\n\n    const newClick: Click = {\n      timestamp: timestampToS(breadcrumb.timestamp),\n      clickBreadcrumb: breadcrumb,\n      // Set this to 0 so we know it originates from the click breadcrumb\n      clickCount: 0,\n      node,\n    };\n\n    // If there was a click in the last 1s on the same element, ignore it - only keep a single reference per second\n    if (\n      this._clicks.some(click => click.node === newClick.node && Math.abs(click.timestamp - newClick.timestamp) < 1)\n    ) {\n      return;\n    }\n\n    this._clicks.push(newClick);\n\n    // If this is the first new click, set a timeout to check for multi clicks\n    if (this._clicks.length === 1) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** @inheritDoc */\n  public registerMutation(timestamp = Date.now()): void {\n    this._lastMutation = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n  public registerScroll(timestamp = Date.now()): void {\n    this._lastScroll = timestampToS(timestamp);\n  }\n\n  /** @inheritDoc */\n  public registerClick(element: HTMLElement): void {\n    const node = getClosestInteractive(element);\n    this._handleMultiClick(node as HTMLElement);\n  }\n\n  /** Count multiple clicks on elements. */\n  private _handleMultiClick(node: HTMLElement): void {\n    this._getClicks(node).forEach(click => {\n      click.clickCount++;\n    });\n  }\n\n  /** Get all pending clicks for a given node. */\n  private _getClicks(node: HTMLElement): Click[] {\n    return this._clicks.filter(click => click.node === node);\n  }\n\n  /** Check the clicks that happened. */\n  private _checkClicks(): void {\n    const timedOutClicks: Click[] = [];\n\n    const now = nowInSeconds();\n\n    this._clicks.forEach(click => {\n      if (!click.mutationAfter && this._lastMutation) {\n        click.mutationAfter = click.timestamp <= this._lastMutation ? this._lastMutation - click.timestamp : undefined;\n      }\n      if (!click.scrollAfter && this._lastScroll) {\n        click.scrollAfter = click.timestamp <= this._lastScroll ? this._lastScroll - click.timestamp : undefined;\n      }\n\n      // All of these are in seconds!\n      if (click.timestamp + this._timeout <= now) {\n        timedOutClicks.push(click);\n      }\n    });\n\n    // Remove \"old\" clicks\n    for (const click of timedOutClicks) {\n      const pos = this._clicks.indexOf(click);\n\n      if (pos > -1) {\n        this._generateBreadcrumbs(click);\n        this._clicks.splice(pos, 1);\n      }\n    }\n\n    // Trigger new check, unless no clicks left\n    if (this._clicks.length) {\n      this._scheduleCheckClicks();\n    }\n  }\n\n  /** Generate matching breadcrumb(s) for the click. */\n  private _generateBreadcrumbs(click: Click): void {\n    const replay = this._replay;\n    const hadScroll = click.scrollAfter && click.scrollAfter <= this._scrollTimeout;\n    const hadMutation = click.mutationAfter && click.mutationAfter <= this._threshold;\n\n    const isSlowClick = !hadScroll && !hadMutation;\n    const { clickCount, clickBreadcrumb } = click;\n\n    // Slow click\n    if (isSlowClick) {\n      // If `mutationAfter` is set, it means a mutation happened after the threshold, but before the timeout\n      // If not, it means we just timed out without scroll & mutation\n      const timeAfterClickMs = Math.min(click.mutationAfter || this._timeout, this._timeout) * 1000;\n      const endReason = timeAfterClickMs < this._timeout * 1000 ? 'mutation' : 'timeout';\n\n      const breadcrumb: ReplaySlowClickFrame = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.slowClickDetected',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          timeAfterClickMs,\n          endReason,\n          // If clickCount === 0, it means multiClick was not correctly captured here\n          // - we still want to send 1 in this case\n          clickCount: clickCount || 1,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n      return;\n    }\n\n    // Multi click\n    if (clickCount > 1) {\n      const breadcrumb: ReplayMultiClickFrame = {\n        type: 'default',\n        message: clickBreadcrumb.message,\n        timestamp: clickBreadcrumb.timestamp,\n        category: 'ui.multiClick',\n        data: {\n          ...clickBreadcrumb.data,\n          url: WINDOW.location.href,\n          route: replay.getCurrentRoute(),\n          clickCount,\n          metric: true,\n        },\n      };\n\n      this._addBreadcrumbEvent(replay, breadcrumb);\n    }\n  }\n\n  /** Schedule to check current clicks. */\n  private _scheduleCheckClicks(): void {\n    if (this._checkClickTimeout) {\n      clearTimeout(this._checkClickTimeout);\n    }\n\n    this._checkClickTimeout = setTimeout(() => this._checkClicks(), 1000);\n  }\n}\n\nconst SLOW_CLICK_TAGS = ['A', 'BUTTON', 'INPUT'];\n\n/** exported for tests only */\nexport function ignoreElement(node: HTMLElement, ignoreSelector: string): boolean {\n  if (!SLOW_CLICK_TAGS.includes(node.tagName)) {\n    return true;\n  }\n\n  // If <input> tag, we only want to consider input[type='submit'] & input[type='button']\n  if (node.tagName === 'INPUT' && !['submit', 'button'].includes(node.getAttribute('type') || '')) {\n    return true;\n  }\n\n  // If <a> tag, detect special variants that may not lead to an action\n  // If target !== _self, we may open the link somewhere else, which would lead to no action\n  // Also, when downloading a file, we may not leave the page, but still not trigger an action\n  if (\n    node.tagName === 'A' &&\n    (node.hasAttribute('download') || (node.hasAttribute('target') && node.getAttribute('target') !== '_self'))\n  ) {\n    return true;\n  }\n\n  if (ignoreSelector && node.matches(ignoreSelector)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction isClickBreadcrumb(breadcrumb: Breadcrumb): breadcrumb is ClickBreadcrumb {\n  return !!(breadcrumb.data && typeof breadcrumb.data.nodeId === 'number' && breadcrumb.timestamp);\n}\n\n// This is good enough for us, and is easier to test/mock than `timestampInSeconds`\nfunction nowInSeconds(): number {\n  return Date.now() / 1000;\n}\n\n/** Update the click detector based on a recording event of rrweb. */\nexport function updateClickDetectorForRecordingEvent(clickDetector: ReplayClickDetector, event: RecordingEvent): void {\n  try {\n    // note: We only consider incremental snapshots here\n    // This means that any full snapshot is ignored for mutation detection - the reason is that we simply cannot know if a mutation happened here.\n    // E.g. think that we are buffering, an error happens and we take a full snapshot because we switched to session mode -\n    // in this scenario, we would not know if a dead click happened because of the error, which is a key dead click scenario.\n    // Instead, by ignoring full snapshots, we have the risk that we generate a false positive\n    // (if a mutation _did_ happen but was \"swallowed\" by the full snapshot)\n    // But this should be more unlikely as we'd generally capture the incremental snapshot right away\n\n    if (!isIncrementalEvent(event)) {\n      return;\n    }\n\n    const { source } = event.data;\n    if (IncrementalMutationSources.has(source)) {\n      clickDetector.registerMutation(event.timestamp);\n    }\n\n    if (source === IncrementalSource.Scroll) {\n      clickDetector.registerScroll(event.timestamp);\n    }\n\n    if (isIncrementalMouseInteraction(event)) {\n      const { type, id } = event.data;\n      const node = record.mirror.getNode(id);\n\n      if (node instanceof HTMLElement && type === MouseInteractions.Click) {\n        clickDetector.registerClick(node);\n      }\n    }\n  } catch {\n    // ignore errors here, e.g. if accessing something that does not exist\n  }\n}\n\nfunction isIncrementalEvent(event: RecordingEvent): event is IncrementalRecordingEvent {\n  return event.type === ReplayEventTypeIncrementalSnapshot;\n}\n\nfunction isIncrementalMouseInteraction(\n  event: IncrementalRecordingEvent,\n): event is IncrementalMouseInteractionRecordingEvent {\n  return event.data.source === IncrementalSource.MouseInteraction;\n}\n","import type { ReplayBreadcrumbFrame } from '../types/replayFrame';\n\n/**\n * Create a breadcrumb for a replay.\n */\nexport function createBreadcrumb(\n  breadcrumb: Omit<ReplayBreadcrumbFrame, 'timestamp' | 'type'> & Partial<Pick<ReplayBreadcrumbFrame, 'timestamp'>>,\n): ReplayBreadcrumbFrame {\n  return {\n    timestamp: Date.now() / 1000,\n    type: 'default',\n    ...breadcrumb,\n  };\n}\n","var NodeType;\r\n(function (NodeType) {\r\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\r\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\r\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\r\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\r\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\r\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\r\n})(NodeType || (NodeType = {}));\n\nfunction isElement(n) {\r\n    return n.nodeType === n.ELEMENT_NODE;\r\n}\r\nfunction isShadowRoot(n) {\r\n    const host = n?.host;\r\n    return Boolean(host?.shadowRoot === n);\r\n}\r\nfunction isNativeShadowDom(shadowRoot) {\r\n    return Object.prototype.toString.call(shadowRoot) === '[object ShadowRoot]';\r\n}\r\nfunction fixBrowserCompatibilityIssuesInCSS(cssText) {\r\n    if (cssText.includes(' background-clip: text;') &&\r\n        !cssText.includes(' -webkit-background-clip: text;')) {\r\n        cssText = cssText.replace(/\\sbackground-clip:\\s*text;/g, ' -webkit-background-clip: text; background-clip: text;');\r\n    }\r\n    return cssText;\r\n}\r\nfunction escapeImportStatement(rule) {\r\n    const { cssText } = rule;\r\n    if (cssText.split('\"').length < 3)\r\n        return cssText;\r\n    const statement = ['@import', `url(${JSON.stringify(rule.href)})`];\r\n    if (rule.layerName === '') {\r\n        statement.push(`layer`);\r\n    }\r\n    else if (rule.layerName) {\r\n        statement.push(`layer(${rule.layerName})`);\r\n    }\r\n    if (rule.supportsText) {\r\n        statement.push(`supports(${rule.supportsText})`);\r\n    }\r\n    if (rule.media.length) {\r\n        statement.push(rule.media.mediaText);\r\n    }\r\n    return statement.join(' ') + ';';\r\n}\r\nfunction stringifyStylesheet(s) {\r\n    try {\r\n        const rules = s.rules || s.cssRules;\r\n        return rules\r\n            ? fixBrowserCompatibilityIssuesInCSS(Array.from(rules, stringifyRule).join(''))\r\n            : null;\r\n    }\r\n    catch (error) {\r\n        return null;\r\n    }\r\n}\r\nfunction fixAllCssProperty(rule) {\r\n    let styles = '';\r\n    for (let i = 0; i < rule.style.length; i++) {\r\n        const styleDeclaration = rule.style;\r\n        const attribute = styleDeclaration[i];\r\n        const isImportant = styleDeclaration.getPropertyPriority(attribute);\r\n        styles += `${attribute}:${styleDeclaration.getPropertyValue(attribute)}${isImportant ? ` !important` : ''};`;\r\n    }\r\n    return `${rule.selectorText} { ${styles} }`;\r\n}\r\nfunction stringifyRule(rule) {\r\n    let importStringified;\r\n    if (isCSSImportRule(rule)) {\r\n        try {\r\n            importStringified =\r\n                stringifyStylesheet(rule.styleSheet) ||\r\n                    escapeImportStatement(rule);\r\n        }\r\n        catch (error) {\r\n        }\r\n    }\r\n    else if (isCSSStyleRule(rule)) {\r\n        let cssText = rule.cssText;\r\n        const needsSafariColonFix = rule.selectorText.includes(':');\r\n        const needsAllFix = typeof rule.style['all'] === 'string' && rule.style['all'];\r\n        if (needsAllFix) {\r\n            cssText = fixAllCssProperty(rule);\r\n        }\r\n        if (needsSafariColonFix) {\r\n            cssText = fixSafariColons(cssText);\r\n        }\r\n        if (needsSafariColonFix || needsAllFix) {\r\n            return cssText;\r\n        }\r\n    }\r\n    return importStringified || rule.cssText;\r\n}\r\nfunction fixSafariColons(cssStringified) {\r\n    const regex = /(\\[(?:[\\w-]+)[^\\\\])(:(?:[\\w-]+)\\])/gm;\r\n    return cssStringified.replace(regex, '$1\\\\$2');\r\n}\r\nfunction isCSSImportRule(rule) {\r\n    return 'styleSheet' in rule;\r\n}\r\nfunction isCSSStyleRule(rule) {\r\n    return 'selectorText' in rule;\r\n}\r\nclass Mirror {\r\n    constructor() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n    getId(n) {\r\n        if (!n)\r\n            return -1;\r\n        const id = this.getMeta(n)?.id;\r\n        return id ?? -1;\r\n    }\r\n    getNode(id) {\r\n        return this.idNodeMap.get(id) || null;\r\n    }\r\n    getIds() {\r\n        return Array.from(this.idNodeMap.keys());\r\n    }\r\n    getMeta(n) {\r\n        return this.nodeMetaMap.get(n) || null;\r\n    }\r\n    removeNodeFromMap(n) {\r\n        const id = this.getId(n);\r\n        this.idNodeMap.delete(id);\r\n        if (n.childNodes) {\r\n            n.childNodes.forEach((childNode) => this.removeNodeFromMap(childNode));\r\n        }\r\n    }\r\n    has(id) {\r\n        return this.idNodeMap.has(id);\r\n    }\r\n    hasNode(node) {\r\n        return this.nodeMetaMap.has(node);\r\n    }\r\n    add(n, meta) {\r\n        const id = meta.id;\r\n        this.idNodeMap.set(id, n);\r\n        this.nodeMetaMap.set(n, meta);\r\n    }\r\n    replace(id, n) {\r\n        const oldNode = this.getNode(id);\r\n        if (oldNode) {\r\n            const meta = this.nodeMetaMap.get(oldNode);\r\n            if (meta)\r\n                this.nodeMetaMap.set(n, meta);\r\n        }\r\n        this.idNodeMap.set(id, n);\r\n    }\r\n    reset() {\r\n        this.idNodeMap = new Map();\r\n        this.nodeMetaMap = new WeakMap();\r\n    }\r\n}\r\nfunction createMirror() {\r\n    return new Mirror();\r\n}\r\nfunction shouldMaskInput({ maskInputOptions, tagName, type, }) {\r\n    if (tagName === 'OPTION') {\r\n        tagName = 'SELECT';\r\n    }\r\n    return Boolean(maskInputOptions[tagName.toLowerCase()] ||\r\n        (type && maskInputOptions[type]) ||\r\n        type === 'password' ||\r\n        (tagName === 'INPUT' && !type && maskInputOptions['text']));\r\n}\r\nfunction maskInputValue({ isMasked, element, value, maskInputFn, }) {\r\n    let text = value || '';\r\n    if (!isMasked) {\r\n        return text;\r\n    }\r\n    if (maskInputFn) {\r\n        text = maskInputFn(text, element);\r\n    }\r\n    return '*'.repeat(text.length);\r\n}\r\nfunction toLowerCase(str) {\r\n    return str.toLowerCase();\r\n}\r\nfunction toUpperCase(str) {\r\n    return str.toUpperCase();\r\n}\r\nconst ORIGINAL_ATTRIBUTE_NAME = '__rrweb_original__';\r\nfunction is2DCanvasBlank(canvas) {\r\n    const ctx = canvas.getContext('2d');\r\n    if (!ctx)\r\n        return true;\r\n    const chunkSize = 50;\r\n    for (let x = 0; x < canvas.width; x += chunkSize) {\r\n        for (let y = 0; y < canvas.height; y += chunkSize) {\r\n            const getImageData = ctx.getImageData;\r\n            const originalGetImageData = ORIGINAL_ATTRIBUTE_NAME in getImageData\r\n                ? getImageData[ORIGINAL_ATTRIBUTE_NAME]\r\n                : getImageData;\r\n            const pixelBuffer = new Uint32Array(originalGetImageData.call(ctx, x, y, Math.min(chunkSize, canvas.width - x), Math.min(chunkSize, canvas.height - y)).data.buffer);\r\n            if (pixelBuffer.some((pixel) => pixel !== 0))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction isNodeMetaEqual(a, b) {\r\n    if (!a || !b || a.type !== b.type)\r\n        return false;\r\n    if (a.type === NodeType.Document)\r\n        return a.compatMode === b.compatMode;\r\n    else if (a.type === NodeType.DocumentType)\r\n        return (a.name === b.name &&\r\n            a.publicId === b.publicId &&\r\n            a.systemId === b.systemId);\r\n    else if (a.type === NodeType.Comment ||\r\n        a.type === NodeType.Text ||\r\n        a.type === NodeType.CDATA)\r\n        return a.textContent === b.textContent;\r\n    else if (a.type === NodeType.Element)\r\n        return (a.tagName === b.tagName &&\r\n            JSON.stringify(a.attributes) ===\r\n                JSON.stringify(b.attributes) &&\r\n            a.isSVG === b.isSVG &&\r\n            a.needBlock === b.needBlock);\r\n    return false;\r\n}\r\nfunction getInputType(element) {\r\n    const type = element.type;\r\n    return element.hasAttribute('data-rr-is-password')\r\n        ? 'password'\r\n        : type\r\n            ?\r\n                toLowerCase(type)\r\n            : null;\r\n}\r\nfunction getInputValue(el, tagName, type) {\r\n    if (tagName === 'INPUT' && (type === 'radio' || type === 'checkbox')) {\r\n        return el.getAttribute('value') || '';\r\n    }\r\n    return el.value;\r\n}\r\nfunction extractFileExtension(path, baseURL) {\r\n    let url;\r\n    try {\r\n        url = new URL(path, baseURL ?? window.location.href);\r\n    }\r\n    catch (err) {\r\n        return null;\r\n    }\r\n    const regex = /\\.([0-9a-z]+)(?:$)/i;\r\n    const match = url.pathname.match(regex);\r\n    return match?.[1] ?? null;\r\n}\r\nconst cachedImplementations = {};\r\nfunction getImplementation(name) {\r\n    const cached = cachedImplementations[name];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    const document = window.document;\r\n    let impl = window[name];\r\n    if (document && typeof document.createElement === 'function') {\r\n        try {\r\n            const sandbox = document.createElement('iframe');\r\n            sandbox.hidden = true;\r\n            document.head.appendChild(sandbox);\r\n            const contentWindow = sandbox.contentWindow;\r\n            if (contentWindow && contentWindow[name]) {\r\n                impl =\r\n                    contentWindow[name];\r\n            }\r\n            document.head.removeChild(sandbox);\r\n        }\r\n        catch (e) {\r\n        }\r\n    }\r\n    return (cachedImplementations[name] = impl.bind(window));\r\n}\r\nfunction onRequestAnimationFrame(...rest) {\r\n    return getImplementation('requestAnimationFrame')(...rest);\r\n}\r\nfunction setTimeout(...rest) {\r\n    return getImplementation('setTimeout')(...rest);\r\n}\r\nfunction clearTimeout(...rest) {\r\n    return getImplementation('clearTimeout')(...rest);\r\n}\r\nfunction getIframeContentDocument(iframe) {\r\n    try {\r\n        return iframe.contentDocument;\r\n    }\r\n    catch (e) {\r\n    }\r\n}\n\nlet _id = 1;\r\nconst tagNameRegex = new RegExp('[^a-z0-9-_:]');\r\nconst IGNORED_NODE = -2;\r\nfunction genId() {\r\n    return _id++;\r\n}\r\nfunction getValidTagName(element) {\r\n    if (element instanceof HTMLFormElement) {\r\n        return 'form';\r\n    }\r\n    const processedTagName = toLowerCase(element.tagName);\r\n    if (tagNameRegex.test(processedTagName)) {\r\n        return 'div';\r\n    }\r\n    return processedTagName;\r\n}\r\nfunction extractOrigin(url) {\r\n    let origin = '';\r\n    if (url.indexOf('//') > -1) {\r\n        origin = url.split('/').slice(0, 3).join('/');\r\n    }\r\n    else {\r\n        origin = url.split('/')[0];\r\n    }\r\n    origin = origin.split('?')[0];\r\n    return origin;\r\n}\r\nlet canvasService;\r\nlet canvasCtx;\r\nconst URL_IN_CSS_REF = /url\\((?:(')([^']*)'|(\")(.*?)\"|([^)]*))\\)/gm;\r\nconst URL_PROTOCOL_MATCH = /^(?:[a-z+]+:)?\\/\\//i;\r\nconst URL_WWW_MATCH = /^www\\..*/i;\r\nconst DATA_URI = /^(data:)([^,]*),(.*)/i;\r\nfunction absoluteToStylesheet(cssText, href) {\r\n    return (cssText || '').replace(URL_IN_CSS_REF, (origin, quote1, path1, quote2, path2, path3) => {\r\n        const filePath = path1 || path2 || path3;\r\n        const maybeQuote = quote1 || quote2 || '';\r\n        if (!filePath) {\r\n            return origin;\r\n        }\r\n        if (URL_PROTOCOL_MATCH.test(filePath) || URL_WWW_MATCH.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (DATA_URI.test(filePath)) {\r\n            return `url(${maybeQuote}${filePath}${maybeQuote})`;\r\n        }\r\n        if (filePath[0] === '/') {\r\n            return `url(${maybeQuote}${extractOrigin(href) + filePath}${maybeQuote})`;\r\n        }\r\n        const stack = href.split('/');\r\n        const parts = filePath.split('/');\r\n        stack.pop();\r\n        for (const part of parts) {\r\n            if (part === '.') {\r\n                continue;\r\n            }\r\n            else if (part === '..') {\r\n                stack.pop();\r\n            }\r\n            else {\r\n                stack.push(part);\r\n            }\r\n        }\r\n        return `url(${maybeQuote}${stack.join('/')}${maybeQuote})`;\r\n    });\r\n}\r\nconst SRCSET_NOT_SPACES = /^[^ \\t\\n\\r\\u000c]+/;\r\nconst SRCSET_COMMAS_OR_SPACES = /^[, \\t\\n\\r\\u000c]+/;\r\nfunction getAbsoluteSrcsetString(doc, attributeValue) {\r\n    if (attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    let pos = 0;\r\n    function collectCharacters(regEx) {\r\n        let chars;\r\n        const match = regEx.exec(attributeValue.substring(pos));\r\n        if (match) {\r\n            chars = match[0];\r\n            pos += chars.length;\r\n            return chars;\r\n        }\r\n        return '';\r\n    }\r\n    const output = [];\r\n    while (true) {\r\n        collectCharacters(SRCSET_COMMAS_OR_SPACES);\r\n        if (pos >= attributeValue.length) {\r\n            break;\r\n        }\r\n        let url = collectCharacters(SRCSET_NOT_SPACES);\r\n        if (url.slice(-1) === ',') {\r\n            url = absoluteToDoc(doc, url.substring(0, url.length - 1));\r\n            output.push(url);\r\n        }\r\n        else {\r\n            let descriptorsStr = '';\r\n            url = absoluteToDoc(doc, url);\r\n            let inParens = false;\r\n            while (true) {\r\n                const c = attributeValue.charAt(pos);\r\n                if (c === '') {\r\n                    output.push((url + descriptorsStr).trim());\r\n                    break;\r\n                }\r\n                else if (!inParens) {\r\n                    if (c === ',') {\r\n                        pos += 1;\r\n                        output.push((url + descriptorsStr).trim());\r\n                        break;\r\n                    }\r\n                    else if (c === '(') {\r\n                        inParens = true;\r\n                    }\r\n                }\r\n                else {\r\n                    if (c === ')') {\r\n                        inParens = false;\r\n                    }\r\n                }\r\n                descriptorsStr += c;\r\n                pos += 1;\r\n            }\r\n        }\r\n    }\r\n    return output.join(', ');\r\n}\r\nconst cachedDocument = new WeakMap();\r\nfunction absoluteToDoc(doc, attributeValue) {\r\n    if (!attributeValue || attributeValue.trim() === '') {\r\n        return attributeValue;\r\n    }\r\n    return getHref(doc, attributeValue);\r\n}\r\nfunction isSVGElement(el) {\r\n    return Boolean(el.tagName === 'svg' || el.ownerSVGElement);\r\n}\r\nfunction getHref(doc, customHref) {\r\n    let a = cachedDocument.get(doc);\r\n    if (!a) {\r\n        a = doc.createElement('a');\r\n        cachedDocument.set(doc, a);\r\n    }\r\n    if (!customHref) {\r\n        customHref = '';\r\n    }\r\n    else if (customHref.startsWith('blob:') || customHref.startsWith('data:')) {\r\n        return customHref;\r\n    }\r\n    a.setAttribute('href', customHref);\r\n    return a.href;\r\n}\r\nfunction transformAttribute(doc, tagName, name, value, element, maskAttributeFn) {\r\n    if (!value) {\r\n        return value;\r\n    }\r\n    if (name === 'src' ||\r\n        (name === 'href' && !(tagName === 'use' && value[0] === '#'))) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'xlink:href' && value[0] !== '#') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'background' &&\r\n        (tagName === 'table' || tagName === 'td' || tagName === 'th')) {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    else if (name === 'srcset') {\r\n        return getAbsoluteSrcsetString(doc, value);\r\n    }\r\n    else if (name === 'style') {\r\n        return absoluteToStylesheet(value, getHref(doc));\r\n    }\r\n    else if (tagName === 'object' && name === 'data') {\r\n        return absoluteToDoc(doc, value);\r\n    }\r\n    if (typeof maskAttributeFn === 'function') {\r\n        return maskAttributeFn(name, value, element);\r\n    }\r\n    return value;\r\n}\r\nfunction ignoreAttribute(tagName, name, _value) {\r\n    return (tagName === 'video' || tagName === 'audio') && name === 'autoplay';\r\n}\r\nfunction _isBlockedElement(element, blockClass, blockSelector, unblockSelector) {\r\n    try {\r\n        if (unblockSelector && element.matches(unblockSelector)) {\r\n            return false;\r\n        }\r\n        if (typeof blockClass === 'string') {\r\n            if (element.classList.contains(blockClass)) {\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            for (let eIndex = element.classList.length; eIndex--;) {\r\n                const className = element.classList[eIndex];\r\n                if (blockClass.test(className)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        if (blockSelector) {\r\n            return element.matches(blockSelector);\r\n        }\r\n    }\r\n    catch (e) {\r\n    }\r\n    return false;\r\n}\r\nfunction elementClassMatchesRegex(el, regex) {\r\n    for (let eIndex = el.classList.length; eIndex--;) {\r\n        const className = el.classList[eIndex];\r\n        if (regex.test(className)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction classMatchesRegex(node, regex, checkAncestors) {\r\n    if (!node)\r\n        return false;\r\n    if (checkAncestors) {\r\n        return (distanceToMatch(node, (node) => elementClassMatchesRegex(node, regex)) >= 0);\r\n    }\r\n    else if (node.nodeType === node.ELEMENT_NODE) {\r\n        return elementClassMatchesRegex(node, regex);\r\n    }\r\n    return false;\r\n}\r\nfunction distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\r\n    if (!node)\r\n        return -1;\r\n    if (node.nodeType !== node.ELEMENT_NODE)\r\n        return -1;\r\n    if (distance > limit)\r\n        return -1;\r\n    if (matchPredicate(node))\r\n        return distance;\r\n    return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\r\n}\r\nfunction createMatchPredicate(className, selector) {\r\n    return (node) => {\r\n        const el = node;\r\n        if (el === null)\r\n            return false;\r\n        try {\r\n            if (className) {\r\n                if (typeof className === 'string') {\r\n                    if (el.matches(`.${className}`))\r\n                        return true;\r\n                }\r\n                else if (elementClassMatchesRegex(el, className)) {\r\n                    return true;\r\n                }\r\n            }\r\n            if (selector && el.matches(selector))\r\n                return true;\r\n            return false;\r\n        }\r\n        catch {\r\n            return false;\r\n        }\r\n    };\r\n}\r\nfunction needMaskingText(node, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText) {\r\n    try {\r\n        const el = node.nodeType === node.ELEMENT_NODE\r\n            ? node\r\n            : node.parentElement;\r\n        if (el === null)\r\n            return false;\r\n        if (el.tagName === 'INPUT') {\r\n            const autocomplete = el.getAttribute('autocomplete');\r\n            const disallowedAutocompleteValues = [\r\n                'current-password',\r\n                'new-password',\r\n                'cc-number',\r\n                'cc-exp',\r\n                'cc-exp-month',\r\n                'cc-exp-year',\r\n                'cc-csc',\r\n            ];\r\n            if (disallowedAutocompleteValues.includes(autocomplete)) {\r\n                return true;\r\n            }\r\n        }\r\n        let maskDistance = -1;\r\n        let unmaskDistance = -1;\r\n        if (maskAllText) {\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector));\r\n            if (unmaskDistance < 0) {\r\n                return true;\r\n            }\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector), unmaskDistance >= 0 ? unmaskDistance : Infinity);\r\n        }\r\n        else {\r\n            maskDistance = distanceToMatch(el, createMatchPredicate(maskTextClass, maskTextSelector));\r\n            if (maskDistance < 0) {\r\n                return false;\r\n            }\r\n            unmaskDistance = distanceToMatch(el, createMatchPredicate(unmaskTextClass, unmaskTextSelector), maskDistance >= 0 ? maskDistance : Infinity);\r\n        }\r\n        return maskDistance >= 0\r\n            ? unmaskDistance >= 0\r\n                ? maskDistance <= unmaskDistance\r\n                : true\r\n            : unmaskDistance >= 0\r\n                ? false\r\n                : !!maskAllText;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return !!maskAllText;\r\n}\r\nfunction onceIframeLoaded(iframeEl, listener, iframeLoadTimeout) {\r\n    const win = iframeEl.contentWindow;\r\n    if (!win) {\r\n        return;\r\n    }\r\n    let fired = false;\r\n    let readyState;\r\n    try {\r\n        readyState = win.document.readyState;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (readyState !== 'complete') {\r\n        const timer = setTimeout(() => {\r\n            if (!fired) {\r\n                listener();\r\n                fired = true;\r\n            }\r\n        }, iframeLoadTimeout);\r\n        iframeEl.addEventListener('load', () => {\r\n            clearTimeout(timer);\r\n            fired = true;\r\n            listener();\r\n        });\r\n        return;\r\n    }\r\n    const blankUrl = 'about:blank';\r\n    if (win.location.href !== blankUrl ||\r\n        iframeEl.src === blankUrl ||\r\n        iframeEl.src === '') {\r\n        setTimeout(listener, 0);\r\n        return iframeEl.addEventListener('load', listener);\r\n    }\r\n    iframeEl.addEventListener('load', listener);\r\n}\r\nfunction onceStylesheetLoaded(link, listener, styleSheetLoadTimeout) {\r\n    let fired = false;\r\n    let styleSheetLoaded;\r\n    try {\r\n        styleSheetLoaded = link.sheet;\r\n    }\r\n    catch (error) {\r\n        return;\r\n    }\r\n    if (styleSheetLoaded)\r\n        return;\r\n    const timer = setTimeout(() => {\r\n        if (!fired) {\r\n            listener();\r\n            fired = true;\r\n        }\r\n    }, styleSheetLoadTimeout);\r\n    link.addEventListener('load', () => {\r\n        clearTimeout(timer);\r\n        fired = true;\r\n        listener();\r\n    });\r\n}\r\nfunction serializeNode(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskAttributeFn, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, inlineStylesheet, maskInputOptions = {}, maskTextFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, } = options;\r\n    const rootId = getRootId(doc, mirror);\r\n    switch (n.nodeType) {\r\n        case n.DOCUMENT_NODE:\r\n            if (n.compatMode !== 'CSS1Compat') {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                    compatMode: n.compatMode,\r\n                };\r\n            }\r\n            else {\r\n                return {\r\n                    type: NodeType.Document,\r\n                    childNodes: [],\r\n                };\r\n            }\r\n        case n.DOCUMENT_TYPE_NODE:\r\n            return {\r\n                type: NodeType.DocumentType,\r\n                name: n.name,\r\n                publicId: n.publicId,\r\n                systemId: n.systemId,\r\n                rootId,\r\n            };\r\n        case n.ELEMENT_NODE:\r\n            return serializeElementNode(n, {\r\n                doc,\r\n                blockClass,\r\n                blockSelector,\r\n                unblockSelector,\r\n                inlineStylesheet,\r\n                maskAttributeFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                dataURLOptions,\r\n                inlineImages,\r\n                recordCanvas,\r\n                keepIframeSrcFn,\r\n                newlyAddedElement,\r\n                rootId,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n            });\r\n        case n.TEXT_NODE:\r\n            return serializeTextNode(n, {\r\n                doc,\r\n                maskAllText,\r\n                maskTextClass,\r\n                unmaskTextClass,\r\n                maskTextSelector,\r\n                unmaskTextSelector,\r\n                maskTextFn,\r\n                maskInputOptions,\r\n                maskInputFn,\r\n                rootId,\r\n            });\r\n        case n.CDATA_SECTION_NODE:\r\n            return {\r\n                type: NodeType.CDATA,\r\n                textContent: '',\r\n                rootId,\r\n            };\r\n        case n.COMMENT_NODE:\r\n            return {\r\n                type: NodeType.Comment,\r\n                textContent: n.textContent || '',\r\n                rootId,\r\n            };\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nfunction getRootId(doc, mirror) {\r\n    if (!mirror.hasNode(doc))\r\n        return undefined;\r\n    const docId = mirror.getId(doc);\r\n    return docId === 1 ? undefined : docId;\r\n}\r\nfunction serializeTextNode(n, options) {\r\n    const { maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, maskTextFn, maskInputOptions, maskInputFn, rootId, } = options;\r\n    const parentTagName = n.parentNode && n.parentNode.tagName;\r\n    let textContent = n.textContent;\r\n    const isStyle = parentTagName === 'STYLE' ? true : undefined;\r\n    const isScript = parentTagName === 'SCRIPT' ? true : undefined;\r\n    const isTextarea = parentTagName === 'TEXTAREA' ? true : undefined;\r\n    if (isStyle && textContent) {\r\n        try {\r\n            if (n.nextSibling || n.previousSibling) {\r\n            }\r\n            else if (n.parentNode.sheet?.cssRules) {\r\n                textContent = stringifyStylesheet(n.parentNode.sheet);\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.warn(`Cannot get CSS styles from text's parentNode. Error: ${err}`, n);\r\n        }\r\n        textContent = absoluteToStylesheet(textContent, getHref(options.doc));\r\n    }\r\n    if (isScript) {\r\n        textContent = 'SCRIPT_PLACEHOLDER';\r\n    }\r\n    const forceMask = needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, maskAllText);\r\n    if (!isStyle && !isScript && !isTextarea && textContent && forceMask) {\r\n        textContent = maskTextFn\r\n            ? maskTextFn(textContent, n.parentElement)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (isTextarea && textContent && (maskInputOptions.textarea || forceMask)) {\r\n        textContent = maskInputFn\r\n            ? maskInputFn(textContent, n.parentNode)\r\n            : textContent.replace(/[\\S]/g, '*');\r\n    }\r\n    if (parentTagName === 'OPTION' && textContent) {\r\n        const isInputMasked = shouldMaskInput({\r\n            type: null,\r\n            tagName: parentTagName,\r\n            maskInputOptions,\r\n        });\r\n        textContent = maskInputValue({\r\n            isMasked: needMaskingText(n, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, isInputMasked),\r\n            element: n,\r\n            value: textContent,\r\n            maskInputFn,\r\n        });\r\n    }\r\n    return {\r\n        type: NodeType.Text,\r\n        textContent: textContent || '',\r\n        isStyle,\r\n        rootId,\r\n    };\r\n}\r\nfunction serializeElementNode(n, options) {\r\n    const { doc, blockClass, blockSelector, unblockSelector, inlineStylesheet, maskInputOptions = {}, maskAttributeFn, maskInputFn, dataURLOptions = {}, inlineImages, recordCanvas, keepIframeSrcFn, newlyAddedElement = false, rootId, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, } = options;\r\n    const needBlock = _isBlockedElement(n, blockClass, blockSelector, unblockSelector);\r\n    const tagName = getValidTagName(n);\r\n    let attributes = {};\r\n    const len = n.attributes.length;\r\n    for (let i = 0; i < len; i++) {\r\n        const attr = n.attributes[i];\r\n        if (attr.name && !ignoreAttribute(tagName, attr.name, attr.value)) {\r\n            attributes[attr.name] = transformAttribute(doc, tagName, toLowerCase(attr.name), attr.value, n, maskAttributeFn);\r\n        }\r\n    }\r\n    if (tagName === 'link' && inlineStylesheet) {\r\n        const stylesheet = Array.from(doc.styleSheets).find((s) => {\r\n            return s.href === n.href;\r\n        });\r\n        let cssText = null;\r\n        if (stylesheet) {\r\n            cssText = stringifyStylesheet(stylesheet);\r\n        }\r\n        if (cssText) {\r\n            attributes.rel = null;\r\n            attributes.href = null;\r\n            attributes.crossorigin = null;\r\n            attributes._cssText = absoluteToStylesheet(cssText, stylesheet.href);\r\n        }\r\n    }\r\n    if (tagName === 'style' &&\r\n        n.sheet &&\r\n        !(n.innerText || n.textContent || '').trim().length) {\r\n        const cssText = stringifyStylesheet(n.sheet);\r\n        if (cssText) {\r\n            attributes._cssText = absoluteToStylesheet(cssText, getHref(doc));\r\n        }\r\n    }\r\n    if (tagName === 'input' ||\r\n        tagName === 'textarea' ||\r\n        tagName === 'select' ||\r\n        tagName === 'option') {\r\n        const el = n;\r\n        const type = getInputType(el);\r\n        const value = getInputValue(el, toUpperCase(tagName), type);\r\n        const checked = el.checked;\r\n        if (type !== 'submit' && type !== 'button' && value) {\r\n            const forceMask = needMaskingText(el, maskTextClass, maskTextSelector, unmaskTextClass, unmaskTextSelector, shouldMaskInput({\r\n                type,\r\n                tagName: toUpperCase(tagName),\r\n                maskInputOptions,\r\n            }));\r\n            attributes.value = maskInputValue({\r\n                isMasked: forceMask,\r\n                element: el,\r\n                value,\r\n                maskInputFn,\r\n            });\r\n        }\r\n        if (checked) {\r\n            attributes.checked = checked;\r\n        }\r\n    }\r\n    if (tagName === 'option') {\r\n        if (n.selected && !maskInputOptions['select']) {\r\n            attributes.selected = true;\r\n        }\r\n        else {\r\n            delete attributes.selected;\r\n        }\r\n    }\r\n    if (tagName === 'canvas' && recordCanvas) {\r\n        if (n.__context === '2d') {\r\n            if (!is2DCanvasBlank(n)) {\r\n                attributes.rr_dataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n        }\r\n        else if (!('__context' in n)) {\r\n            const canvasDataURL = n.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            const blankCanvas = doc.createElement('canvas');\r\n            blankCanvas.width = n.width;\r\n            blankCanvas.height = n.height;\r\n            const blankCanvasDataURL = blankCanvas.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            if (canvasDataURL !== blankCanvasDataURL) {\r\n                attributes.rr_dataURL = canvasDataURL;\r\n            }\r\n        }\r\n    }\r\n    if (tagName === 'img' && inlineImages) {\r\n        if (!canvasService) {\r\n            canvasService = doc.createElement('canvas');\r\n            canvasCtx = canvasService.getContext('2d');\r\n        }\r\n        const image = n;\r\n        const imageSrc = image.currentSrc || image.getAttribute('src') || '<unknown-src>';\r\n        const priorCrossOrigin = image.crossOrigin;\r\n        const recordInlineImage = () => {\r\n            image.removeEventListener('load', recordInlineImage);\r\n            try {\r\n                canvasService.width = image.naturalWidth;\r\n                canvasService.height = image.naturalHeight;\r\n                canvasCtx.drawImage(image, 0, 0);\r\n                attributes.rr_dataURL = canvasService.toDataURL(dataURLOptions.type, dataURLOptions.quality);\r\n            }\r\n            catch (err) {\r\n                if (image.crossOrigin !== 'anonymous') {\r\n                    image.crossOrigin = 'anonymous';\r\n                    if (image.complete && image.naturalWidth !== 0)\r\n                        recordInlineImage();\r\n                    else\r\n                        image.addEventListener('load', recordInlineImage);\r\n                    return;\r\n                }\r\n                else {\r\n                    console.warn(`Cannot inline img src=${imageSrc}! Error: ${err}`);\r\n                }\r\n            }\r\n            if (image.crossOrigin === 'anonymous') {\r\n                priorCrossOrigin\r\n                    ? (attributes.crossOrigin = priorCrossOrigin)\r\n                    : image.removeAttribute('crossorigin');\r\n            }\r\n        };\r\n        if (image.complete && image.naturalWidth !== 0)\r\n            recordInlineImage();\r\n        else\r\n            image.addEventListener('load', recordInlineImage);\r\n    }\r\n    if (tagName === 'audio' || tagName === 'video') {\r\n        attributes.rr_mediaState = n.paused\r\n            ? 'paused'\r\n            : 'played';\r\n        attributes.rr_mediaCurrentTime = n.currentTime;\r\n    }\r\n    if (!newlyAddedElement) {\r\n        if (n.scrollLeft) {\r\n            attributes.rr_scrollLeft = n.scrollLeft;\r\n        }\r\n        if (n.scrollTop) {\r\n            attributes.rr_scrollTop = n.scrollTop;\r\n        }\r\n    }\r\n    if (needBlock) {\r\n        const { width, height } = n.getBoundingClientRect();\r\n        attributes = {\r\n            class: attributes.class,\r\n            rr_width: `${width}px`,\r\n            rr_height: `${height}px`,\r\n        };\r\n    }\r\n    if (tagName === 'iframe' && !keepIframeSrcFn(attributes.src)) {\r\n        if (!needBlock && !getIframeContentDocument(n)) {\r\n            attributes.rr_src = attributes.src;\r\n        }\r\n        delete attributes.src;\r\n    }\r\n    let isCustomElement;\r\n    try {\r\n        if (customElements.get(tagName))\r\n            isCustomElement = true;\r\n    }\r\n    catch (e) {\r\n    }\r\n    return {\r\n        type: NodeType.Element,\r\n        tagName,\r\n        attributes,\r\n        childNodes: [],\r\n        isSVG: isSVGElement(n) || undefined,\r\n        needBlock,\r\n        rootId,\r\n        isCustom: isCustomElement,\r\n    };\r\n}\r\nfunction lowerIfExists(maybeAttr) {\r\n    if (maybeAttr === undefined || maybeAttr === null) {\r\n        return '';\r\n    }\r\n    else {\r\n        return maybeAttr.toLowerCase();\r\n    }\r\n}\r\nfunction slimDOMExcluded(sn, slimDOMOptions) {\r\n    if (slimDOMOptions.comment && sn.type === NodeType.Comment) {\r\n        return true;\r\n    }\r\n    else if (sn.type === NodeType.Element) {\r\n        if (slimDOMOptions.script &&\r\n            (sn.tagName === 'script' ||\r\n                (sn.tagName === 'link' &&\r\n                    (sn.attributes.rel === 'preload' ||\r\n                        sn.attributes.rel === 'modulepreload')) ||\r\n                (sn.tagName === 'link' &&\r\n                    sn.attributes.rel === 'prefetch' &&\r\n                    typeof sn.attributes.href === 'string' &&\r\n                    extractFileExtension(sn.attributes.href) === 'js'))) {\r\n            return true;\r\n        }\r\n        else if (slimDOMOptions.headFavicon &&\r\n            ((sn.tagName === 'link' && sn.attributes.rel === 'shortcut icon') ||\r\n                (sn.tagName === 'meta' &&\r\n                    (lowerIfExists(sn.attributes.name).match(/^msapplication-tile(image|color)$/) ||\r\n                        lowerIfExists(sn.attributes.name) === 'application-name' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'apple-touch-icon' ||\r\n                        lowerIfExists(sn.attributes.rel) === 'shortcut icon')))) {\r\n            return true;\r\n        }\r\n        else if (sn.tagName === 'meta') {\r\n            if (slimDOMOptions.headMetaDescKeywords &&\r\n                lowerIfExists(sn.attributes.name).match(/^description|keywords$/)) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaSocial &&\r\n                (lowerIfExists(sn.attributes.property).match(/^(og|twitter|fb):/) ||\r\n                    lowerIfExists(sn.attributes.name).match(/^(og|twitter):/) ||\r\n                    lowerIfExists(sn.attributes.name) === 'pinterest')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaRobots &&\r\n                (lowerIfExists(sn.attributes.name) === 'robots' ||\r\n                    lowerIfExists(sn.attributes.name) === 'googlebot' ||\r\n                    lowerIfExists(sn.attributes.name) === 'bingbot')) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaHttpEquiv &&\r\n                sn.attributes['http-equiv'] !== undefined) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaAuthorship &&\r\n                (lowerIfExists(sn.attributes.name) === 'author' ||\r\n                    lowerIfExists(sn.attributes.name) === 'generator' ||\r\n                    lowerIfExists(sn.attributes.name) === 'framework' ||\r\n                    lowerIfExists(sn.attributes.name) === 'publisher' ||\r\n                    lowerIfExists(sn.attributes.name) === 'progid' ||\r\n                    lowerIfExists(sn.attributes.property).match(/^article:/) ||\r\n                    lowerIfExists(sn.attributes.property).match(/^product:/))) {\r\n                return true;\r\n            }\r\n            else if (slimDOMOptions.headMetaVerification &&\r\n                (lowerIfExists(sn.attributes.name) === 'google-site-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'yandex-verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'csrf-token' ||\r\n                    lowerIfExists(sn.attributes.name) === 'p:domain_verify' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verify-v1' ||\r\n                    lowerIfExists(sn.attributes.name) === 'verification' ||\r\n                    lowerIfExists(sn.attributes.name) === 'shopify-checkout-api-token')) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction serializeNodeWithId(n, options) {\r\n    const { doc, mirror, blockClass, blockSelector, unblockSelector, maskAllText, maskTextClass, unmaskTextClass, maskTextSelector, unmaskTextSelector, skipChild = false, inlineStylesheet = true, maskInputOptions = {}, maskAttributeFn, maskTextFn, maskInputFn, slimDOMOptions, dataURLOptions = {}, inlineImages = false, recordCanvas = false, onSerialize, onIframeLoad, iframeLoadTimeout = 5000, onStylesheetLoad, stylesheetLoadTimeout = 5000, keepIframeSrcFn = () => false, newlyAddedElement = false, } = options;\r\n    let { preserveWhiteSpace = true } = options;\r\n    const _serializedNode = serializeNode(n, {\r\n        doc,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        maskAllText,\r\n        unblockSelector,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement,\r\n    });\r\n    if (!_serializedNode) {\r\n        console.warn(n, 'not serialized');\r\n        return null;\r\n    }\r\n    let id;\r\n    if (mirror.hasNode(n)) {\r\n        id = mirror.getId(n);\r\n    }\r\n    else if (slimDOMExcluded(_serializedNode, slimDOMOptions) ||\r\n        (!preserveWhiteSpace &&\r\n            _serializedNode.type === NodeType.Text &&\r\n            !_serializedNode.isStyle &&\r\n            !_serializedNode.textContent.replace(/^\\s+|\\s+$/gm, '').length)) {\r\n        id = IGNORED_NODE;\r\n    }\r\n    else {\r\n        id = genId();\r\n    }\r\n    const serializedNode = Object.assign(_serializedNode, { id });\r\n    mirror.add(n, serializedNode);\r\n    if (id === IGNORED_NODE) {\r\n        return null;\r\n    }\r\n    if (onSerialize) {\r\n        onSerialize(n);\r\n    }\r\n    let recordChild = !skipChild;\r\n    if (serializedNode.type === NodeType.Element) {\r\n        recordChild = recordChild && !serializedNode.needBlock;\r\n        delete serializedNode.needBlock;\r\n        const shadowRoot = n.shadowRoot;\r\n        if (shadowRoot && isNativeShadowDom(shadowRoot))\r\n            serializedNode.isShadowHost = true;\r\n    }\r\n    if ((serializedNode.type === NodeType.Document ||\r\n        serializedNode.type === NodeType.Element) &&\r\n        recordChild) {\r\n        if (slimDOMOptions.headWhitespace &&\r\n            serializedNode.type === NodeType.Element &&\r\n            serializedNode.tagName === 'head') {\r\n            preserveWhiteSpace = false;\r\n        }\r\n        const bypassOptions = {\r\n            doc,\r\n            mirror,\r\n            blockClass,\r\n            blockSelector,\r\n            maskAllText,\r\n            unblockSelector,\r\n            maskTextClass,\r\n            unmaskTextClass,\r\n            maskTextSelector,\r\n            unmaskTextSelector,\r\n            skipChild,\r\n            inlineStylesheet,\r\n            maskInputOptions,\r\n            maskAttributeFn,\r\n            maskTextFn,\r\n            maskInputFn,\r\n            slimDOMOptions,\r\n            dataURLOptions,\r\n            inlineImages,\r\n            recordCanvas,\r\n            preserveWhiteSpace,\r\n            onSerialize,\r\n            onIframeLoad,\r\n            iframeLoadTimeout,\r\n            onStylesheetLoad,\r\n            stylesheetLoadTimeout,\r\n            keepIframeSrcFn,\r\n        };\r\n        for (const childN of Array.from(n.childNodes)) {\r\n            const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n            if (serializedChildNode) {\r\n                serializedNode.childNodes.push(serializedChildNode);\r\n            }\r\n        }\r\n        if (isElement(n) && n.shadowRoot) {\r\n            for (const childN of Array.from(n.shadowRoot.childNodes)) {\r\n                const serializedChildNode = serializeNodeWithId(childN, bypassOptions);\r\n                if (serializedChildNode) {\r\n                    isNativeShadowDom(n.shadowRoot) &&\r\n                        (serializedChildNode.isShadow = true);\r\n                    serializedNode.childNodes.push(serializedChildNode);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (n.parentNode &&\r\n        isShadowRoot(n.parentNode) &&\r\n        isNativeShadowDom(n.parentNode)) {\r\n        serializedNode.isShadow = true;\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'iframe') {\r\n        onceIframeLoaded(n, () => {\r\n            const iframeDoc = getIframeContentDocument(n);\r\n            if (iframeDoc && onIframeLoad) {\r\n                const serializedIframeNode = serializeNodeWithId(iframeDoc, {\r\n                    doc: iframeDoc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedIframeNode) {\r\n                    onIframeLoad(n, serializedIframeNode);\r\n                }\r\n            }\r\n        }, iframeLoadTimeout);\r\n    }\r\n    if (serializedNode.type === NodeType.Element &&\r\n        serializedNode.tagName === 'link' &&\r\n        typeof serializedNode.attributes.rel === 'string' &&\r\n        (serializedNode.attributes.rel === 'stylesheet' ||\r\n            (serializedNode.attributes.rel === 'preload' &&\r\n                typeof serializedNode.attributes.href === 'string' &&\r\n                extractFileExtension(serializedNode.attributes.href) === 'css'))) {\r\n        onceStylesheetLoaded(n, () => {\r\n            if (onStylesheetLoad) {\r\n                const serializedLinkNode = serializeNodeWithId(n, {\r\n                    doc,\r\n                    mirror,\r\n                    blockClass,\r\n                    blockSelector,\r\n                    unblockSelector,\r\n                    maskAllText,\r\n                    maskTextClass,\r\n                    unmaskTextClass,\r\n                    maskTextSelector,\r\n                    unmaskTextSelector,\r\n                    skipChild: false,\r\n                    inlineStylesheet,\r\n                    maskInputOptions,\r\n                    maskAttributeFn,\r\n                    maskTextFn,\r\n                    maskInputFn,\r\n                    slimDOMOptions,\r\n                    dataURLOptions,\r\n                    inlineImages,\r\n                    recordCanvas,\r\n                    preserveWhiteSpace,\r\n                    onSerialize,\r\n                    onIframeLoad,\r\n                    iframeLoadTimeout,\r\n                    onStylesheetLoad,\r\n                    stylesheetLoadTimeout,\r\n                    keepIframeSrcFn,\r\n                });\r\n                if (serializedLinkNode) {\r\n                    onStylesheetLoad(n, serializedLinkNode);\r\n                }\r\n            }\r\n        }, stylesheetLoadTimeout);\r\n    }\r\n    return serializedNode;\r\n}\r\nfunction snapshot(n, options) {\r\n    const { mirror = new Mirror(), blockClass = 'rr-block', blockSelector = null, unblockSelector = null, maskAllText = false, maskTextClass = 'rr-mask', unmaskTextClass = null, maskTextSelector = null, unmaskTextSelector = null, inlineStylesheet = true, inlineImages = false, recordCanvas = false, maskAllInputs = false, maskAttributeFn, maskTextFn, maskInputFn, slimDOM = false, dataURLOptions, preserveWhiteSpace, onSerialize, onIframeLoad, iframeLoadTimeout, onStylesheetLoad, stylesheetLoadTimeout, keepIframeSrcFn = () => false, } = options || {};\r\n    const maskInputOptions = maskAllInputs === true\r\n        ? {\r\n            color: true,\r\n            date: true,\r\n            'datetime-local': true,\r\n            email: true,\r\n            month: true,\r\n            number: true,\r\n            range: true,\r\n            search: true,\r\n            tel: true,\r\n            text: true,\r\n            time: true,\r\n            url: true,\r\n            week: true,\r\n            textarea: true,\r\n            select: true,\r\n        }\r\n        : maskAllInputs === false\r\n            ? {}\r\n            : maskAllInputs;\r\n    const slimDOMOptions = slimDOM === true || slimDOM === 'all'\r\n        ?\r\n            {\r\n                script: true,\r\n                comment: true,\r\n                headFavicon: true,\r\n                headWhitespace: true,\r\n                headMetaDescKeywords: slimDOM === 'all',\r\n                headMetaSocial: true,\r\n                headMetaRobots: true,\r\n                headMetaHttpEquiv: true,\r\n                headMetaAuthorship: true,\r\n                headMetaVerification: true,\r\n            }\r\n        : slimDOM === false\r\n            ? {}\r\n            : slimDOM;\r\n    return serializeNodeWithId(n, {\r\n        doc: n,\r\n        mirror,\r\n        blockClass,\r\n        blockSelector,\r\n        unblockSelector,\r\n        maskAllText,\r\n        maskTextClass,\r\n        unmaskTextClass,\r\n        maskTextSelector,\r\n        unmaskTextSelector,\r\n        skipChild: false,\r\n        inlineStylesheet,\r\n        maskInputOptions,\r\n        maskAttributeFn,\r\n        maskTextFn,\r\n        maskInputFn,\r\n        slimDOMOptions,\r\n        dataURLOptions,\r\n        inlineImages,\r\n        recordCanvas,\r\n        preserveWhiteSpace,\r\n        onSerialize,\r\n        onIframeLoad,\r\n        iframeLoadTimeout,\r\n        onStylesheetLoad,\r\n        stylesheetLoadTimeout,\r\n        keepIframeSrcFn,\r\n        newlyAddedElement: false,\r\n    });\r\n}\r\nfunction visitSnapshot(node, onVisit) {\r\n    function walk(current) {\r\n        onVisit(current);\r\n        if (current.type === NodeType.Document ||\r\n            current.type === NodeType.Element) {\r\n            current.childNodes.forEach(walk);\r\n        }\r\n    }\r\n    walk(node);\r\n}\r\nfunction cleanupSnapshot() {\r\n    _id = 1;\r\n}\n\nconst commentre = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\r\nfunction parse(css, options = {}) {\r\n    let lineno = 1;\r\n    let column = 1;\r\n    function updatePosition(str) {\r\n        const lines = str.match(/\\n/g);\r\n        if (lines) {\r\n            lineno += lines.length;\r\n        }\r\n        const i = str.lastIndexOf('\\n');\r\n        column = i === -1 ? column + str.length : str.length - i;\r\n    }\r\n    function position() {\r\n        const start = { line: lineno, column };\r\n        return (node) => {\r\n            node.position = new Position(start);\r\n            whitespace();\r\n            return node;\r\n        };\r\n    }\r\n    class Position {\r\n        constructor(start) {\r\n            this.start = start;\r\n            this.end = { line: lineno, column };\r\n            this.source = options.source;\r\n        }\r\n    }\r\n    Position.prototype.content = css;\r\n    const errorsList = [];\r\n    function error(msg) {\r\n        const err = new Error(`${options.source || ''}:${lineno}:${column}: ${msg}`);\r\n        err.reason = msg;\r\n        err.filename = options.source;\r\n        err.line = lineno;\r\n        err.column = column;\r\n        err.source = css;\r\n        if (options.silent) {\r\n            errorsList.push(err);\r\n        }\r\n        else {\r\n            throw err;\r\n        }\r\n    }\r\n    function stylesheet() {\r\n        const rulesList = rules();\r\n        return {\r\n            type: 'stylesheet',\r\n            stylesheet: {\r\n                source: options.source,\r\n                rules: rulesList,\r\n                parsingErrors: errorsList,\r\n            },\r\n        };\r\n    }\r\n    function open() {\r\n        return match(/^{\\s*/);\r\n    }\r\n    function close() {\r\n        return match(/^}/);\r\n    }\r\n    function rules() {\r\n        let node;\r\n        const rules = [];\r\n        whitespace();\r\n        comments(rules);\r\n        while (css.length && css.charAt(0) !== '}' && (node = atrule() || rule())) {\r\n            if (node) {\r\n                rules.push(node);\r\n                comments(rules);\r\n            }\r\n        }\r\n        return rules;\r\n    }\r\n    function match(re) {\r\n        const m = re.exec(css);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const str = m[0];\r\n        updatePosition(str);\r\n        css = css.slice(str.length);\r\n        return m;\r\n    }\r\n    function whitespace() {\r\n        match(/^\\s*/);\r\n    }\r\n    function comments(rules = []) {\r\n        let c;\r\n        while ((c = comment())) {\r\n            if (c) {\r\n                rules.push(c);\r\n            }\r\n            c = comment();\r\n        }\r\n        return rules;\r\n    }\r\n    function comment() {\r\n        const pos = position();\r\n        if ('/' !== css.charAt(0) || '*' !== css.charAt(1)) {\r\n            return;\r\n        }\r\n        let i = 2;\r\n        while ('' !== css.charAt(i) &&\r\n            ('*' !== css.charAt(i) || '/' !== css.charAt(i + 1))) {\r\n            ++i;\r\n        }\r\n        i += 2;\r\n        if ('' === css.charAt(i - 1)) {\r\n            return error('End of comment missing');\r\n        }\r\n        const str = css.slice(2, i - 2);\r\n        column += 2;\r\n        updatePosition(str);\r\n        css = css.slice(i);\r\n        column += 2;\r\n        return pos({\r\n            type: 'comment',\r\n            comment: str,\r\n        });\r\n    }\r\n    function selector() {\r\n        const m = match(/^([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const splitSelectors = trim(m[0])\r\n            .replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, '')\r\n            .replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, (m) => {\r\n            return m.replace(/,/g, '\\u200C');\r\n        })\r\n            .split(/\\s*(?![^(]*\\)),\\s*/);\r\n        if (splitSelectors.length <= 1) {\r\n            return splitSelectors.map((s) => {\r\n                return s.replace(/\\u200C/g, ',');\r\n            });\r\n        }\r\n        let i = 0;\r\n        let j = 0;\r\n        const len = splitSelectors.length;\r\n        const finalSelectors = [];\r\n        while (i < len) {\r\n            const openingParensCount = (splitSelectors[i].match(/\\(/g) || []).length;\r\n            const closingParensCount = (splitSelectors[i].match(/\\)/g) || []).length;\r\n            let unbalancedParens = openingParensCount - closingParensCount;\r\n            if (unbalancedParens >= 1) {\r\n                let foundClosingSelector = false;\r\n                j = i + 1;\r\n                while (j < len) {\r\n                    const nextOpeningParensCount = (splitSelectors[j].match(/\\(/g) || [])\r\n                        .length;\r\n                    const nextClosingParensCount = (splitSelectors[j].match(/\\)/g) || [])\r\n                        .length;\r\n                    const nextUnbalancedParens = nextClosingParensCount - nextOpeningParensCount;\r\n                    if (nextUnbalancedParens === unbalancedParens) {\r\n                        finalSelectors.push(splitSelectors.slice(i, j + 1).join(','));\r\n                        i = j + 1;\r\n                        foundClosingSelector = true;\r\n                        break;\r\n                    }\r\n                    j++;\r\n                    unbalancedParens -= nextUnbalancedParens;\r\n                }\r\n                if (foundClosingSelector) {\r\n                    continue;\r\n                }\r\n                splitSelectors\r\n                    .slice(i, len)\r\n                    .forEach((selector) => selector && finalSelectors.push(selector));\r\n                break;\r\n            }\r\n            splitSelectors[i] && finalSelectors.push(splitSelectors[i]);\r\n            i++;\r\n        }\r\n        return finalSelectors.map((s) => {\r\n            return s.replace(/\\u200C/g, ',');\r\n        });\r\n    }\r\n    function declaration() {\r\n        const pos = position();\r\n        const propMatch = match(/^(\\*?[-#\\/\\*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\r\n        if (!propMatch) {\r\n            return;\r\n        }\r\n        const prop = trim(propMatch[0]);\r\n        if (!match(/^:\\s*/)) {\r\n            return error(`property missing ':'`);\r\n        }\r\n        const val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\r\n        const ret = pos({\r\n            type: 'declaration',\r\n            property: prop.replace(commentre, ''),\r\n            value: val ? trim(val[0]).replace(commentre, '') : '',\r\n        });\r\n        match(/^[;\\s]*/);\r\n        return ret;\r\n    }\r\n    function declarations() {\r\n        const decls = [];\r\n        if (!open()) {\r\n            return error(`missing '{'`);\r\n        }\r\n        comments(decls);\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            if (decl !== false) {\r\n                decls.push(decl);\r\n                comments(decls);\r\n            }\r\n            decl = declaration();\r\n        }\r\n        if (!close()) {\r\n            return error(`missing '}'`);\r\n        }\r\n        return decls;\r\n    }\r\n    function keyframe() {\r\n        let m;\r\n        const vals = [];\r\n        const pos = position();\r\n        while ((m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/))) {\r\n            vals.push(m[1]);\r\n            match(/^,\\s*/);\r\n        }\r\n        if (!vals.length) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'keyframe',\r\n            values: vals,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    function atkeyframes() {\r\n        const pos = position();\r\n        let m = match(/^@([-\\w]+)?keyframes\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = m[1];\r\n        m = match(/^([-\\w]+)\\s*/);\r\n        if (!m) {\r\n            return error('@keyframes missing name');\r\n        }\r\n        const name = m[1];\r\n        if (!open()) {\r\n            return error(`@keyframes missing '{'`);\r\n        }\r\n        let frame;\r\n        let frames = comments();\r\n        while ((frame = keyframe())) {\r\n            frames.push(frame);\r\n            frames = frames.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@keyframes missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'keyframes',\r\n            name,\r\n            vendor,\r\n            keyframes: frames,\r\n        });\r\n    }\r\n    function atsupports() {\r\n        const pos = position();\r\n        const m = match(/^@supports *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const supports = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@supports missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@supports missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'supports',\r\n            supports,\r\n            rules: style,\r\n        });\r\n    }\r\n    function athost() {\r\n        const pos = position();\r\n        const m = match(/^@host\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@host missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@host missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'host',\r\n            rules: style,\r\n        });\r\n    }\r\n    function atmedia() {\r\n        const pos = position();\r\n        const m = match(/^@media *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const media = trim(m[1]);\r\n        if (!open()) {\r\n            return error(`@media missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@media missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'media',\r\n            media,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atcustommedia() {\r\n        const pos = position();\r\n        const m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        return pos({\r\n            type: 'custom-media',\r\n            name: trim(m[1]),\r\n            media: trim(m[2]),\r\n        });\r\n    }\r\n    function atpage() {\r\n        const pos = position();\r\n        const m = match(/^@page */);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const sel = selector() || [];\r\n        if (!open()) {\r\n            return error(`@page missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@page missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'page',\r\n            selectors: sel,\r\n            declarations: decls,\r\n        });\r\n    }\r\n    function atdocument() {\r\n        const pos = position();\r\n        const m = match(/^@([-\\w]+)?document *([^{]+)/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        const vendor = trim(m[1]);\r\n        const doc = trim(m[2]);\r\n        if (!open()) {\r\n            return error(`@document missing '{'`);\r\n        }\r\n        const style = comments().concat(rules());\r\n        if (!close()) {\r\n            return error(`@document missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'document',\r\n            document: doc,\r\n            vendor,\r\n            rules: style,\r\n        });\r\n    }\r\n    function atfontface() {\r\n        const pos = position();\r\n        const m = match(/^@font-face\\s*/);\r\n        if (!m) {\r\n            return;\r\n        }\r\n        if (!open()) {\r\n            return error(`@font-face missing '{'`);\r\n        }\r\n        let decls = comments();\r\n        let decl;\r\n        while ((decl = declaration())) {\r\n            decls.push(decl);\r\n            decls = decls.concat(comments());\r\n        }\r\n        if (!close()) {\r\n            return error(`@font-face missing '}'`);\r\n        }\r\n        return pos({\r\n            type: 'font-face',\r\n            declarations: decls,\r\n        });\r\n    }\r\n    const atimport = _compileAtrule('import');\r\n    const atcharset = _compileAtrule('charset');\r\n    const atnamespace = _compileAtrule('namespace');\r\n    function _compileAtrule(name) {\r\n        const re = new RegExp('^@' +\r\n            name +\r\n            '\\\\s*((?:' +\r\n            [\r\n                /[^\\\\]\"(?:\\\\\"|[^\"])*\"/.source,\r\n                /[^\\\\]'(?:\\\\'|[^'])*'/.source,\r\n                '[^;]',\r\n            ].join('|') +\r\n            ')+);');\r\n        return () => {\r\n            const pos = position();\r\n            const m = match(re);\r\n            if (!m) {\r\n                return;\r\n            }\r\n            const ret = { type: name };\r\n            ret[name] = m[1].trim();\r\n            return pos(ret);\r\n        };\r\n    }\r\n    function atrule() {\r\n        if (css[0] !== '@') {\r\n            return;\r\n        }\r\n        return (atkeyframes() ||\r\n            atmedia() ||\r\n            atcustommedia() ||\r\n            atsupports() ||\r\n            atimport() ||\r\n            atcharset() ||\r\n            atnamespace() ||\r\n            atdocument() ||\r\n            atpage() ||\r\n            athost() ||\r\n            atfontface());\r\n    }\r\n    function rule() {\r\n        const pos = position();\r\n        const sel = selector();\r\n        if (!sel) {\r\n            return error('selector missing');\r\n        }\r\n        comments();\r\n        return pos({\r\n            type: 'rule',\r\n            selectors: sel,\r\n            declarations: declarations(),\r\n        });\r\n    }\r\n    return addParent(stylesheet());\r\n}\r\nfunction trim(str) {\r\n    return str ? str.replace(/^\\s+|\\s+$/g, '') : '';\r\n}\r\nfunction addParent(obj, parent) {\r\n    const isNode = obj && typeof obj.type === 'string';\r\n    const childParent = isNode ? obj : parent;\r\n    for (const k of Object.keys(obj)) {\r\n        const value = obj[k];\r\n        if (Array.isArray(value)) {\r\n            value.forEach((v) => {\r\n                addParent(v, childParent);\r\n            });\r\n        }\r\n        else if (value && typeof value === 'object') {\r\n            addParent(value, childParent);\r\n        }\r\n    }\r\n    if (isNode) {\r\n        Object.defineProperty(obj, 'parent', {\r\n            configurable: true,\r\n            writable: true,\r\n            enumerable: false,\r\n            value: parent || null,\r\n        });\r\n    }\r\n    return obj;\r\n}\n\nconst tagMap = {\r\n    script: 'noscript',\r\n    altglyph: 'altGlyph',\r\n    altglyphdef: 'altGlyphDef',\r\n    altglyphitem: 'altGlyphItem',\r\n    animatecolor: 'animateColor',\r\n    animatemotion: 'animateMotion',\r\n    animatetransform: 'animateTransform',\r\n    clippath: 'clipPath',\r\n    feblend: 'feBlend',\r\n    fecolormatrix: 'feColorMatrix',\r\n    fecomponenttransfer: 'feComponentTransfer',\r\n    fecomposite: 'feComposite',\r\n    feconvolvematrix: 'feConvolveMatrix',\r\n    fediffuselighting: 'feDiffuseLighting',\r\n    fedisplacementmap: 'feDisplacementMap',\r\n    fedistantlight: 'feDistantLight',\r\n    fedropshadow: 'feDropShadow',\r\n    feflood: 'feFlood',\r\n    fefunca: 'feFuncA',\r\n    fefuncb: 'feFuncB',\r\n    fefuncg: 'feFuncG',\r\n    fefuncr: 'feFuncR',\r\n    fegaussianblur: 'feGaussianBlur',\r\n    feimage: 'feImage',\r\n    femerge: 'feMerge',\r\n    femergenode: 'feMergeNode',\r\n    femorphology: 'feMorphology',\r\n    feoffset: 'feOffset',\r\n    fepointlight: 'fePointLight',\r\n    fespecularlighting: 'feSpecularLighting',\r\n    fespotlight: 'feSpotLight',\r\n    fetile: 'feTile',\r\n    feturbulence: 'feTurbulence',\r\n    foreignobject: 'foreignObject',\r\n    glyphref: 'glyphRef',\r\n    lineargradient: 'linearGradient',\r\n    radialgradient: 'radialGradient',\r\n};\r\nfunction getTagName(n) {\r\n    let tagName = tagMap[n.tagName] ? tagMap[n.tagName] : n.tagName;\r\n    if (tagName === 'link' && n.attributes._cssText) {\r\n        tagName = 'style';\r\n    }\r\n    return tagName;\r\n}\r\nfunction escapeRegExp(str) {\r\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\r\n}\r\nconst HOVER_SELECTOR = /([^\\\\]):hover/;\r\nconst HOVER_SELECTOR_GLOBAL = new RegExp(HOVER_SELECTOR.source, 'g');\r\nfunction addHoverClass(cssText, cache) {\r\n    const cachedStyle = cache?.stylesWithHoverClass.get(cssText);\r\n    if (cachedStyle)\r\n        return cachedStyle;\r\n    if (cssText.length >= 1000000) {\r\n        return cssText;\r\n    }\r\n    const ast = parse(cssText, {\r\n        silent: true,\r\n    });\r\n    if (!ast.stylesheet) {\r\n        return cssText;\r\n    }\r\n    const selectors = [];\r\n    ast.stylesheet.rules.forEach((rule) => {\r\n        if ('selectors' in rule) {\r\n            (rule.selectors || []).forEach((selector) => {\r\n                if (HOVER_SELECTOR.test(selector)) {\r\n                    selectors.push(selector);\r\n                }\r\n            });\r\n        }\r\n    });\r\n    if (selectors.length === 0) {\r\n        return cssText;\r\n    }\r\n    const selectorMatcher = new RegExp(selectors\r\n        .filter((selector, index) => selectors.indexOf(selector) === index)\r\n        .sort((a, b) => b.length - a.length)\r\n        .map((selector) => {\r\n        return escapeRegExp(selector);\r\n    })\r\n        .join('|'), 'g');\r\n    const result = cssText.replace(selectorMatcher, (selector) => {\r\n        const newSelector = selector.replace(HOVER_SELECTOR_GLOBAL, '$1.\\\\:hover');\r\n        return `${selector}, ${newSelector}`;\r\n    });\r\n    cache?.stylesWithHoverClass.set(cssText, result);\r\n    return result;\r\n}\r\nfunction createCache() {\r\n    const stylesWithHoverClass = new Map();\r\n    return {\r\n        stylesWithHoverClass,\r\n    };\r\n}\r\nfunction buildNode(n, options) {\r\n    const { doc, hackCss, cache } = options;\r\n    switch (n.type) {\r\n        case NodeType.Document:\r\n            return doc.implementation.createDocument(null, '', null);\r\n        case NodeType.DocumentType:\r\n            return doc.implementation.createDocumentType(n.name || 'html', n.publicId, n.systemId);\r\n        case NodeType.Element: {\r\n            const tagName = getTagName(n);\r\n            let node;\r\n            if (n.isSVG) {\r\n                node = doc.createElementNS('http://www.w3.org/2000/svg', tagName);\r\n            }\r\n            else {\r\n                if (n.isCustom &&\r\n                    doc.defaultView?.customElements &&\r\n                    !doc.defaultView.customElements.get(n.tagName))\r\n                    doc.defaultView.customElements.define(n.tagName, class extends doc.defaultView.HTMLElement {\r\n                    });\r\n                node = doc.createElement(tagName);\r\n            }\r\n            const specialAttributes = {};\r\n            for (const name in n.attributes) {\r\n                if (!Object.prototype.hasOwnProperty.call(n.attributes, name)) {\r\n                    continue;\r\n                }\r\n                let value = n.attributes[name];\r\n                if (tagName === 'option' &&\r\n                    name === 'selected' &&\r\n                    value === false) {\r\n                    continue;\r\n                }\r\n                if (value === null) {\r\n                    continue;\r\n                }\r\n                if (value === true)\r\n                    value = '';\r\n                if (name.startsWith('rr_')) {\r\n                    specialAttributes[name] = value;\r\n                    continue;\r\n                }\r\n                const isTextarea = tagName === 'textarea' && name === 'value';\r\n                const isRemoteOrDynamicCss = tagName === 'style' && name === '_cssText';\r\n                if (isRemoteOrDynamicCss && hackCss && typeof value === 'string') {\r\n                    value = addHoverClass(value, cache);\r\n                }\r\n                if ((isTextarea || isRemoteOrDynamicCss) && typeof value === 'string') {\r\n                    const child = doc.createTextNode(value);\r\n                    for (const c of Array.from(node.childNodes)) {\r\n                        if (c.nodeType === node.TEXT_NODE) {\r\n                            node.removeChild(c);\r\n                        }\r\n                    }\r\n                    node.appendChild(child);\r\n                    continue;\r\n                }\r\n                try {\r\n                    if (n.isSVG && name === 'xlink:href') {\r\n                        node.setAttributeNS('http://www.w3.org/1999/xlink', name, value.toString());\r\n                    }\r\n                    else if (name === 'onload' ||\r\n                        name === 'onclick' ||\r\n                        name.substring(0, 7) === 'onmouse') {\r\n                        node.setAttribute('_' + name, value.toString());\r\n                    }\r\n                    else if (tagName === 'meta' &&\r\n                        n.attributes['http-equiv'] === 'Content-Security-Policy' &&\r\n                        name === 'content') {\r\n                        node.setAttribute('csp-content', value.toString());\r\n                        continue;\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        (n.attributes.rel === 'preload' ||\r\n                            n.attributes.rel === 'modulepreload')) {\r\n                    }\r\n                    else if (tagName === 'link' &&\r\n                        n.attributes.rel === 'prefetch' &&\r\n                        typeof n.attributes.href === 'string' &&\r\n                        extractFileExtension(n.attributes.href) === 'js') {\r\n                    }\r\n                    else if (tagName === 'img' &&\r\n                        n.attributes.srcset &&\r\n                        n.attributes.rr_dataURL) {\r\n                        node.setAttribute('rrweb-original-srcset', n.attributes.srcset);\r\n                    }\r\n                    else {\r\n                        node.setAttribute(name, value.toString());\r\n                    }\r\n                }\r\n                catch (error) {\r\n                }\r\n            }\r\n            for (const name in specialAttributes) {\r\n                const value = specialAttributes[name];\r\n                if (tagName === 'canvas' && name === 'rr_dataURL') {\r\n                    const image = doc.createElement('img');\r\n                    image.onload = () => {\r\n                        const ctx = node.getContext('2d');\r\n                        if (ctx) {\r\n                            ctx.drawImage(image, 0, 0, image.width, image.height);\r\n                        }\r\n                    };\r\n                    image.src = value.toString();\r\n                    if (node.RRNodeType)\r\n                        node.rr_dataURL = value.toString();\r\n                }\r\n                else if (tagName === 'img' && name === 'rr_dataURL') {\r\n                    const image = node;\r\n                    if (!image.currentSrc.startsWith('data:')) {\r\n                        image.setAttribute('rrweb-original-src', n.attributes.src);\r\n                        image.src = value.toString();\r\n                    }\r\n                }\r\n                if (name === 'rr_width') {\r\n                    node.style.setProperty('width', value.toString());\r\n                }\r\n                else if (name === 'rr_height') {\r\n                    node.style.setProperty('height', value.toString());\r\n                }\r\n                else if (name === 'rr_mediaCurrentTime' &&\r\n                    typeof value === 'number') {\r\n                    node.currentTime = value;\r\n                }\r\n                else if (name === 'rr_mediaState') {\r\n                    switch (value) {\r\n                        case 'played':\r\n                            node\r\n                                .play()\r\n                                .catch((e) => console.warn('media playback error', e));\r\n                            break;\r\n                        case 'paused':\r\n                            node.pause();\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            if (n.isShadowHost) {\r\n                if (!node.shadowRoot) {\r\n                    node.attachShadow({ mode: 'open' });\r\n                }\r\n                else {\r\n                    while (node.shadowRoot.firstChild) {\r\n                        node.shadowRoot.removeChild(node.shadowRoot.firstChild);\r\n                    }\r\n                }\r\n            }\r\n            return node;\r\n        }\r\n        case NodeType.Text:\r\n            return doc.createTextNode(n.isStyle && hackCss\r\n                ? addHoverClass(n.textContent, cache)\r\n                : n.textContent);\r\n        case NodeType.CDATA:\r\n            return doc.createCDATASection(n.textContent);\r\n        case NodeType.Comment:\r\n            return doc.createComment(n.textContent);\r\n        default:\r\n            return null;\r\n    }\r\n}\r\nfunction buildNodeWithSN(n, options) {\r\n    const { doc, mirror, skipChild = false, hackCss = true, afterAppend, cache, } = options;\r\n    if (mirror.has(n.id)) {\r\n        const nodeInMirror = mirror.getNode(n.id);\r\n        const meta = mirror.getMeta(nodeInMirror);\r\n        if (isNodeMetaEqual(meta, n))\r\n            return mirror.getNode(n.id);\r\n    }\r\n    let node = buildNode(n, { doc, hackCss, cache });\r\n    if (!node) {\r\n        return null;\r\n    }\r\n    if (n.rootId && mirror.getNode(n.rootId) !== doc) {\r\n        mirror.replace(n.rootId, doc);\r\n    }\r\n    if (n.type === NodeType.Document) {\r\n        doc.close();\r\n        doc.open();\r\n        if (n.compatMode === 'BackCompat' &&\r\n            n.childNodes &&\r\n            n.childNodes[0].type !== NodeType.DocumentType) {\r\n            if (n.childNodes[0].type === NodeType.Element &&\r\n                'xmlns' in n.childNodes[0].attributes &&\r\n                n.childNodes[0].attributes.xmlns === 'http://www.w3.org/1999/xhtml') {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"\">');\r\n            }\r\n            else {\r\n                doc.write('<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\" \"\">');\r\n            }\r\n        }\r\n        node = doc;\r\n    }\r\n    mirror.add(node, n);\r\n    if ((n.type === NodeType.Document || n.type === NodeType.Element) &&\r\n        !skipChild) {\r\n        for (const childN of n.childNodes) {\r\n            const childNode = buildNodeWithSN(childN, {\r\n                doc,\r\n                mirror,\r\n                skipChild: false,\r\n                hackCss,\r\n                afterAppend,\r\n                cache,\r\n            });\r\n            if (!childNode) {\r\n                console.warn('Failed to rebuild', childN);\r\n                continue;\r\n            }\r\n            if (childN.isShadow && isElement(node) && node.shadowRoot) {\r\n                node.shadowRoot.appendChild(childNode);\r\n            }\r\n            else if (n.type === NodeType.Document &&\r\n                childN.type == NodeType.Element) {\r\n                const htmlElement = childNode;\r\n                let body = null;\r\n                htmlElement.childNodes.forEach((child) => {\r\n                    if (child.nodeName === 'BODY')\r\n                        body = child;\r\n                });\r\n                if (body) {\r\n                    htmlElement.removeChild(body);\r\n                    node.appendChild(childNode);\r\n                    htmlElement.appendChild(body);\r\n                }\r\n                else {\r\n                    node.appendChild(childNode);\r\n                }\r\n            }\r\n            else {\r\n                node.appendChild(childNode);\r\n            }\r\n            if (afterAppend) {\r\n                afterAppend(childNode, childN.id);\r\n            }\r\n        }\r\n    }\r\n    return node;\r\n}\r\nfunction visit(mirror, onVisit) {\r\n    function walk(node) {\r\n        onVisit(node);\r\n    }\r\n    for (const id of mirror.getIds()) {\r\n        if (mirror.has(id)) {\r\n            walk(mirror.getNode(id));\r\n        }\r\n    }\r\n}\r\nfunction handleScroll(node, mirror) {\r\n    const n = mirror.getMeta(node);\r\n    if (n?.type !== NodeType.Element) {\r\n        return;\r\n    }\r\n    const el = node;\r\n    for (const name in n.attributes) {\r\n        if (!(Object.prototype.hasOwnProperty.call(n.attributes, name) &&\r\n            name.startsWith('rr_'))) {\r\n            continue;\r\n        }\r\n        const value = n.attributes[name];\r\n        if (name === 'rr_scrollLeft') {\r\n            el.scrollLeft = value;\r\n        }\r\n        if (name === 'rr_scrollTop') {\r\n            el.scrollTop = value;\r\n        }\r\n    }\r\n}\r\nfunction rebuild(n, options) {\r\n    const { doc, onVisit, hackCss = true, afterAppend, cache, mirror = new Mirror(), } = options;\r\n    const node = buildNodeWithSN(n, {\r\n        doc,\r\n        mirror,\r\n        skipChild: false,\r\n        hackCss,\r\n        afterAppend,\r\n        cache,\r\n    });\r\n    visit(mirror, (visitedNode) => {\r\n        if (onVisit) {\r\n            onVisit(visitedNode);\r\n        }\r\n        handleScroll(visitedNode, mirror);\r\n    });\r\n    return node;\r\n}\n\nexport { IGNORED_NODE, Mirror, NodeType, addHoverClass, buildNodeWithSN, classMatchesRegex, cleanupSnapshot, clearTimeout, createCache, createMatchPredicate, createMirror, distanceToMatch, escapeImportStatement, extractFileExtension, fixAllCssProperty, fixSafariColons, genId, getIframeContentDocument, getInputType, getInputValue, ignoreAttribute, is2DCanvasBlank, isCSSImportRule, isCSSStyleRule, isElement, isNativeShadowDom, isNodeMetaEqual, isShadowRoot, maskInputValue, needMaskingText, onRequestAnimationFrame, rebuild, serializeNodeWithId, setTimeout, shouldMaskInput, snapshot, stringifyRule, stringifyStylesheet, toLowerCase, toUpperCase, transformAttribute, visitSnapshot };\n","// Note that these are the serialized attributes and not attributes directly on\n// the DOM Node. Attributes we are interested in:\nconst ATTRIBUTES_TO_RECORD = new Set([\n  'id',\n  'class',\n  'aria-label',\n  'role',\n  'name',\n  'alt',\n  'title',\n  'data-test-id',\n  'data-testid',\n  'disabled',\n  'aria-disabled',\n  'data-sentry-component',\n]);\n\n/**\n * Inclusion list of attributes that we want to record from the DOM element\n */\nexport function getAttributesToRecord(attributes: Record<string, unknown>): Record<string, unknown> {\n  const obj: Record<string, unknown> = {};\n  if (!attributes['data-sentry-component'] && attributes['data-sentry-element']) {\n    attributes['data-sentry-component'] = attributes['data-sentry-element'];\n  }\n  for (const key in attributes) {\n    if (ATTRIBUTES_TO_RECORD.has(key)) {\n      let normalizedKey = key;\n\n      if (key === 'data-testid' || key === 'data-test-id') {\n        normalizedKey = 'testId';\n      }\n\n      obj[normalizedKey] = attributes[key];\n    }\n  }\n\n  return obj;\n}\n","import { record } from '@sentry-internal/rrweb';\nimport type { serializedElementNodeWithId, serializedNodeWithId } from '@sentry-internal/rrweb-snapshot';\nimport { NodeType } from '@sentry-internal/rrweb-snapshot';\nimport { htmlTreeAsString } from '@sentry/core';\nimport type { Breadcrumb, HandlerDataDom } from '@sentry/core';\n\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { handleClick } from './handleClick';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\nimport { getClickTargetNode, getTargetNode } from './util/domUtils';\nimport { getAttributesToRecord } from './util/getAttributesToRecord';\n\nexport const handleDomListener: (replay: ReplayContainer) => (handlerData: HandlerDataDom) => void = (\n  replay: ReplayContainer,\n) => {\n  return (handlerData: HandlerDataDom): void => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleDom(handlerData);\n\n    if (!result) {\n      return;\n    }\n\n    const isClick = handlerData.name === 'click';\n    const event = isClick ? (handlerData.event as PointerEvent) : undefined;\n    // Ignore clicks if ctrl/alt/meta/shift keys are held down as they alter behavior of clicks (e.g. open in new tab)\n    if (\n      isClick &&\n      replay.clickDetector &&\n      event &&\n      event.target &&\n      !event.altKey &&\n      !event.metaKey &&\n      !event.ctrlKey &&\n      !event.shiftKey\n    ) {\n      handleClick(\n        replay.clickDetector,\n        result as Breadcrumb & { timestamp: number; data: { nodeId: number } },\n        getClickTargetNode(handlerData.event as Event) as HTMLElement,\n      );\n    }\n\n    addBreadcrumbEvent(replay, result);\n  };\n};\n\n/** Get the base DOM breadcrumb. */\nexport function getBaseDomBreadcrumb(target: Node | null, message: string): Breadcrumb {\n  const nodeId = record.mirror.getId(target);\n  const node = nodeId && record.mirror.getNode(nodeId);\n  const meta = node && record.mirror.getMeta(node);\n  const element = meta && isElement(meta) ? meta : null;\n\n  return {\n    message,\n    data: element\n      ? {\n          nodeId,\n          node: {\n            id: nodeId,\n            tagName: element.tagName,\n            textContent: Array.from(element.childNodes)\n              .map((node: serializedNodeWithId) => node.type === NodeType.Text && node.textContent)\n              .filter(Boolean) // filter out empty values\n              .map(text => (text as string).trim())\n              .join(''),\n            attributes: getAttributesToRecord(element.attributes),\n          },\n        }\n      : {},\n  };\n}\n\n/**\n * An event handler to react to DOM events.\n * Exported for tests.\n */\nexport function handleDom(handlerData: HandlerDataDom): Breadcrumb | null {\n  const { target, message } = getDomTarget(handlerData);\n\n  return createBreadcrumb({\n    category: `ui.${handlerData.name}`,\n    ...getBaseDomBreadcrumb(target, message),\n  });\n}\n\nfunction getDomTarget(handlerData: HandlerDataDom): { target: Node | null; message: string } {\n  const isClick = handlerData.name === 'click';\n\n  let message: string | undefined;\n  let target: Node | null = null;\n\n  // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n  try {\n    target = isClick ? getClickTargetNode(handlerData.event as Event) : getTargetNode(handlerData.event as Event);\n    message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  } catch (e) {\n    message = '<unknown>';\n  }\n\n  return { target, message };\n}\n\nfunction isElement(node: serializedNodeWithId): node is serializedElementNodeWithId {\n  return node.type === NodeType.Element;\n}\n","import { htmlTreeAsString } from '@sentry/core';\nimport type { Breadcrumb } from '@sentry/core';\n\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { getBaseDomBreadcrumb } from './handleDom';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\n\n/** Handle keyboard events & create breadcrumbs. */\nexport function handleKeyboardEvent(replay: ReplayContainer, event: KeyboardEvent): void {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  // Update user activity, but do not restart recording as it can create\n  // noisy/low-value replays (e.g. user comes back from idle, hits alt-tab, new\n  // session with a single \"keydown\" breadcrumb is created)\n  replay.updateUserActivity();\n\n  const breadcrumb = getKeyboardBreadcrumb(event);\n\n  if (!breadcrumb) {\n    return;\n  }\n\n  addBreadcrumbEvent(replay, breadcrumb);\n}\n\n/** exported only for tests */\nexport function getKeyboardBreadcrumb(event: KeyboardEvent): Breadcrumb | null {\n  const { metaKey, shiftKey, ctrlKey, altKey, key, target } = event;\n\n  // never capture for input fields\n  if (!target || isInputElement(target as HTMLElement) || !key) {\n    return null;\n  }\n\n  // Note: We do not consider shift here, as that means \"uppercase\"\n  const hasModifierKey = metaKey || ctrlKey || altKey;\n  const isCharacterKey = key.length === 1; // other keys like Escape, Tab, etc have a longer length\n\n  // Do not capture breadcrumb if only a word key is pressed\n  // This could leak e.g. user input\n  if (!hasModifierKey && isCharacterKey) {\n    return null;\n  }\n\n  const message = htmlTreeAsString(target, { maxStringLength: 200 }) || '<unknown>';\n  const baseBreadcrumb = getBaseDomBreadcrumb(target as Node, message);\n\n  return createBreadcrumb({\n    category: 'ui.keyDown',\n    message,\n    data: {\n      ...baseBreadcrumb.data,\n      metaKey,\n      shiftKey,\n      ctrlKey,\n      altKey,\n      key,\n    },\n  });\n}\n\nfunction isInputElement(target: HTMLElement): boolean {\n  return target.tagName === 'INPUT' || target.tagName === 'TEXTAREA' || target.isContentEditable;\n}\n","import { record } from '@sentry-internal/rrweb';\nimport { browserPerformanceTimeOrigin } from '@sentry/core';\n\nimport { WINDOW } from '../constants';\nimport type {\n  AllPerformanceEntry,\n  AllPerformanceEntryData,\n  ExperimentalPerformanceResourceTiming,\n  NavigationData,\n  PaintData,\n  ReplayContainer,\n  ReplayPerformanceEntry,\n  ResourceData,\n  WebVitalData,\n} from '../types';\n\n// Map entryType -> function to normalize data for event\nconst ENTRY_TYPES: Record<\n  string,\n  (entry: AllPerformanceEntry) => null | ReplayPerformanceEntry<AllPerformanceEntryData>\n> = {\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  resource: createResourceEntry,\n  paint: createPaintEntry,\n  // @ts-expect-error TODO: entry type does not fit the create* functions entry type\n  navigation: createNavigationEntry,\n};\n\nexport interface Metric {\n  /**\n   * The current value of the metric.\n   */\n  value: number;\n\n  /**\n   * The rating as to whether the metric value is within the \"good\",\n   * \"needs improvement\", or \"poor\" thresholds of the metric.\n   */\n  rating: 'good' | 'needs-improvement' | 'poor';\n\n  /**\n   * Any performance entries relevant to the metric value calculation.\n   * The array may also be empty if the metric value was not based on any\n   * entries (e.g. a CLS value of 0 given no layout shifts).\n   */\n  entries: PerformanceEntry[] | LayoutShift[];\n}\n\ninterface LayoutShift extends PerformanceEntry {\n  value: number;\n  sources: LayoutShiftAttribution[];\n  hadRecentInput: boolean;\n}\n\ninterface LayoutShiftAttribution {\n  node?: Node;\n  previousRect: DOMRectReadOnly;\n  currentRect: DOMRectReadOnly;\n}\n\n/**\n * Handler creater for web vitals\n */\nexport function webVitalHandler(\n  getter: (metric: Metric) => ReplayPerformanceEntry<AllPerformanceEntryData>,\n  replay: ReplayContainer,\n): (data: { metric: Metric }) => void {\n  return ({ metric }) => void replay.replayPerformanceEntries.push(getter(metric));\n}\n\n/**\n * Create replay performance entries from the browser performance entries.\n */\nexport function createPerformanceEntries(\n  entries: AllPerformanceEntry[],\n): ReplayPerformanceEntry<AllPerformanceEntryData>[] {\n  return entries.map(createPerformanceEntry).filter(Boolean) as ReplayPerformanceEntry<AllPerformanceEntryData>[];\n}\n\nfunction createPerformanceEntry(entry: AllPerformanceEntry): ReplayPerformanceEntry<AllPerformanceEntryData> | null {\n  const entryType = ENTRY_TYPES[entry.entryType];\n  if (!entryType) {\n    return null;\n  }\n\n  return entryType(entry);\n}\n\nfunction getAbsoluteTime(time: number): number {\n  // browserPerformanceTimeOrigin can be undefined if `performance` or\n  // `performance.now` doesn't exist, but this is already checked by this integration\n  return ((browserPerformanceTimeOrigin() || WINDOW.performance.timeOrigin) + time) / 1000;\n}\n\nfunction createPaintEntry(entry: PerformancePaintTiming): ReplayPerformanceEntry<PaintData> {\n  const { duration, entryType, name, startTime } = entry;\n\n  const start = getAbsoluteTime(startTime);\n  return {\n    type: entryType,\n    name,\n    start,\n    end: start + duration,\n    data: undefined,\n  };\n}\n\nfunction createNavigationEntry(entry: PerformanceNavigationTiming): ReplayPerformanceEntry<NavigationData> | null {\n  const {\n    entryType,\n    name,\n    decodedBodySize,\n    duration,\n    domComplete,\n    encodedBodySize,\n    domContentLoadedEventStart,\n    domContentLoadedEventEnd,\n    domInteractive,\n    loadEventStart,\n    loadEventEnd,\n    redirectCount,\n    startTime,\n    transferSize,\n    type,\n  } = entry;\n\n  // Ignore entries with no duration, they do not seem to be useful and cause dupes\n  if (duration === 0) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${type}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(domComplete),\n    name,\n    data: {\n      size: transferSize,\n      decodedBodySize,\n      encodedBodySize,\n      duration,\n      domInteractive,\n      domContentLoadedEventStart,\n      domContentLoadedEventEnd,\n      loadEventStart,\n      loadEventEnd,\n      domComplete,\n      redirectCount,\n    },\n  };\n}\n\nfunction createResourceEntry(\n  entry: ExperimentalPerformanceResourceTiming,\n): ReplayPerformanceEntry<ResourceData> | null {\n  const {\n    entryType,\n    initiatorType,\n    name,\n    responseEnd,\n    startTime,\n    decodedBodySize,\n    encodedBodySize,\n    responseStatus,\n    transferSize,\n  } = entry;\n\n  // Core SDK handles these\n  if (['fetch', 'xmlhttprequest'].includes(initiatorType)) {\n    return null;\n  }\n\n  return {\n    type: `${entryType}.${initiatorType}`,\n    start: getAbsoluteTime(startTime),\n    end: getAbsoluteTime(responseEnd),\n    name,\n    data: {\n      size: transferSize,\n      statusCode: responseStatus,\n      decodedBodySize,\n      encodedBodySize,\n    },\n  };\n}\n\n/**\n * Add a LCP event to the replay based on a LCP metric.\n */\nexport function getLargestContentfulPaint(metric: Metric): ReplayPerformanceEntry<WebVitalData> {\n  const lastEntry = metric.entries[metric.entries.length - 1] as (PerformanceEntry & { element?: Node }) | undefined;\n  const node = lastEntry?.element ? [lastEntry.element] : undefined;\n  return getWebVital(metric, 'largest-contentful-paint', node);\n}\n\nfunction isLayoutShift(entry: PerformanceEntry): entry is LayoutShift {\n  return (entry as LayoutShift).sources !== undefined;\n}\n\n/**\n * Add a CLS event to the replay based on a CLS metric.\n */\nexport function getCumulativeLayoutShift(metric: Metric): ReplayPerformanceEntry<WebVitalData> {\n  const layoutShifts: WebVitalData['attributions'] = [];\n  const nodes: Node[] = [];\n  for (const entry of metric.entries) {\n    if (isLayoutShift(entry)) {\n      const nodeIds = [];\n      for (const source of entry.sources) {\n        if (source.node) {\n          nodes.push(source.node);\n          const nodeId = record.mirror.getId(source.node);\n          if (nodeId) {\n            nodeIds.push(nodeId);\n          }\n        }\n      }\n      layoutShifts.push({ value: entry.value, nodeIds: nodeIds.length ? nodeIds : undefined });\n    }\n  }\n\n  return getWebVital(metric, 'cumulative-layout-shift', nodes, layoutShifts);\n}\n\n/**\n * Add a FID event to the replay based on a FID metric.\n */\nexport function getFirstInputDelay(metric: Metric): ReplayPerformanceEntry<WebVitalData> {\n  const lastEntry = metric.entries[metric.entries.length - 1] as (PerformanceEntry & { target?: Node }) | undefined;\n  const node = lastEntry?.target ? [lastEntry.target] : undefined;\n  return getWebVital(metric, 'first-input-delay', node);\n}\n\n/**\n * Add an INP event to the replay based on an INP metric.\n */\nexport function getInteractionToNextPaint(metric: Metric): ReplayPerformanceEntry<WebVitalData> {\n  const lastEntry = metric.entries[metric.entries.length - 1] as (PerformanceEntry & { target?: Node }) | undefined;\n  const node = lastEntry?.target ? [lastEntry.target] : undefined;\n  return getWebVital(metric, 'interaction-to-next-paint', node);\n}\n\n/**\n * Add an web vital event to the replay based on the web vital metric.\n */\nfunction getWebVital(\n  metric: Metric,\n  name: string,\n  nodes: Node[] | undefined,\n  attributions?: WebVitalData['attributions'],\n): ReplayPerformanceEntry<WebVitalData> {\n  const value = metric.value;\n  const rating = metric.rating;\n\n  const end = getAbsoluteTime(value);\n\n  return {\n    type: 'web-vital',\n    name,\n    start: end,\n    end,\n    data: {\n      value,\n      size: value,\n      rating,\n      nodeIds: nodes ? nodes.map(node => record.mirror.getId(node)) : undefined,\n      attributions,\n    },\n  };\n}\n","import {\n  addClsInstrumentationHandler,\n  addFidInstrumentationHandler,\n  addInpInstrumentationHandler,\n  addLcpInstrumentationHandler,\n  addPerformanceInstrumentationHandler,\n} from '@sentry-internal/browser-utils';\nimport type { ReplayContainer } from '../types';\nimport {\n  getCumulativeLayoutShift,\n  getFirstInputDelay,\n  getInteractionToNextPaint,\n  getLargestContentfulPaint,\n  webVitalHandler,\n} from '../util/createPerformanceEntries';\n\n/**\n * Sets up a PerformanceObserver to listen to all performance entry types.\n * Returns a callback to stop observing.\n */\nexport function setupPerformanceObserver(replay: ReplayContainer): () => void {\n  function addPerformanceEntry(entry: PerformanceEntry): void {\n    // It is possible for entries to come up multiple times\n    if (!replay.performanceEntries.includes(entry)) {\n      replay.performanceEntries.push(entry);\n    }\n  }\n\n  function onEntries({ entries }: { entries: PerformanceEntry[] }): void {\n    entries.forEach(addPerformanceEntry);\n  }\n\n  const clearCallbacks: (() => void)[] = [];\n\n  (['navigation', 'paint', 'resource'] as const).forEach(type => {\n    clearCallbacks.push(addPerformanceInstrumentationHandler(type, onEntries));\n  });\n\n  clearCallbacks.push(\n    addLcpInstrumentationHandler(webVitalHandler(getLargestContentfulPaint, replay)),\n    addClsInstrumentationHandler(webVitalHandler(getCumulativeLayoutShift, replay)),\n    addFidInstrumentationHandler(webVitalHandler(getFirstInputDelay, replay)),\n    addInpInstrumentationHandler(webVitalHandler(getInteractionToNextPaint, replay)),\n  );\n\n  // A callback to cleanup all handlers\n  return () => {\n    clearCallbacks.forEach(clearCallback => clearCallback());\n  };\n}\n","declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n","export default `var t=Uint8Array,n=Uint16Array,r=Int32Array,e=new t([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),i=new t([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),s=new t([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),a=function(t,e){for(var i=new n(31),s=0;s<31;++s)i[s]=e+=1<<t[s-1];var a=new r(i[30]);for(s=1;s<30;++s)for(var o=i[s];o<i[s+1];++o)a[o]=o-i[s]<<5|s;return{b:i,r:a}},o=a(e,2),h=o.b,f=o.r;h[28]=258,f[258]=28;for(var l=a(i,0).r,u=new n(32768),c=0;c<32768;++c){var v=(43690&c)>>1|(21845&c)<<1;v=(61680&(v=(52428&v)>>2|(13107&v)<<2))>>4|(3855&v)<<4,u[c]=((65280&v)>>8|(255&v)<<8)>>1}var d=function(t,r,e){for(var i=t.length,s=0,a=new n(r);s<i;++s)t[s]&&++a[t[s]-1];var o,h=new n(r);for(s=1;s<r;++s)h[s]=h[s-1]+a[s-1]<<1;if(e){o=new n(1<<r);var f=15-r;for(s=0;s<i;++s)if(t[s])for(var l=s<<4|t[s],c=r-t[s],v=h[t[s]-1]++<<c,d=v|(1<<c)-1;v<=d;++v)o[u[v]>>f]=l}else for(o=new n(i),s=0;s<i;++s)t[s]&&(o[s]=u[h[t[s]-1]++]>>15-t[s]);return o},p=new t(288);for(c=0;c<144;++c)p[c]=8;for(c=144;c<256;++c)p[c]=9;for(c=256;c<280;++c)p[c]=7;for(c=280;c<288;++c)p[c]=8;var g=new t(32);for(c=0;c<32;++c)g[c]=5;var w=d(p,9,0),y=d(g,5,0),m=function(t){return(t+7)/8|0},b=function(n,r,e){return(null==e||e>n.length)&&(e=n.length),new t(n.subarray(r,e))},M=[\"unexpected EOF\",\"invalid block type\",\"invalid length/literal\",\"invalid distance\",\"stream finished\",\"no stream handler\",,\"no callback\",\"invalid UTF-8 data\",\"extra field too long\",\"date not in range 1980-2099\",\"filename too long\",\"stream finishing\",\"invalid zip data\"],E=function(t,n,r){var e=new Error(n||M[t]);if(e.code=t,Error.captureStackTrace&&Error.captureStackTrace(e,E),!r)throw e;return e},z=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8},_=function(t,n,r){r<<=7&n;var e=n/8|0;t[e]|=r,t[e+1]|=r>>8,t[e+2]|=r>>16},x=function(r,e){for(var i=[],s=0;s<r.length;++s)r[s]&&i.push({s:s,f:r[s]});var a=i.length,o=i.slice();if(!a)return{t:F,l:0};if(1==a){var h=new t(i[0].s+1);return h[i[0].s]=1,{t:h,l:1}}i.sort((function(t,n){return t.f-n.f})),i.push({s:-1,f:25001});var f=i[0],l=i[1],u=0,c=1,v=2;for(i[0]={s:-1,f:f.f+l.f,l:f,r:l};c!=a-1;)f=i[i[u].f<i[v].f?u++:v++],l=i[u!=c&&i[u].f<i[v].f?u++:v++],i[c++]={s:-1,f:f.f+l.f,l:f,r:l};var d=o[0].s;for(s=1;s<a;++s)o[s].s>d&&(d=o[s].s);var p=new n(d+1),g=A(i[c-1],p,0);if(g>e){s=0;var w=0,y=g-e,m=1<<y;for(o.sort((function(t,n){return p[n.s]-p[t.s]||t.f-n.f}));s<a;++s){var b=o[s].s;if(!(p[b]>e))break;w+=m-(1<<g-p[b]),p[b]=e}for(w>>=y;w>0;){var M=o[s].s;p[M]<e?w-=1<<e-p[M]++-1:++s}for(;s>=0&&w;--s){var E=o[s].s;p[E]==e&&(--p[E],++w)}g=e}return{t:new t(p),l:g}},A=function(t,n,r){return-1==t.s?Math.max(A(t.l,n,r+1),A(t.r,n,r+1)):n[t.s]=r},D=function(t){for(var r=t.length;r&&!t[--r];);for(var e=new n(++r),i=0,s=t[0],a=1,o=function(t){e[i++]=t},h=1;h<=r;++h)if(t[h]==s&&h!=r)++a;else{if(!s&&a>2){for(;a>138;a-=138)o(32754);a>2&&(o(a>10?a-11<<5|28690:a-3<<5|12305),a=0)}else if(a>3){for(o(s),--a;a>6;a-=6)o(8304);a>2&&(o(a-3<<5|8208),a=0)}for(;a--;)o(s);a=1,s=t[h]}return{c:e.subarray(0,i),n:r}},T=function(t,n){for(var r=0,e=0;e<n.length;++e)r+=t[e]*n[e];return r},k=function(t,n,r){var e=r.length,i=m(n+2);t[i]=255&e,t[i+1]=e>>8,t[i+2]=255^t[i],t[i+3]=255^t[i+1];for(var s=0;s<e;++s)t[i+s+4]=r[s];return 8*(i+4+e)},U=function(t,r,a,o,h,f,l,u,c,v,m){z(r,m++,a),++h[256];for(var b=x(h,15),M=b.t,E=b.l,A=x(f,15),U=A.t,C=A.l,F=D(M),I=F.c,S=F.n,L=D(U),O=L.c,j=L.n,q=new n(19),B=0;B<I.length;++B)++q[31&I[B]];for(B=0;B<O.length;++B)++q[31&O[B]];for(var G=x(q,7),H=G.t,J=G.l,K=19;K>4&&!H[s[K-1]];--K);var N,P,Q,R,V=v+5<<3,W=T(h,p)+T(f,g)+l,X=T(h,M)+T(f,U)+l+14+3*K+T(q,H)+2*q[16]+3*q[17]+7*q[18];if(c>=0&&V<=W&&V<=X)return k(r,m,t.subarray(c,c+v));if(z(r,m,1+(X<W)),m+=2,X<W){N=d(M,E,0),P=M,Q=d(U,C,0),R=U;var Y=d(H,J,0);z(r,m,S-257),z(r,m+5,j-1),z(r,m+10,K-4),m+=14;for(B=0;B<K;++B)z(r,m+3*B,H[s[B]]);m+=3*K;for(var Z=[I,O],$=0;$<2;++$){var tt=Z[$];for(B=0;B<tt.length;++B){var nt=31&tt[B];z(r,m,Y[nt]),m+=H[nt],nt>15&&(z(r,m,tt[B]>>5&127),m+=tt[B]>>12)}}}else N=w,P=p,Q=y,R=g;for(B=0;B<u;++B){var rt=o[B];if(rt>255){_(r,m,N[(nt=rt>>18&31)+257]),m+=P[nt+257],nt>7&&(z(r,m,rt>>23&31),m+=e[nt]);var et=31&rt;_(r,m,Q[et]),m+=R[et],et>3&&(_(r,m,rt>>5&8191),m+=i[et])}else _(r,m,N[rt]),m+=P[rt]}return _(r,m,N[256]),m+P[256]},C=new r([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),F=new t(0),I=function(){for(var t=new Int32Array(256),n=0;n<256;++n){for(var r=n,e=9;--e;)r=(1&r&&-306674912)^r>>>1;t[n]=r}return t}(),S=function(){var t=-1;return{p:function(n){for(var r=t,e=0;e<n.length;++e)r=I[255&r^n[e]]^r>>>8;t=r},d:function(){return~t}}},L=function(){var t=1,n=0;return{p:function(r){for(var e=t,i=n,s=0|r.length,a=0;a!=s;){for(var o=Math.min(a+2655,s);a<o;++a)i+=e+=r[a];e=(65535&e)+15*(e>>16),i=(65535&i)+15*(i>>16)}t=e,n=i},d:function(){return(255&(t%=65521))<<24|(65280&t)<<8|(255&(n%=65521))<<8|n>>8}}},O=function(s,a,o,h,u){if(!u&&(u={l:1},a.dictionary)){var c=a.dictionary.subarray(-32768),v=new t(c.length+s.length);v.set(c),v.set(s,c.length),s=v,u.w=c.length}return function(s,a,o,h,u,c){var v=c.z||s.length,d=new t(h+v+5*(1+Math.ceil(v/7e3))+u),p=d.subarray(h,d.length-u),g=c.l,w=7&(c.r||0);if(a){w&&(p[0]=c.r>>3);for(var y=C[a-1],M=y>>13,E=8191&y,z=(1<<o)-1,_=c.p||new n(32768),x=c.h||new n(z+1),A=Math.ceil(o/3),D=2*A,T=function(t){return(s[t]^s[t+1]<<A^s[t+2]<<D)&z},F=new r(25e3),I=new n(288),S=new n(32),L=0,O=0,j=c.i||0,q=0,B=c.w||0,G=0;j+2<v;++j){var H=T(j),J=32767&j,K=x[H];if(_[J]=K,x[H]=J,B<=j){var N=v-j;if((L>7e3||q>24576)&&(N>423||!g)){w=U(s,p,0,F,I,S,O,q,G,j-G,w),q=L=O=0,G=j;for(var P=0;P<286;++P)I[P]=0;for(P=0;P<30;++P)S[P]=0}var Q=2,R=0,V=E,W=J-K&32767;if(N>2&&H==T(j-W))for(var X=Math.min(M,N)-1,Y=Math.min(32767,j),Z=Math.min(258,N);W<=Y&&--V&&J!=K;){if(s[j+Q]==s[j+Q-W]){for(var $=0;$<Z&&s[j+$]==s[j+$-W];++$);if($>Q){if(Q=$,R=W,$>X)break;var tt=Math.min(W,$-2),nt=0;for(P=0;P<tt;++P){var rt=j-W+P&32767,et=rt-_[rt]&32767;et>nt&&(nt=et,K=rt)}}}W+=(J=K)-(K=_[J])&32767}if(R){F[q++]=268435456|f[Q]<<18|l[R];var it=31&f[Q],st=31&l[R];O+=e[it]+i[st],++I[257+it],++S[st],B=j+Q,++L}else F[q++]=s[j],++I[s[j]]}}for(j=Math.max(j,B);j<v;++j)F[q++]=s[j],++I[s[j]];w=U(s,p,g,F,I,S,O,q,G,j-G,w),g||(c.r=7&w|p[w/8|0]<<3,w-=7,c.h=x,c.p=_,c.i=j,c.w=B)}else{for(j=c.w||0;j<v+g;j+=65535){var at=j+65535;at>=v&&(p[w/8|0]=g,at=v),w=k(p,w+1,s.subarray(j,at))}c.i=v}return b(d,0,h+m(w)+u)}(s,null==a.level?6:a.level,null==a.mem?u.l?Math.ceil(1.5*Math.max(8,Math.min(13,Math.log(s.length)))):20:12+a.mem,o,h,u)},j=function(t,n,r){for(;r;++n)t[n]=r,r>>>=8},q=function(t,n){var r=n.filename;if(t[0]=31,t[1]=139,t[2]=8,t[8]=n.level<2?4:9==n.level?2:0,t[9]=3,0!=n.mtime&&j(t,4,Math.floor(new Date(n.mtime||Date.now())/1e3)),r){t[3]=8;for(var e=0;e<=r.length;++e)t[e+10]=r.charCodeAt(e)}},B=function(t){return 10+(t.filename?t.filename.length+1:0)},G=function(){function n(n,r){if(\"function\"==typeof n&&(r=n,n={}),this.ondata=r,this.o=n||{},this.s={l:0,i:32768,w:32768,z:32768},this.b=new t(98304),this.o.dictionary){var e=this.o.dictionary.subarray(-32768);this.b.set(e,32768-e.length),this.s.i=32768-e.length}}return n.prototype.p=function(t,n){this.ondata(O(t,this.o,0,0,this.s),n)},n.prototype.push=function(n,r){this.ondata||E(5),this.s.l&&E(4);var e=n.length+this.s.z;if(e>this.b.length){if(e>2*this.b.length-32768){var i=new t(-32768&e);i.set(this.b.subarray(0,this.s.z)),this.b=i}var s=this.b.length-this.s.z;this.b.set(n.subarray(0,s),this.s.z),this.s.z=this.b.length,this.p(this.b,!1),this.b.set(this.b.subarray(-32768)),this.b.set(n.subarray(s),32768),this.s.z=n.length-s+32768,this.s.i=32766,this.s.w=32768}else this.b.set(n,this.s.z),this.s.z+=n.length;this.s.l=1&r,(this.s.z>this.s.w+8191||r)&&(this.p(this.b,r||!1),this.s.w=this.s.i,this.s.i-=2)},n.prototype.flush=function(){this.ondata||E(5),this.s.l&&E(4),this.p(this.b,!1),this.s.w=this.s.i,this.s.i-=2},n}();var H=function(){function t(t,n){this.c=L(),this.v=1,G.call(this,t,n)}return t.prototype.push=function(t,n){this.c.p(t),G.prototype.push.call(this,t,n)},t.prototype.p=function(t,n){var r=O(t,this.o,this.v&&(this.o.dictionary?6:2),n&&4,this.s);this.v&&(function(t,n){var r=n.level,e=0==r?0:r<6?1:9==r?3:2;if(t[0]=120,t[1]=e<<6|(n.dictionary&&32),t[1]|=31-(t[0]<<8|t[1])%31,n.dictionary){var i=L();i.p(n.dictionary),j(t,2,i.d())}}(r,this.o),this.v=0),n&&j(r,r.length-4,this.c.d()),this.ondata(r,n)},t.prototype.flush=function(){G.prototype.flush.call(this)},t}(),J=\"undefined\"!=typeof TextEncoder&&new TextEncoder,K=\"undefined\"!=typeof TextDecoder&&new TextDecoder;try{K.decode(F,{stream:!0})}catch(t){}var N=function(){function t(t){this.ondata=t}return t.prototype.push=function(t,n){this.ondata||E(5),this.d&&E(4),this.ondata(P(t),this.d=n||!1)},t}();function P(n,r){if(J)return J.encode(n);for(var e=n.length,i=new t(n.length+(n.length>>1)),s=0,a=function(t){i[s++]=t},o=0;o<e;++o){if(s+5>i.length){var h=new t(s+8+(e-o<<1));h.set(i),i=h}var f=n.charCodeAt(o);f<128||r?a(f):f<2048?(a(192|f>>6),a(128|63&f)):f>55295&&f<57344?(a(240|(f=65536+(1047552&f)|1023&n.charCodeAt(++o))>>18),a(128|f>>12&63),a(128|f>>6&63),a(128|63&f)):(a(224|f>>12),a(128|f>>6&63),a(128|63&f))}return b(i,0,s)}function Q(t){return function(t,n){n||(n={});var r=S(),e=t.length;r.p(t);var i=O(t,n,B(n),8),s=i.length;return q(i,n),j(i,s-8,r.d()),j(i,s-4,e),i}(P(t))}const R=new class{constructor(){this._init()}clear(){this._init()}addEvent(t){if(!t)throw new Error(\"Adding invalid event\");const n=this._hasEvents?\",\":\"\";this.stream.push(n+t),this._hasEvents=!0}finish(){this.stream.push(\"]\",!0);const t=function(t){let n=0;for(const r of t)n+=r.length;const r=new Uint8Array(n);for(let n=0,e=0,i=t.length;n<i;n++){const i=t[n];r.set(i,e),e+=i.length}return r}(this._deflatedData);return this._init(),t}_init(){this._hasEvents=!1,this._deflatedData=[],this.deflate=new H,this.deflate.ondata=(t,n)=>{this._deflatedData.push(t)},this.stream=new N(((t,n)=>{this.deflate.push(t,n)})),this.stream.push(\"[\")}},V={clear:()=>{R.clear()},addEvent:t=>R.addEvent(t),finish:()=>R.finish(),compress:t=>Q(t)};addEventListener(\"message\",(function(t){const n=t.data.method,r=t.data.id,e=t.data.arg;if(n in V&&\"function\"==typeof V[n])try{const t=V[n](e);postMessage({id:r,method:n,success:!0,response:t})}catch(t){postMessage({id:r,method:n,success:!1,response:t.message}),console.error(t)}})),postMessage({id:void 0,method:\"init\",success:!0,response:void 0});`;\n","import r from\"./worker\";function e(){const e=new Blob([r]);return URL.createObjectURL(e)}export{e as getWorkerURL};\n","import type { ConsoleLevel, Logger, SeverityLevel } from '@sentry/core';\nimport { addBreadcrumb, captureException, logger as coreLogger, severityLevelFromString } from '@sentry/core';\nimport { DEBUG_BUILD } from '../debug-build';\n\ntype ReplayConsoleLevels = Extract<ConsoleLevel, 'info' | 'warn' | 'error' | 'log'>;\nconst CONSOLE_LEVELS: readonly ReplayConsoleLevels[] = ['info', 'warn', 'error', 'log'] as const;\nconst PREFIX = '[Replay] ';\n\ntype LoggerMethod = (...args: unknown[]) => void;\n\ninterface LoggerConfig {\n  captureExceptions: boolean;\n  traceInternals: boolean;\n}\n\ninterface ReplayLogger extends Logger {\n  /**\n   * Calls `logger.info` but saves breadcrumb in the next tick due to race\n   * conditions before replay is initialized.\n   */\n  infoTick: LoggerMethod;\n  /**\n   * Captures exceptions (`Error`) if \"capture internal exceptions\" is enabled\n   */\n  exception: LoggerMethod;\n  /**\n   * Configures the logger with additional debugging behavior\n   */\n  setConfig(config: Partial<LoggerConfig>): void;\n}\n\nfunction _addBreadcrumb(message: unknown, level: SeverityLevel = 'info'): void {\n  addBreadcrumb(\n    {\n      category: 'console',\n      data: {\n        logger: 'replay',\n      },\n      level,\n      message: `${PREFIX}${message}`,\n    },\n    { level },\n  );\n}\n\nfunction makeReplayLogger(): ReplayLogger {\n  let _capture = false;\n  let _trace = false;\n\n  const _logger: Partial<ReplayLogger> = {\n    exception: () => undefined,\n    infoTick: () => undefined,\n    setConfig: (opts: Partial<LoggerConfig>) => {\n      _capture = !!opts.captureExceptions;\n      _trace = !!opts.traceInternals;\n    },\n  };\n\n  if (DEBUG_BUILD) {\n    CONSOLE_LEVELS.forEach(name => {\n      _logger[name] = (...args: unknown[]) => {\n        coreLogger[name](PREFIX, ...args);\n        if (_trace) {\n          _addBreadcrumb(args.join(''), severityLevelFromString(name));\n        }\n      };\n    });\n\n    _logger.exception = (error: unknown, ...message: unknown[]) => {\n      if (message.length && _logger.error) {\n        _logger.error(...message);\n      }\n\n      coreLogger.error(PREFIX, error);\n\n      if (_capture) {\n        captureException(error);\n      } else if (_trace) {\n        // No need for a breadcrumb if `_capture` is enabled since it should be\n        // captured as an exception\n        _addBreadcrumb(error, 'error');\n      }\n    };\n\n    _logger.infoTick = (...args: unknown[]) => {\n      coreLogger.info(PREFIX, ...args);\n      if (_trace) {\n        // Wait a tick here to avoid race conditions for some initial logs\n        // which may be added before replay is initialized\n        setTimeout(() => _addBreadcrumb(args[0]), 0);\n      }\n    };\n  } else {\n    CONSOLE_LEVELS.forEach(name => {\n      _logger[name] = () => undefined;\n    });\n  }\n\n  return _logger as ReplayLogger;\n}\n\nexport const logger = makeReplayLogger();\n","import { REPLAY_MAX_EVENT_BUFFER_SIZE } from '../constants';\n\n/** This error indicates that the event buffer size exceeded the limit.. */\nexport class EventBufferSizeExceededError extends Error {\n  public constructor() {\n    super(`Event buffer exceeded maximum size of ${REPLAY_MAX_EVENT_BUFFER_SIZE}.`);\n  }\n}\n","import { REPLAY_MAX_EVENT_BUFFER_SIZE } from '../constants';\nimport type { AddEventResult, EventBuffer, EventBufferType, RecordingEvent } from '../types';\nimport { timestampToMs } from '../util/timestamp';\nimport { EventBufferSizeExceededError } from './error';\n\n/**\n * A basic event buffer that does not do any compression.\n * Used as fallback if the compression worker cannot be loaded or is disabled.\n */\nexport class EventBufferArray implements EventBuffer {\n  /** All the events that are buffered to be sent. */\n  public events: RecordingEvent[];\n\n  /** @inheritdoc */\n  public hasCheckout: boolean;\n\n  /** @inheritdoc */\n  public waitForCheckout: boolean;\n\n  private _totalSize: number;\n\n  public constructor() {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n    this.waitForCheckout = false;\n  }\n\n  /** @inheritdoc */\n  public get hasEvents(): boolean {\n    return this.events.length > 0;\n  }\n\n  /** @inheritdoc */\n  public get type(): EventBufferType {\n    return 'sync';\n  }\n\n  /** @inheritdoc */\n  public destroy(): void {\n    this.events = [];\n  }\n\n  /** @inheritdoc */\n  public async addEvent(event: RecordingEvent): Promise<AddEventResult> {\n    const eventSize = JSON.stringify(event).length;\n    this._totalSize += eventSize;\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      throw new EventBufferSizeExceededError();\n    }\n\n    this.events.push(event);\n  }\n\n  /** @inheritdoc */\n  public finish(): Promise<string> {\n    return new Promise<string>(resolve => {\n      // Make a copy of the events array reference and immediately clear the\n      // events member so that we do not lose new events while uploading\n      // attachment.\n      const eventsRet = this.events;\n      this.clear();\n      resolve(JSON.stringify(eventsRet));\n    });\n  }\n\n  /** @inheritdoc */\n  public clear(): void {\n    this.events = [];\n    this._totalSize = 0;\n    this.hasCheckout = false;\n  }\n\n  /** @inheritdoc */\n  public getEarliestTimestamp(): number | null {\n    const timestamp = this.events.map(event => event.timestamp).sort()[0];\n\n    if (!timestamp) {\n      return null;\n    }\n\n    return timestampToMs(timestamp);\n  }\n}\n","import { DEBUG_BUILD } from '../debug-build';\nimport type { WorkerRequest, WorkerResponse } from '../types';\nimport { logger } from '../util/logger';\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nexport class WorkerHandler {\n  private _worker: Worker;\n  private _id: number;\n  private _ensureReadyPromise?: Promise<void>;\n\n  public constructor(worker: Worker) {\n    this._worker = worker;\n    this._id = 0;\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occurred.\n   */\n  public ensureReady(): Promise<void> {\n    // Ensure we only check once\n    if (this._ensureReadyPromise) {\n      return this._ensureReadyPromise;\n    }\n\n    this._ensureReadyPromise = new Promise((resolve, reject) => {\n      this._worker.addEventListener(\n        'message',\n        ({ data }: MessageEvent) => {\n          if ((data as WorkerResponse).success) {\n            resolve();\n          } else {\n            reject();\n          }\n        },\n        { once: true },\n      );\n\n      this._worker.addEventListener(\n        'error',\n        error => {\n          reject(error);\n        },\n        { once: true },\n      );\n    });\n\n    return this._ensureReadyPromise;\n  }\n\n  /**\n   * Destroy the worker.\n   */\n  public destroy(): void {\n    DEBUG_BUILD && logger.info('Destroying compression worker');\n    this._worker.terminate();\n  }\n\n  /**\n   * Post message to worker and wait for response before resolving promise.\n   */\n  public postMessage<T>(method: WorkerRequest['method'], arg?: WorkerRequest['arg']): Promise<T> {\n    const id = this._getAndIncrementId();\n\n    return new Promise((resolve, reject) => {\n      const listener = ({ data }: MessageEvent): void => {\n        const response = data as WorkerResponse;\n        if (response.method !== method) {\n          return;\n        }\n\n        // There can be multiple listeners for a single method, the id ensures\n        // that the response matches the caller.\n        if (response.id !== id) {\n          return;\n        }\n\n        // At this point, we'll always want to remove listener regardless of result status\n        this._worker.removeEventListener('message', listener);\n\n        if (!response.success) {\n          // TODO: Do some error handling, not sure what\n          DEBUG_BUILD && logger.error('Error in compression worker: ', response.response);\n\n          reject(new Error('Error in compression worker'));\n          return;\n        }\n\n        resolve(response.response as T);\n      };\n\n      // Note: we can't use `once` option because it's possible it needs to\n      // listen to multiple messages\n      this._worker.addEventListener('message', listener);\n      this._worker.postMessage({ id, method, arg });\n    });\n  }\n\n  /** Get the current ID and increment it for the next call. */\n  private _getAndIncrementId(): number {\n    return this._id++;\n  }\n}\n","import type { ReplayRecordingData } from '@sentry/core';\n\nimport { REPLAY_MAX_EVENT_BUFFER_SIZE } from '../constants';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { AddEventResult, EventBuffer, EventBufferType, RecordingEvent } from '../types';\nimport { logger } from '../util/logger';\nimport { timestampToMs } from '../util/timestamp';\nimport { WorkerHandler } from './WorkerHandler';\nimport { EventBufferSizeExceededError } from './error';\n\n/**\n * Event buffer that uses a web worker to compress events.\n * Exported only for testing.\n */\nexport class EventBufferCompressionWorker implements EventBuffer {\n  /** @inheritdoc */\n  public hasCheckout: boolean;\n\n  /** @inheritdoc */\n  public waitForCheckout: boolean;\n\n  private _worker: WorkerHandler;\n  private _earliestTimestamp: number | null;\n  private _totalSize;\n\n  public constructor(worker: Worker) {\n    this._worker = new WorkerHandler(worker);\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n    this.waitForCheckout = false;\n  }\n\n  /** @inheritdoc */\n  public get hasEvents(): boolean {\n    return !!this._earliestTimestamp;\n  }\n\n  /** @inheritdoc */\n  public get type(): EventBufferType {\n    return 'worker';\n  }\n\n  /**\n   * Ensure the worker is ready (or not).\n   * This will either resolve when the worker is ready, or reject if an error occurred.\n   */\n  public ensureReady(): Promise<void> {\n    return this._worker.ensureReady();\n  }\n\n  /**\n   * Destroy the event buffer.\n   */\n  public destroy(): void {\n    this._worker.destroy();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfully received and processed by worker.\n   */\n  public addEvent(event: RecordingEvent): Promise<AddEventResult> {\n    const timestamp = timestampToMs(event.timestamp);\n    if (!this._earliestTimestamp || timestamp < this._earliestTimestamp) {\n      this._earliestTimestamp = timestamp;\n    }\n\n    const data = JSON.stringify(event);\n    this._totalSize += data.length;\n\n    if (this._totalSize > REPLAY_MAX_EVENT_BUFFER_SIZE) {\n      return Promise.reject(new EventBufferSizeExceededError());\n    }\n\n    return this._sendEventToWorker(data);\n  }\n\n  /**\n   * Finish the event buffer and return the compressed data.\n   */\n  public finish(): Promise<ReplayRecordingData> {\n    return this._finishRequest();\n  }\n\n  /** @inheritdoc */\n  public clear(): void {\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n    this.hasCheckout = false;\n\n    // We do not wait on this, as we assume the order of messages is consistent for the worker\n    this._worker.postMessage('clear').then(null, e => {\n      DEBUG_BUILD && logger.exception(e, 'Sending \"clear\" message to worker failed', e);\n    });\n  }\n\n  /** @inheritdoc */\n  public getEarliestTimestamp(): number | null {\n    return this._earliestTimestamp;\n  }\n\n  /**\n   * Send the event to the worker.\n   */\n  private _sendEventToWorker(data: string): Promise<AddEventResult> {\n    return this._worker.postMessage<void>('addEvent', data);\n  }\n\n  /**\n   * Finish the request and return the compressed data from the worker.\n   */\n  private async _finishRequest(): Promise<Uint8Array> {\n    const response = await this._worker.postMessage<Uint8Array>('finish');\n\n    this._earliestTimestamp = null;\n    this._totalSize = 0;\n\n    return response;\n  }\n}\n","import type { ReplayRecordingData } from '@sentry/core';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { AddEventResult, EventBuffer, EventBufferType, RecordingEvent } from '../types';\nimport { logger } from '../util/logger';\nimport { EventBufferArray } from './EventBufferArray';\nimport { EventBufferCompressionWorker } from './EventBufferCompressionWorker';\n\n/**\n * This proxy will try to use the compression worker, and fall back to use the simple buffer if an error occurs there.\n * This can happen e.g. if the worker cannot be loaded.\n * Exported only for testing.\n */\nexport class EventBufferProxy implements EventBuffer {\n  private _fallback: EventBufferArray;\n  private _compression: EventBufferCompressionWorker;\n  private _used: EventBuffer;\n  private _ensureWorkerIsLoadedPromise: Promise<void>;\n\n  public constructor(worker: Worker) {\n    this._fallback = new EventBufferArray();\n    this._compression = new EventBufferCompressionWorker(worker);\n    this._used = this._fallback;\n\n    this._ensureWorkerIsLoadedPromise = this._ensureWorkerIsLoaded();\n  }\n\n  /** @inheritdoc */\n  public get waitForCheckout(): boolean {\n    return this._used.waitForCheckout;\n  }\n\n  /** @inheritdoc */\n  public get type(): EventBufferType {\n    return this._used.type;\n  }\n\n  /** @inheritDoc */\n  public get hasEvents(): boolean {\n    return this._used.hasEvents;\n  }\n\n  /** @inheritdoc */\n  public get hasCheckout(): boolean {\n    return this._used.hasCheckout;\n  }\n  /** @inheritdoc */\n  public set hasCheckout(value: boolean) {\n    this._used.hasCheckout = value;\n  }\n\n  /** @inheritdoc */\n  // eslint-disable-next-line @typescript-eslint/adjacent-overload-signatures\n  public set waitForCheckout(value: boolean) {\n    this._used.waitForCheckout = value;\n  }\n\n  /** @inheritDoc */\n  public destroy(): void {\n    this._fallback.destroy();\n    this._compression.destroy();\n  }\n\n  /** @inheritdoc */\n  public clear(): void {\n    return this._used.clear();\n  }\n\n  /** @inheritdoc */\n  public getEarliestTimestamp(): number | null {\n    return this._used.getEarliestTimestamp();\n  }\n\n  /**\n   * Add an event to the event buffer.\n   *\n   * Returns true if event was successfully added.\n   */\n  public addEvent(event: RecordingEvent): Promise<AddEventResult> {\n    return this._used.addEvent(event);\n  }\n\n  /** @inheritDoc */\n  public async finish(): Promise<ReplayRecordingData> {\n    // Ensure the worker is loaded, so the sent event is compressed\n    await this.ensureWorkerIsLoaded();\n\n    return this._used.finish();\n  }\n\n  /** Ensure the worker has loaded. */\n  public ensureWorkerIsLoaded(): Promise<void> {\n    return this._ensureWorkerIsLoadedPromise;\n  }\n\n  /** Actually check if the worker has been loaded. */\n  private async _ensureWorkerIsLoaded(): Promise<void> {\n    try {\n      await this._compression.ensureReady();\n    } catch (error) {\n      // If the worker fails to load, we fall back to the simple buffer.\n      // Nothing more to do from our side here\n      DEBUG_BUILD && logger.exception(error, 'Failed to load the compression worker, falling back to simple buffer');\n      return;\n    }\n\n    // Now we need to switch over the array buffer to the compression worker\n    await this._switchToCompressionWorker();\n  }\n\n  /** Switch the used buffer to the compression worker. */\n  private async _switchToCompressionWorker(): Promise<void> {\n    const { events, hasCheckout, waitForCheckout } = this._fallback;\n\n    const addEventPromises: Promise<void>[] = [];\n    for (const event of events) {\n      addEventPromises.push(this._compression.addEvent(event));\n    }\n\n    this._compression.hasCheckout = hasCheckout;\n    this._compression.waitForCheckout = waitForCheckout;\n\n    // We switch over to the new buffer immediately - any further events will be added\n    // after the previously buffered ones\n    this._used = this._compression;\n\n    // Wait for original events to be re-added before resolving\n    try {\n      await Promise.all(addEventPromises);\n\n      // Can now clear fallback buffer as it's no longer necessary\n      this._fallback.clear();\n    } catch (error) {\n      DEBUG_BUILD && logger.exception(error, 'Failed to add events when switching buffers.');\n    }\n  }\n}\n","import { getWorkerURL } from '@sentry-internal/replay-worker';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { EventBuffer } from '../types';\nimport { logger } from '../util/logger';\nimport { EventBufferArray } from './EventBufferArray';\nimport { EventBufferProxy } from './EventBufferProxy';\n\ninterface CreateEventBufferParams {\n  useCompression: boolean;\n  workerUrl?: string;\n}\n\n// Treeshakable guard to remove the code of the included compression worker\ndeclare const __SENTRY_EXCLUDE_REPLAY_WORKER__: boolean;\n\n/**\n * Create an event buffer for replays.\n */\nexport function createEventBuffer({\n  useCompression,\n  workerUrl: customWorkerUrl,\n}: CreateEventBufferParams): EventBuffer {\n  if (\n    useCompression &&\n    // eslint-disable-next-line no-restricted-globals\n    window.Worker\n  ) {\n    const worker = _loadWorker(customWorkerUrl);\n\n    if (worker) {\n      return worker;\n    }\n  }\n\n  DEBUG_BUILD && logger.info('Using simple buffer');\n  return new EventBufferArray();\n}\n\nfunction _loadWorker(customWorkerUrl?: string): EventBufferProxy | void {\n  try {\n    const workerUrl = customWorkerUrl || _getWorkerUrl();\n\n    if (!workerUrl) {\n      return;\n    }\n\n    DEBUG_BUILD && logger.info(`Using compression worker${customWorkerUrl ? ` from ${customWorkerUrl}` : ''}`);\n    const worker = new Worker(workerUrl);\n    return new EventBufferProxy(worker);\n  } catch (error) {\n    DEBUG_BUILD && logger.exception(error, 'Failed to create compression worker');\n    // Fall back to use simple event buffer array\n  }\n}\n\nfunction _getWorkerUrl(): string {\n  if (typeof __SENTRY_EXCLUDE_REPLAY_WORKER__ === 'undefined' || !__SENTRY_EXCLUDE_REPLAY_WORKER__) {\n    return getWorkerURL();\n  }\n\n  return '';\n}\n","import { WINDOW } from '../constants';\n\n/** If sessionStorage is available. */\nexport function hasSessionStorage(): boolean {\n  try {\n    // This can throw, e.g. when being accessed in a sandboxed iframe\n    return 'sessionStorage' in WINDOW && !!WINDOW.sessionStorage;\n  } catch {\n    return false;\n  }\n}\n","import { REPLAY_SESSION_KEY, WINDOW } from '../../src/constants';\nimport type { ReplayContainer } from '../../src/types';\nimport { hasSessionStorage } from '../util/hasSessionStorage';\n\n/**\n * Removes the session from Session Storage and unsets session in replay instance\n */\nexport function clearSession(replay: ReplayContainer): void {\n  deleteSession();\n  replay.session = undefined;\n}\n\n/**\n * Deletes a session from storage\n */\nfunction deleteSession(): void {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.removeItem(REPLAY_SESSION_KEY);\n  } catch {\n    // Ignore potential SecurityError exceptions\n  }\n}\n","/**\n * Given a sample rate, returns true if replay should be sampled.\n *\n * 1.0 = 100% sampling\n * 0.0 = 0% sampling\n */\nexport function isSampled(sampleRate?: number): boolean {\n  if (sampleRate === undefined) {\n    return false;\n  }\n\n  // Math.random() returns a number in range of 0 to 1 (inclusive of 0, but not 1)\n  return Math.random() < sampleRate;\n}\n","import { uuid4 } from '@sentry/core';\n\nimport type { Sampled, Session } from '../types';\n\n/**\n * Get a session with defaults & applied sampling.\n */\nexport function makeSession(session: Partial<Session> & { sampled: Sampled }): Session {\n  const now = Date.now();\n  const id = session.id || uuid4();\n  // Note that this means we cannot set a started/lastActivity of `0`, but this should not be relevant outside of tests.\n  const started = session.started || now;\n  const lastActivity = session.lastActivity || now;\n  const segmentId = session.segmentId || 0;\n  const sampled = session.sampled;\n  const previousSessionId = session.previousSessionId;\n\n  return {\n    id,\n    started,\n    lastActivity,\n    segmentId,\n    sampled,\n    previousSessionId,\n  };\n}\n","import { REPLAY_SESSION_KEY, WINDOW } from '../constants';\nimport type { Session } from '../types';\nimport { hasSessionStorage } from '../util/hasSessionStorage';\n\n/**\n * Save a session to session storage.\n */\nexport function saveSession(session: Session): void {\n  if (!hasSessionStorage()) {\n    return;\n  }\n\n  try {\n    WINDOW.sessionStorage.setItem(REPLAY_SESSION_KEY, JSON.stringify(session));\n  } catch {\n    // Ignore potential SecurityError exceptions\n  }\n}\n","import type { Sampled, Session, SessionOptions } from '../types';\nimport { isSampled } from '../util/isSampled';\nimport { makeSession } from './Session';\nimport { saveSession } from './saveSession';\n\n/**\n * Get the sampled status for a session based on sample rates & current sampled status.\n */\nexport function getSessionSampleType(sessionSampleRate: number, allowBuffering: boolean): Sampled {\n  return isSampled(sessionSampleRate) ? 'session' : allowBuffering ? 'buffer' : false;\n}\n\n/**\n * Create a new session, which in its current implementation is a Sentry event\n * that all replays will be saved to as attachments. Currently, we only expect\n * one of these Sentry events per \"replay session\".\n */\nexport function createSession(\n  { sessionSampleRate, allowBuffering, stickySession = false }: SessionOptions,\n  { previousSessionId }: { previousSessionId?: string } = {},\n): Session {\n  const sampled = getSessionSampleType(sessionSampleRate, allowBuffering);\n  const session = makeSession({\n    sampled,\n    previousSessionId,\n  });\n\n  if (stickySession) {\n    saveSession(session);\n  }\n\n  return session;\n}\n","import { REPLAY_SESSION_KEY, WINDOW } from '../constants';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { Session } from '../types';\nimport { hasSessionStorage } from '../util/hasSessionStorage';\nimport { logger } from '../util/logger';\nimport { makeSession } from './Session';\n\n/**\n * Fetches a session from storage\n */\nexport function fetchSession(): Session | null {\n  if (!hasSessionStorage()) {\n    return null;\n  }\n\n  try {\n    // This can throw if cookies are disabled\n    const sessionStringFromStorage = WINDOW.sessionStorage.getItem(REPLAY_SESSION_KEY);\n\n    if (!sessionStringFromStorage) {\n      return null;\n    }\n\n    const sessionObj = JSON.parse(sessionStringFromStorage) as Session;\n\n    DEBUG_BUILD && logger.infoTick('Loading existing session');\n\n    return makeSession(sessionObj);\n  } catch {\n    return null;\n  }\n}\n","/**\n * Given an initial timestamp and an expiry duration, checks to see if current\n * time should be considered as expired.\n */\nexport function isExpired(\n  initialTime: null | number,\n  expiry: undefined | number,\n  targetTime: number = +new Date(),\n): boolean {\n  // Always expired if < 0\n  if (initialTime === null || expiry === undefined || expiry < 0) {\n    return true;\n  }\n\n  // Never expires if == 0\n  if (expiry === 0) {\n    return false;\n  }\n\n  return initialTime + expiry <= targetTime;\n}\n","import type { Session } from '../types';\nimport { isExpired } from './isExpired';\n\n/**\n * Checks to see if session is expired\n */\nexport function isSessionExpired(\n  session: Session,\n  {\n    maxReplayDuration,\n    sessionIdleExpire,\n    targetTime = Date.now(),\n  }: { maxReplayDuration: number; sessionIdleExpire: number; targetTime?: number },\n): boolean {\n  return (\n    // First, check that maximum session length has not been exceeded\n    isExpired(session.started, maxReplayDuration, targetTime) ||\n    // check that the idle timeout has not been exceeded (i.e. user has\n    // performed an action within the last `sessionIdleExpire` ms)\n    isExpired(session.lastActivity, sessionIdleExpire, targetTime)\n  );\n}\n","import type { Session } from '../types';\nimport { isSessionExpired } from '../util/isSessionExpired';\n\n/** If the session should be refreshed or not. */\nexport function shouldRefreshSession(\n  session: Session,\n  { sessionIdleExpire, maxReplayDuration }: { sessionIdleExpire: number; maxReplayDuration: number },\n): boolean {\n  // If not expired, all good, just keep the session\n  if (!isSessionExpired(session, { sessionIdleExpire, maxReplayDuration })) {\n    return false;\n  }\n\n  // If we are buffering & haven't ever flushed yet, always continue\n  if (session.sampled === 'buffer' && session.segmentId === 0) {\n    return false;\n  }\n\n  return true;\n}\n","import { DEBUG_BUILD } from '../debug-build';\nimport type { Session, SessionOptions } from '../types';\nimport { logger } from '../util/logger';\nimport { createSession } from './createSession';\nimport { fetchSession } from './fetchSession';\nimport { shouldRefreshSession } from './shouldRefreshSession';\n\n/**\n * Get or create a session, when initializing the replay.\n * Returns a session that may be unsampled.\n */\nexport function loadOrCreateSession(\n  {\n    sessionIdleExpire,\n    maxReplayDuration,\n    previousSessionId,\n  }: {\n    sessionIdleExpire: number;\n    maxReplayDuration: number;\n    previousSessionId?: string;\n  },\n  sessionOptions: SessionOptions,\n): Session {\n  const existingSession = sessionOptions.stickySession && fetchSession();\n\n  // No session exists yet, just create a new one\n  if (!existingSession) {\n    DEBUG_BUILD && logger.infoTick('Creating new session');\n    return createSession(sessionOptions, { previousSessionId });\n  }\n\n  if (!shouldRefreshSession(existingSession, { sessionIdleExpire, maxReplayDuration })) {\n    return existingSession;\n  }\n\n  DEBUG_BUILD && logger.infoTick('Session in sessionStorage is expired, creating new one...');\n  return createSession(sessionOptions, { previousSessionId: existingSession.id });\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport { getClient } from '@sentry/core';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport { EventBufferSizeExceededError } from '../eventBuffer/error';\nimport type { AddEventResult, RecordingEvent, ReplayContainer, ReplayFrameEvent, ReplayPluginOptions } from '../types';\nimport { logger } from './logger';\nimport { timestampToMs } from './timestamp';\n\nfunction isCustomEvent(event: RecordingEvent): event is ReplayFrameEvent {\n  return event.type === EventType.Custom;\n}\n\n/**\n * Add an event to the event buffer.\n * In contrast to `addEvent`, this does not return a promise & does not wait for the adding of the event to succeed/fail.\n * Instead this returns `true` if we tried to add the event, else false.\n * It returns `false` e.g. if we are paused, disabled, or out of the max replay duration.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nexport function addEventSync(replay: ReplayContainer, event: RecordingEvent, isCheckout?: boolean): boolean {\n  if (!shouldAddEvent(replay, event)) {\n    return false;\n  }\n\n  // This should never reject\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  _addEvent(replay, event, isCheckout);\n\n  return true;\n}\n\n/**\n * Add an event to the event buffer.\n * Resolves to `null` if no event was added, else to `void`.\n *\n * `isCheckout` is true if this is either the very first event, or an event triggered by `checkoutEveryNms`.\n */\nexport function addEvent(\n  replay: ReplayContainer,\n  event: RecordingEvent,\n  isCheckout?: boolean,\n): Promise<AddEventResult | null> {\n  if (!shouldAddEvent(replay, event)) {\n    return Promise.resolve(null);\n  }\n\n  return _addEvent(replay, event, isCheckout);\n}\n\nasync function _addEvent(\n  replay: ReplayContainer,\n  event: RecordingEvent,\n  isCheckout?: boolean,\n): Promise<AddEventResult | null> {\n  const { eventBuffer } = replay;\n\n  if (!eventBuffer || (eventBuffer.waitForCheckout && !isCheckout)) {\n    return null;\n  }\n\n  const isBufferMode = replay.recordingMode === 'buffer';\n\n  try {\n    if (isCheckout && isBufferMode) {\n      eventBuffer.clear();\n    }\n\n    if (isCheckout) {\n      eventBuffer.hasCheckout = true;\n      eventBuffer.waitForCheckout = false;\n    }\n\n    const replayOptions = replay.getOptions();\n\n    const eventAfterPossibleCallback = maybeApplyCallback(event, replayOptions.beforeAddRecordingEvent);\n\n    if (!eventAfterPossibleCallback) {\n      return;\n    }\n\n    return await eventBuffer.addEvent(eventAfterPossibleCallback);\n  } catch (error) {\n    const isExceeded = error && error instanceof EventBufferSizeExceededError;\n    const reason = isExceeded ? 'addEventSizeExceeded' : 'addEvent';\n\n    if (isExceeded && isBufferMode) {\n      // Clear buffer and wait for next checkout\n      eventBuffer.clear();\n      eventBuffer.waitForCheckout = true;\n\n      return null;\n    }\n\n    replay.handleException(error);\n\n    await replay.stop({ reason });\n\n    const client = getClient();\n\n    if (client) {\n      client.recordDroppedEvent('internal_sdk_error', 'replay');\n    }\n  }\n}\n\n/** Exported only for tests. */\nexport function shouldAddEvent(replay: ReplayContainer, event: RecordingEvent): boolean {\n  if (!replay.eventBuffer || replay.isPaused() || !replay.isEnabled()) {\n    return false;\n  }\n\n  const timestampInMs = timestampToMs(event.timestamp);\n\n  // Throw out events that happen more than 5 minutes ago. This can happen if\n  // page has been left open and idle for a long period of time and user\n  // comes back to trigger a new session. The performance entries rely on\n  // `performance.timeOrigin`, which is when the page first opened.\n  if (timestampInMs + replay.timeouts.sessionIdlePause < Date.now()) {\n    return false;\n  }\n\n  // Throw out events that are +60min from the initial timestamp\n  if (timestampInMs > replay.getContext().initialTimestamp + replay.getOptions().maxReplayDuration) {\n    DEBUG_BUILD &&\n      logger.infoTick(`Skipping event with timestamp ${timestampInMs} because it is after maxReplayDuration`);\n    return false;\n  }\n\n  return true;\n}\n\nfunction maybeApplyCallback(\n  event: RecordingEvent,\n  callback: ReplayPluginOptions['beforeAddRecordingEvent'],\n): RecordingEvent | null | undefined {\n  try {\n    if (typeof callback === 'function' && isCustomEvent(event)) {\n      return callback(event);\n    }\n  } catch (error) {\n    DEBUG_BUILD &&\n      logger.exception(error, 'An error occurred in the `beforeAddRecordingEvent` callback, skipping the event...');\n    return null;\n  }\n\n  return event;\n}\n","import type { ErrorEvent, Event, FeedbackEvent, ReplayEvent, TransactionEvent } from '@sentry/core';\n\n/** If the event is an error event */\nexport function isErrorEvent(event: Event): event is ErrorEvent {\n  return !event.type;\n}\n\n/** If the event is a transaction event */\nexport function isTransactionEvent(event: Event): event is TransactionEvent {\n  return event.type === 'transaction';\n}\n\n/** If the event is an replay event */\nexport function isReplayEvent(event: Event): event is ReplayEvent {\n  return event.type === 'replay_event';\n}\n\n/** If the event is a feedback event */\nexport function isFeedbackEvent(event: Event): event is FeedbackEvent {\n  return event.type === 'feedback';\n}\n","import { setTimeout } from '@sentry-internal/browser-utils';\nimport type { ErrorEvent, Event, TransactionEvent, TransportMakeRequestResponse } from '@sentry/core';\n\nimport type { ReplayContainer } from '../types';\nimport { isErrorEvent, isTransactionEvent } from '../util/eventUtils';\n\ntype AfterSendEventCallback = (event: Event, sendResponse: TransportMakeRequestResponse) => void;\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nexport function handleAfterSendEvent(replay: ReplayContainer): AfterSendEventCallback {\n  return (event: Event, sendResponse: TransportMakeRequestResponse) => {\n    if (!replay.isEnabled() || (!isErrorEvent(event) && !isTransactionEvent(event))) {\n      return;\n    }\n\n    const statusCode = sendResponse?.statusCode;\n\n    // We only want to do stuff on successful error sending, otherwise you get error replays without errors attached\n    // If not using the base transport, we allow `undefined` response (as a custom transport may not implement this correctly yet)\n    // If we do use the base transport, we skip if we encountered an non-OK status code\n    if (!statusCode || statusCode < 200 || statusCode >= 300) {\n      return;\n    }\n\n    if (isTransactionEvent(event)) {\n      handleTransactionEvent(replay, event);\n      return;\n    }\n\n    handleErrorEvent(replay, event);\n  };\n}\n\nfunction handleTransactionEvent(replay: ReplayContainer, event: TransactionEvent): void {\n  const replayContext = replay.getContext();\n\n  // Collect traceIds in _context regardless of `recordingMode`\n  // In error mode, _context gets cleared on every checkout\n  // We limit to max. 100 transactions linked\n  if (event.contexts?.trace?.trace_id && replayContext.traceIds.size < 100) {\n    replayContext.traceIds.add(event.contexts.trace.trace_id);\n  }\n}\n\nfunction handleErrorEvent(replay: ReplayContainer, event: ErrorEvent): void {\n  const replayContext = replay.getContext();\n\n  // Add error to list of errorIds of replay. This is ok to do even if not\n  // sampled because context will get reset at next checkout.\n  // XXX: There is also a race condition where it's possible to capture an\n  // error to Sentry before Replay SDK has loaded, but response returns after\n  // it was loaded, and this gets called.\n  // We limit to max. 100 errors linked\n  if (event.event_id && replayContext.errorIds.size < 100) {\n    replayContext.errorIds.add(event.event_id);\n  }\n\n  // If error event is tagged with replay id it means it was sampled (when in buffer mode)\n  // Need to be very careful that this does not cause an infinite loop\n  if (replay.recordingMode !== 'buffer' || !event.tags || !event.tags.replayId) {\n    return;\n  }\n\n  const { beforeErrorSampling } = replay.getOptions();\n  if (typeof beforeErrorSampling === 'function' && !beforeErrorSampling(event)) {\n    return;\n  }\n\n  setTimeout(async () => {\n    try {\n      // Capture current event buffer as new replay\n      await replay.sendBufferedReplayOrFlush();\n    } catch (err) {\n      replay.handleException(err);\n    }\n  });\n}\n","import { getLocationHref } from '@sentry/core';\nimport type { ErrorEvent, Event } from '@sentry/core';\n\nimport type { ReplayContainer } from '../types';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { isErrorEvent } from '../util/eventUtils';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\n\ntype BeforeSendEventCallback = (event: Event) => void;\n\n/**\n * Returns a listener to be added to `client.on('afterSendErrorEvent, listener)`.\n */\nexport function handleBeforeSendEvent(replay: ReplayContainer): BeforeSendEventCallback {\n  return (event: Event) => {\n    if (!replay.isEnabled() || !isErrorEvent(event)) {\n      return;\n    }\n\n    handleHydrationError(replay, event);\n  };\n}\n\nfunction handleHydrationError(replay: ReplayContainer, event: ErrorEvent): void {\n  const exceptionValue = event.exception?.values?.[0]?.value;\n  if (typeof exceptionValue !== 'string') {\n    return;\n  }\n\n  if (\n    // Only matches errors in production builds of react-dom\n    // Example https://reactjs.org/docs/error-decoder.html?invariant=423\n    // With newer React versions, the messages changed to a different website https://react.dev/errors/418\n    exceptionValue.match(\n      /(reactjs\\.org\\/docs\\/error-decoder\\.html\\?invariant=|react\\.dev\\/errors\\/)(418|419|422|423|425)/,\n    ) ||\n    // Development builds of react-dom\n    // Error 1: Hydration failed because the initial UI does not match what was rendered on the server.\n    // Error 2: Text content does not match server-rendered HTML. Warning: Text content did not match.\n    exceptionValue.match(/(does not match server-rendered HTML|Hydration failed because)/i)\n  ) {\n    const breadcrumb = createBreadcrumb({\n      category: 'replay.hydrate-error',\n      data: {\n        url: getLocationHref(),\n      },\n    });\n    addBreadcrumbEvent(replay, breadcrumb);\n  }\n}\n","import type { Breadcrumb } from '@sentry/core';\nimport { getClient, normalize } from '@sentry/core';\nimport { CONSOLE_ARG_MAX_SIZE } from '../constants';\nimport type { ReplayContainer } from '../types';\nimport type { ReplayFrame } from '../types/replayFrame';\nimport { createBreadcrumb } from '../util/createBreadcrumb';\nimport { addBreadcrumbEvent } from './util/addBreadcrumbEvent';\n\ntype BreadcrumbWithCategory = Required<Pick<Breadcrumb, 'category'>>;\n\n/**\n * Handle breadcrumbs that Sentry captures, and make sure to capture relevant breadcrumbs to Replay as well.\n */\nexport function handleBreadcrumbs(replay: ReplayContainer): void {\n  const client = getClient();\n\n  if (!client) {\n    return;\n  }\n\n  client.on('beforeAddBreadcrumb', breadcrumb => beforeAddBreadcrumb(replay, breadcrumb));\n}\n\nfunction beforeAddBreadcrumb(replay: ReplayContainer, breadcrumb: Breadcrumb): void {\n  if (!replay.isEnabled() || !isBreadcrumbWithCategory(breadcrumb)) {\n    return;\n  }\n\n  const result = normalizeBreadcrumb(breadcrumb);\n  if (result) {\n    addBreadcrumbEvent(replay, result);\n  }\n}\n\n/** Exported only for tests. */\nexport function normalizeBreadcrumb(breadcrumb: Breadcrumb): Breadcrumb | null {\n  if (\n    !isBreadcrumbWithCategory(breadcrumb) ||\n    [\n      // fetch & xhr are handled separately,in handleNetworkBreadcrumbs\n      'fetch',\n      'xhr',\n      // These two are breadcrumbs for emitted sentry events, we don't care about them\n      'sentry.event',\n      'sentry.transaction',\n    ].includes(breadcrumb.category) ||\n    // We capture UI breadcrumbs separately\n    breadcrumb.category.startsWith('ui.')\n  ) {\n    return null;\n  }\n\n  if (breadcrumb.category === 'console') {\n    return normalizeConsoleBreadcrumb(breadcrumb);\n  }\n\n  return createBreadcrumb(breadcrumb);\n}\n\n/** exported for tests only */\nexport function normalizeConsoleBreadcrumb(\n  breadcrumb: Omit<Breadcrumb, 'category'> & BreadcrumbWithCategory,\n): ReplayFrame {\n  const args = breadcrumb.data?.arguments;\n\n  if (!Array.isArray(args) || args.length === 0) {\n    return createBreadcrumb(breadcrumb);\n  }\n\n  let isTruncated = false;\n\n  // Avoid giant args captures\n  const normalizedArgs = args.map(arg => {\n    if (!arg) {\n      return arg;\n    }\n    if (typeof arg === 'string') {\n      if (arg.length > CONSOLE_ARG_MAX_SIZE) {\n        isTruncated = true;\n        return `${arg.slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n      }\n\n      return arg;\n    }\n    if (typeof arg === 'object') {\n      try {\n        const normalizedArg = normalize(arg, 7);\n        const stringified = JSON.stringify(normalizedArg);\n        if (stringified.length > CONSOLE_ARG_MAX_SIZE) {\n          isTruncated = true;\n          // We use the pretty printed JSON string here as a base\n          return `${JSON.stringify(normalizedArg, null, 2).slice(0, CONSOLE_ARG_MAX_SIZE)}…`;\n        }\n        return normalizedArg;\n      } catch {\n        // fall back to default\n      }\n    }\n\n    return arg;\n  });\n\n  return createBreadcrumb({\n    ...breadcrumb,\n    data: {\n      ...breadcrumb.data,\n      arguments: normalizedArgs,\n      ...(isTruncated ? { _meta: { warnings: ['CONSOLE_ARG_TRUNCATED'] } } : {}),\n    },\n  });\n}\n\nfunction isBreadcrumbWithCategory(breadcrumb: Breadcrumb): breadcrumb is BreadcrumbWithCategory {\n  return !!breadcrumb.category;\n}\n","import type { Event, EventHint } from '@sentry/core';\n\n/**\n * Returns true if we think the given event is an error originating inside of rrweb.\n */\nexport function isRrwebError(event: Event, hint: EventHint): boolean {\n  if (event.type || !event.exception || !event.exception.values || !event.exception.values.length) {\n    return false;\n  }\n\n  // @ts-expect-error this may be set by rrweb when it finds errors\n  if (hint.originalException?.__rrweb__) {\n    return true;\n  }\n\n  return false;\n}\n","import { getActiveSpan, getCurrentScope, getDynamicSamplingContextFromSpan } from '@sentry/core';\nimport type { DynamicSamplingContext } from '@sentry/core';\n\n/**\n * Reset the `replay_id` field on the DSC.\n */\nexport function resetReplayIdOnDynamicSamplingContext(): void {\n  // Reset DSC on the current scope, if there is one\n  const dsc = getCurrentScope().getPropagationContext().dsc;\n  if (dsc) {\n    delete dsc.replay_id;\n  }\n\n  // Clear it from frozen DSC on the active span\n  const activeSpan = getActiveSpan();\n  if (activeSpan) {\n    const dsc = getDynamicSamplingContextFromSpan(activeSpan);\n    delete (dsc as Partial<DynamicSamplingContext>).replay_id;\n  }\n}\n","import { EventType } from '@sentry-internal/rrweb';\nimport type { FeedbackEvent } from '@sentry/core';\n\nimport type { ReplayBreadcrumbFrameEvent, ReplayContainer } from '../../types';\n\n/**\n * Add a feedback breadcrumb event to replay.\n */\nexport function addFeedbackBreadcrumb(replay: ReplayContainer, event: FeedbackEvent): void {\n  replay.triggerUserActivity();\n  replay.addUpdate(() => {\n    if (!event.timestamp) {\n      // Ignore events that don't have timestamps (this shouldn't happen, more of a typing issue)\n      // Return true here so that we don't flush\n      return true;\n    }\n\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: event.timestamp * 1000,\n      data: {\n        tag: 'breadcrumb',\n        payload: {\n          timestamp: event.timestamp,\n          type: 'default',\n          category: 'sentry.feedback',\n          data: {\n            feedbackId: event.event_id,\n          },\n        },\n      },\n    } as ReplayBreadcrumbFrameEvent);\n\n    return false;\n  });\n}\n","import type { Event } from '@sentry/core';\n\nimport { UNABLE_TO_SEND_REPLAY } from '../../constants';\nimport type { ReplayContainer } from '../../types';\nimport { isSampled } from '../../util/isSampled';\n\n/**\n * Determine if event should be sampled (only applies in buffer mode).\n * When an event is captured by `handleGlobalEvent`, when in buffer mode\n * we determine if we want to sample the error or not.\n */\nexport function shouldSampleForBufferEvent(replay: ReplayContainer, event: Event): boolean {\n  if (replay.recordingMode !== 'buffer') {\n    return false;\n  }\n\n  // ignore this error because otherwise we could loop indefinitely with\n  // trying to capture replay and failing\n  if (event.message === UNABLE_TO_SEND_REPLAY) {\n    return false;\n  }\n\n  // Require the event to be an error event & to have an exception\n  if (!event.exception || event.type) {\n    return false;\n  }\n\n  return isSampled(replay.getOptions().errorSampleRate);\n}\n","import type { Event, EventHint } from '@sentry/core';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { ReplayContainer } from '../types';\nimport { isErrorEvent, isFeedbackEvent, isReplayEvent, isTransactionEvent } from '../util/eventUtils';\nimport { isRrwebError } from '../util/isRrwebError';\nimport { logger } from '../util/logger';\nimport { resetReplayIdOnDynamicSamplingContext } from '../util/resetReplayIdOnDynamicSamplingContext';\nimport { addFeedbackBreadcrumb } from './util/addFeedbackBreadcrumb';\nimport { shouldSampleForBufferEvent } from './util/shouldSampleForBufferEvent';\n\n/**\n * Returns a listener to be added to `addEventProcessor(listener)`.\n */\nexport function handleGlobalEventListener(replay: ReplayContainer): (event: Event, hint: EventHint) => Event | null {\n  return Object.assign(\n    (event: Event, hint: EventHint) => {\n      // Do nothing if replay has been disabled or paused\n      if (!replay.isEnabled() || replay.isPaused()) {\n        return event;\n      }\n\n      if (isReplayEvent(event)) {\n        // Replays have separate set of breadcrumbs, do not include breadcrumbs\n        // from core SDK\n        delete event.breadcrumbs;\n        return event;\n      }\n\n      // We only want to handle errors, transactions, and feedbacks, nothing else\n      if (!isErrorEvent(event) && !isTransactionEvent(event) && !isFeedbackEvent(event)) {\n        return event;\n      }\n\n      // Ensure we do not add replay_id if the session is expired\n      const isSessionActive = replay.checkAndHandleExpiredSession();\n      if (!isSessionActive) {\n        // prevent exceeding replay durations by removing the expired replayId from the DSC\n        resetReplayIdOnDynamicSamplingContext();\n        return event;\n      }\n\n      if (isFeedbackEvent(event)) {\n        // This should never reject\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        replay.flush();\n        event.contexts.feedback.replay_id = replay.getSessionId();\n        // Add a replay breadcrumb for this piece of feedback\n        addFeedbackBreadcrumb(replay, event);\n        return event;\n      }\n\n      // Unless `captureExceptions` is enabled, we want to ignore errors coming from rrweb\n      // As there can be a bunch of stuff going wrong in internals there, that we don't want to bubble up to users\n      if (isRrwebError(event, hint) && !replay.getOptions()._experiments.captureExceptions) {\n        DEBUG_BUILD && logger.log('Ignoring error from rrweb internals', event);\n        return null;\n      }\n\n      // When in buffer mode, we decide to sample here.\n      // Later, in `handleAfterSendEvent`, if the replayId is set, we know that we sampled\n      // And convert the buffer session to a full session\n      const isErrorEventSampled = shouldSampleForBufferEvent(replay, event);\n\n      // Tag errors if it has been sampled in buffer mode, or if it is session mode\n      // Only tag transactions if in session mode\n      const shouldTagReplayId = isErrorEventSampled || replay.recordingMode === 'session';\n\n      if (shouldTagReplayId) {\n        event.tags = { ...event.tags, replayId: replay.getSessionId() };\n      }\n\n      return event;\n    },\n    { id: 'Replay' },\n  );\n}\n","import { EventType } from '@sentry-internal/rrweb';\n\nimport type { AddEventResult, AllEntryData, ReplayContainer, ReplayPerformanceEntry } from '../types';\n\n/**\n * Create a \"span\" for each performance entry.\n */\nexport function createPerformanceSpans(\n  replay: ReplayContainer,\n  entries: ReplayPerformanceEntry<AllEntryData>[],\n): Promise<AddEventResult | null>[] {\n  return entries.map(({ type, start, end, name, data }) => {\n    const response = replay.throttledAddEvent({\n      type: EventType.Custom,\n      timestamp: start,\n      data: {\n        tag: 'performanceSpan',\n        payload: {\n          op: type,\n          description: name,\n          startTimestamp: start,\n          endTimestamp: end,\n          data,\n        },\n      },\n    });\n\n    // If response is a string, it means its either THROTTLED or SKIPPED\n    return typeof response === 'string' ? Promise.resolve(null) : response;\n  });\n}\n","import type { HandlerDataHistory } from '@sentry/core';\n\nimport type { HistoryData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { createPerformanceSpans } from '../util/createPerformanceSpans';\n\nfunction handleHistory(handlerData: HandlerDataHistory): ReplayPerformanceEntry<HistoryData> {\n  const { from, to } = handlerData;\n\n  const now = Date.now() / 1000;\n\n  return {\n    type: 'navigation.push',\n    start: now,\n    end: now,\n    name: to,\n    data: {\n      previous: from,\n    },\n  };\n}\n\n/**\n * Returns a listener to be added to `addHistoryInstrumentationHandler(listener)`.\n */\nexport function handleHistorySpanListener(replay: ReplayContainer): (handlerData: HandlerDataHistory) => void {\n  return (handlerData: HandlerDataHistory) => {\n    if (!replay.isEnabled()) {\n      return;\n    }\n\n    const result = handleHistory(handlerData);\n\n    if (result === null) {\n      return;\n    }\n\n    // Need to collect visited URLs\n    replay.getContext().urls.push(result.name);\n    replay.triggerUserActivity();\n\n    replay.addUpdate(() => {\n      createPerformanceSpans(replay, [result]);\n      // Returning false to flush\n      return false;\n    });\n  };\n}\n","import { getClient, isSentryRequestUrl } from '@sentry/core';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { ReplayContainer } from '../types';\n\n/**\n * Check whether a given request URL should be filtered out. This is so we\n * don't log Sentry ingest requests.\n */\nexport function shouldFilterRequest(replay: ReplayContainer, url: string): boolean {\n  // If we enabled the `traceInternals` experiment, we want to trace everything\n  if (DEBUG_BUILD && replay.getOptions()._experiments.traceInternals) {\n    return false;\n  }\n\n  return isSentryRequestUrl(url, getClient());\n}\n","import type { NetworkRequestData, ReplayContainer, ReplayPerformanceEntry } from '../../types';\nimport { createPerformanceSpans } from '../../util/createPerformanceSpans';\nimport { shouldFilterRequest } from '../../util/shouldFilterRequest';\n\n/** Add a performance entry breadcrumb */\nexport function addNetworkBreadcrumb(\n  replay: ReplayContainer,\n  result: ReplayPerformanceEntry<NetworkRequestData> | null,\n): void {\n  if (!replay.isEnabled()) {\n    return;\n  }\n\n  if (result === null) {\n    return;\n  }\n\n  if (shouldFilterRequest(replay, result.name)) {\n    return;\n  }\n\n  replay.addUpdate(() => {\n    createPerformanceSpans(replay, [result]);\n    // Returning true will cause `addUpdate` to not flush\n    // We do not want network requests to cause a flush. This will prevent\n    // recurring/polling requests from keeping the replay session alive.\n    return true;\n  });\n}\n","import { serializeFormData } from '@sentry-internal/browser-utils';\nimport type { NetworkMetaWarning } from '@sentry-internal/browser-utils';\nimport { dropUndefinedKeys, stringMatchesSomePattern } from '@sentry/core';\n\nimport { NETWORK_BODY_MAX_SIZE, WINDOW } from '../../constants';\nimport type {\n  NetworkBody,\n  NetworkRequestData,\n  ReplayNetworkRequestData,\n  ReplayNetworkRequestOrResponse,\n  ReplayPerformanceEntry,\n} from '../../types';\n\n/** Get the size of a body. */\nexport function getBodySize(body: RequestInit['body']): number | undefined {\n  if (!body) {\n    return undefined;\n  }\n\n  const textEncoder = new TextEncoder();\n\n  try {\n    if (typeof body === 'string') {\n      return textEncoder.encode(body).length;\n    }\n\n    if (body instanceof URLSearchParams) {\n      return textEncoder.encode(body.toString()).length;\n    }\n\n    if (body instanceof FormData) {\n      const formDataStr = serializeFormData(body);\n      return textEncoder.encode(formDataStr).length;\n    }\n\n    if (body instanceof Blob) {\n      return body.size;\n    }\n\n    if (body instanceof ArrayBuffer) {\n      return body.byteLength;\n    }\n\n    // Currently unhandled types: ArrayBufferView, ReadableStream\n  } catch {\n    // just return undefined\n  }\n\n  return undefined;\n}\n\n/** Convert a Content-Length header to number/undefined.  */\nexport function parseContentLengthHeader(header: string | null | undefined): number | undefined {\n  if (!header) {\n    return undefined;\n  }\n\n  const size = parseInt(header, 10);\n  return isNaN(size) ? undefined : size;\n}\n\n/** Merge a warning into an existing network request/response. */\nexport function mergeWarning(\n  info: ReplayNetworkRequestOrResponse | undefined,\n  warning: NetworkMetaWarning,\n): ReplayNetworkRequestOrResponse {\n  if (!info) {\n    return {\n      headers: {},\n      size: undefined,\n      _meta: {\n        warnings: [warning],\n      },\n    };\n  }\n\n  const newMeta = { ...info._meta };\n  const existingWarnings = newMeta.warnings || [];\n  newMeta.warnings = [...existingWarnings, warning];\n\n  info._meta = newMeta;\n  return info;\n}\n\n/** Convert ReplayNetworkRequestData to a PerformanceEntry. */\nexport function makeNetworkReplayBreadcrumb(\n  type: string,\n  data: ReplayNetworkRequestData | null,\n): ReplayPerformanceEntry<NetworkRequestData> | null {\n  if (!data) {\n    return null;\n  }\n\n  const { startTimestamp, endTimestamp, url, method, statusCode, request, response } = data;\n\n  const result: ReplayPerformanceEntry<NetworkRequestData> = {\n    type,\n    start: startTimestamp / 1000,\n    end: endTimestamp / 1000,\n    name: url,\n    data: dropUndefinedKeys({\n      method,\n      statusCode,\n      request,\n      response,\n    }),\n  };\n\n  return result;\n}\n\n/** Build the request or response part of a replay network breadcrumb that was skipped. */\nexport function buildSkippedNetworkRequestOrResponse(bodySize: number | undefined): ReplayNetworkRequestOrResponse {\n  return {\n    headers: {},\n    size: bodySize,\n    _meta: {\n      warnings: ['URL_SKIPPED'],\n    },\n  };\n}\n\n/** Build the request or response part of a replay network breadcrumb. */\nexport function buildNetworkRequestOrResponse(\n  headers: Record<string, string>,\n  bodySize: number | undefined,\n  body: string | undefined,\n): ReplayNetworkRequestOrResponse | undefined {\n  if (!bodySize && Object.keys(headers).length === 0) {\n    return undefined;\n  }\n\n  if (!bodySize) {\n    return {\n      headers,\n    };\n  }\n\n  if (!body) {\n    return {\n      headers,\n      size: bodySize,\n    };\n  }\n\n  const info: ReplayNetworkRequestOrResponse = {\n    headers,\n    size: bodySize,\n  };\n\n  const { body: normalizedBody, warnings } = normalizeNetworkBody(body);\n  info.body = normalizedBody;\n  if (warnings?.length) {\n    info._meta = {\n      warnings,\n    };\n  }\n\n  return info;\n}\n\n/** Filter a set of headers */\nexport function getAllowedHeaders(headers: Record<string, string>, allowedHeaders: string[]): Record<string, string> {\n  return Object.entries(headers).reduce((filteredHeaders: Record<string, string>, [key, value]) => {\n    const normalizedKey = key.toLowerCase();\n    // Avoid putting empty strings into the headers\n    if (allowedHeaders.includes(normalizedKey) && headers[key]) {\n      filteredHeaders[normalizedKey] = value;\n    }\n    return filteredHeaders;\n  }, {});\n}\n\nfunction normalizeNetworkBody(body: string | undefined): {\n  body: NetworkBody | undefined;\n  warnings?: NetworkMetaWarning[];\n} {\n  if (!body || typeof body !== 'string') {\n    return {\n      body,\n    };\n  }\n\n  const exceedsSizeLimit = body.length > NETWORK_BODY_MAX_SIZE;\n  const isProbablyJson = _strIsProbablyJson(body);\n\n  if (exceedsSizeLimit) {\n    const truncatedBody = body.slice(0, NETWORK_BODY_MAX_SIZE);\n\n    if (isProbablyJson) {\n      return {\n        body: truncatedBody,\n        warnings: ['MAYBE_JSON_TRUNCATED'],\n      };\n    }\n\n    return {\n      body: `${truncatedBody}…`,\n      warnings: ['TEXT_TRUNCATED'],\n    };\n  }\n\n  if (isProbablyJson) {\n    try {\n      const jsonBody = JSON.parse(body);\n      return {\n        body: jsonBody,\n      };\n    } catch {\n      // fall back to just send the body as string\n    }\n  }\n\n  return {\n    body,\n  };\n}\n\nfunction _strIsProbablyJson(str: string): boolean {\n  const first = str[0];\n  const last = str[str.length - 1];\n\n  // Simple check: If this does not start & end with {} or [], it's not JSON\n  return (first === '[' && last === ']') || (first === '{' && last === '}');\n}\n\n/** Match an URL against a list of strings/Regex. */\nexport function urlMatches(url: string, urls: (string | RegExp)[]): boolean {\n  const fullUrl = getFullUrl(url);\n\n  return stringMatchesSomePattern(fullUrl, urls);\n}\n\n/** exported for tests */\nexport function getFullUrl(url: string, baseURI = WINDOW.document.baseURI): string {\n  // Short circuit for common cases:\n  if (url.startsWith('http://') || url.startsWith('https://') || url.startsWith(WINDOW.location.origin)) {\n    return url;\n  }\n  const fixedUrl = new URL(url, baseURI);\n\n  // If these do not match, we are not dealing with a relative URL, so just return it\n  if (fixedUrl.origin !== new URL(baseURI).origin) {\n    return url;\n  }\n\n  const fullUrl = fixedUrl.href;\n\n  // Remove trailing slashes, if they don't match the original URL\n  if (!url.endsWith('/') && fullUrl.endsWith('/')) {\n    return fullUrl.slice(0, -1);\n  }\n\n  return fullUrl;\n}\n","import { getBodyString, getFetchRequestArgBody, setTimeout } from '@sentry-internal/browser-utils';\nimport type { FetchHint, NetworkMetaWarning } from '@sentry-internal/browser-utils';\nimport type { Breadcrumb, FetchBreadcrumbData } from '@sentry/core';\n\nimport { DEBUG_BUILD } from '../../debug-build';\nimport type {\n  ReplayContainer,\n  ReplayNetworkOptions,\n  ReplayNetworkRequestData,\n  ReplayNetworkRequestOrResponse,\n} from '../../types';\nimport { logger } from '../../util/logger';\nimport { addNetworkBreadcrumb } from './addNetworkBreadcrumb';\nimport {\n  buildNetworkRequestOrResponse,\n  buildSkippedNetworkRequestOrResponse,\n  getAllowedHeaders,\n  getBodySize,\n  makeNetworkReplayBreadcrumb,\n  mergeWarning,\n  parseContentLengthHeader,\n  urlMatches,\n} from './networkUtils';\n\n/**\n * Capture a fetch breadcrumb to a replay.\n * This adds additional data (where appropriate).\n */\nexport async function captureFetchBreadcrumbToReplay(\n  breadcrumb: Breadcrumb & { data: FetchBreadcrumbData },\n  hint: Partial<FetchHint>,\n  options: ReplayNetworkOptions & {\n    replay: ReplayContainer;\n  },\n): Promise<void> {\n  try {\n    const data = await _prepareFetchData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.fetch', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    DEBUG_BUILD && logger.exception(error, 'Failed to capture fetch breadcrumb');\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nexport function enrichFetchBreadcrumb(\n  breadcrumb: Breadcrumb & { data: FetchBreadcrumbData },\n  hint: Partial<FetchHint>,\n): void {\n  const { input, response } = hint;\n\n  const body = input ? getFetchRequestArgBody(input) : undefined;\n  const reqSize = getBodySize(body);\n\n  const resSize = response ? parseContentLengthHeader(response.headers.get('content-length')) : undefined;\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nasync function _prepareFetchData(\n  breadcrumb: Breadcrumb & { data: FetchBreadcrumbData },\n  hint: Partial<FetchHint>,\n  options: ReplayNetworkOptions,\n): Promise<ReplayNetworkRequestData> {\n  const now = Date.now();\n  const { startTimestamp = now, endTimestamp = now } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  const captureDetails =\n    urlMatches(url, options.networkDetailAllowUrls) && !urlMatches(url, options.networkDetailDenyUrls);\n\n  const request = captureDetails\n    ? _getRequestInfo(options, hint.input, requestBodySize)\n    : buildSkippedNetworkRequestOrResponse(requestBodySize);\n  const response = await _getResponseInfo(captureDetails, options, hint.response, responseBodySize);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request,\n    response,\n  };\n}\n\nfunction _getRequestInfo(\n  { networkCaptureBodies, networkRequestHeaders }: ReplayNetworkOptions,\n  input: FetchHint['input'] | undefined,\n  requestBodySize?: number,\n): ReplayNetworkRequestOrResponse | undefined {\n  const headers = input ? getRequestHeaders(input, networkRequestHeaders) : {};\n\n  if (!networkCaptureBodies) {\n    return buildNetworkRequestOrResponse(headers, requestBodySize, undefined);\n  }\n\n  // We only want to transmit string or string-like bodies\n  const requestBody = getFetchRequestArgBody(input);\n  const [bodyStr, warning] = getBodyString(requestBody, logger);\n  const data = buildNetworkRequestOrResponse(headers, requestBodySize, bodyStr);\n\n  if (warning) {\n    return mergeWarning(data, warning);\n  }\n\n  return data;\n}\n\n/** Exported only for tests. */\nexport async function _getResponseInfo(\n  captureDetails: boolean,\n  {\n    networkCaptureBodies,\n    networkResponseHeaders,\n  }: Pick<ReplayNetworkOptions, 'networkCaptureBodies' | 'networkResponseHeaders'>,\n  response: Response | undefined,\n  responseBodySize?: number,\n): Promise<ReplayNetworkRequestOrResponse | undefined> {\n  if (!captureDetails && responseBodySize !== undefined) {\n    return buildSkippedNetworkRequestOrResponse(responseBodySize);\n  }\n\n  const headers = response ? getAllHeaders(response.headers, networkResponseHeaders) : {};\n\n  if (!response || (!networkCaptureBodies && responseBodySize !== undefined)) {\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n\n  const [bodyText, warning] = await _parseFetchResponseBody(response);\n  const result = getResponseData(bodyText, {\n    networkCaptureBodies,\n\n    responseBodySize,\n    captureDetails,\n    headers,\n  });\n\n  if (warning) {\n    return mergeWarning(result, warning);\n  }\n\n  return result;\n}\n\nfunction getResponseData(\n  bodyText: string | undefined,\n  {\n    networkCaptureBodies,\n    responseBodySize,\n    captureDetails,\n    headers,\n  }: {\n    captureDetails: boolean;\n    networkCaptureBodies: boolean;\n    responseBodySize: number | undefined;\n    headers: Record<string, string>;\n  },\n): ReplayNetworkRequestOrResponse | undefined {\n  try {\n    const size = bodyText?.length && responseBodySize === undefined ? getBodySize(bodyText) : responseBodySize;\n\n    if (!captureDetails) {\n      return buildSkippedNetworkRequestOrResponse(size);\n    }\n\n    if (networkCaptureBodies) {\n      return buildNetworkRequestOrResponse(headers, size, bodyText);\n    }\n\n    return buildNetworkRequestOrResponse(headers, size, undefined);\n  } catch (error) {\n    DEBUG_BUILD && logger.exception(error, 'Failed to serialize response body');\n    // fallback\n    return buildNetworkRequestOrResponse(headers, responseBodySize, undefined);\n  }\n}\n\nasync function _parseFetchResponseBody(response: Response): Promise<[string | undefined, NetworkMetaWarning?]> {\n  const res = _tryCloneResponse(response);\n\n  if (!res) {\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  try {\n    const text = await _tryGetResponseText(res);\n    return [text];\n  } catch (error) {\n    if (error instanceof Error && error.message.indexOf('Timeout') > -1) {\n      DEBUG_BUILD && logger.warn('Parsing text body from response timed out');\n      return [undefined, 'BODY_PARSE_TIMEOUT'];\n    }\n\n    DEBUG_BUILD && logger.exception(error, 'Failed to get text body from response');\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n}\n\nfunction getAllHeaders(headers: Headers, allowedHeaders: string[]): Record<string, string> {\n  const allHeaders: Record<string, string> = {};\n\n  allowedHeaders.forEach(header => {\n    if (headers.get(header)) {\n      allHeaders[header] = headers.get(header) as string;\n    }\n  });\n\n  return allHeaders;\n}\n\nfunction getRequestHeaders(fetchArgs: unknown[], allowedHeaders: string[]): Record<string, string> {\n  if (fetchArgs.length === 1 && typeof fetchArgs[0] !== 'string') {\n    return getHeadersFromOptions(fetchArgs[0] as Request | RequestInit, allowedHeaders);\n  }\n\n  if (fetchArgs.length === 2) {\n    return getHeadersFromOptions(fetchArgs[1] as Request | RequestInit, allowedHeaders);\n  }\n\n  return {};\n}\n\nfunction getHeadersFromOptions(\n  input: Request | RequestInit | undefined,\n  allowedHeaders: string[],\n): Record<string, string> {\n  if (!input) {\n    return {};\n  }\n\n  const headers = input.headers;\n\n  if (!headers) {\n    return {};\n  }\n\n  if (headers instanceof Headers) {\n    return getAllHeaders(headers, allowedHeaders);\n  }\n\n  // We do not support this, as it is not really documented (anymore?)\n  if (Array.isArray(headers)) {\n    return {};\n  }\n\n  return getAllowedHeaders(headers, allowedHeaders);\n}\n\nfunction _tryCloneResponse(response: Response): Response | void {\n  try {\n    // We have to clone this, as the body can only be read once\n    return response.clone();\n  } catch (error) {\n    // this can throw if the response was already consumed before\n    DEBUG_BUILD && logger.exception(error, 'Failed to clone response body');\n  }\n}\n\n/**\n * Get the response body of a fetch request, or timeout after 500ms.\n * Fetch can return a streaming body, that may not resolve (or not for a long time).\n * If that happens, we rather abort after a short time than keep waiting for this.\n */\nfunction _tryGetResponseText(response: Response): Promise<string | undefined> {\n  return new Promise((resolve, reject) => {\n    const timeout = setTimeout(() => reject(new Error('Timeout while trying to read response body')), 500);\n\n    _getResponseText(response)\n      .then(\n        txt => resolve(txt),\n        reason => reject(reason),\n      )\n      .finally(() => clearTimeout(timeout));\n  });\n}\n\nasync function _getResponseText(response: Response): Promise<string> {\n  // Force this to be a promise, just to be safe\n  // eslint-disable-next-line no-return-await\n  return await response.text();\n}\n","import { SENTRY_XHR_DATA_KEY, getBodyString } from '@sentry-internal/browser-utils';\nimport type { NetworkMetaWarning, XhrHint } from '@sentry-internal/browser-utils';\nimport type { Breadcrumb, XhrBreadcrumbData } from '@sentry/core';\n\nimport { DEBUG_BUILD } from '../../debug-build';\nimport type { ReplayContainer, ReplayNetworkOptions, ReplayNetworkRequestData } from '../../types';\nimport { logger } from '../../util/logger';\nimport { addNetworkBreadcrumb } from './addNetworkBreadcrumb';\nimport {\n  buildNetworkRequestOrResponse,\n  buildSkippedNetworkRequestOrResponse,\n  getAllowedHeaders,\n  getBodySize,\n  makeNetworkReplayBreadcrumb,\n  mergeWarning,\n  parseContentLengthHeader,\n  urlMatches,\n} from './networkUtils';\n\n/**\n * Capture an XHR breadcrumb to a replay.\n * This adds additional data (where appropriate).\n */\nexport async function captureXhrBreadcrumbToReplay(\n  breadcrumb: Breadcrumb & { data: XhrBreadcrumbData },\n  hint: Partial<XhrHint>,\n  options: ReplayNetworkOptions & { replay: ReplayContainer },\n): Promise<void> {\n  try {\n    const data = _prepareXhrData(breadcrumb, hint, options);\n\n    // Create a replay performance entry from this breadcrumb\n    const result = makeNetworkReplayBreadcrumb('resource.xhr', data);\n    addNetworkBreadcrumb(options.replay, result);\n  } catch (error) {\n    DEBUG_BUILD && logger.exception(error, 'Failed to capture xhr breadcrumb');\n  }\n}\n\n/**\n * Enrich a breadcrumb with additional data.\n * This has to be sync & mutate the given breadcrumb,\n * as the breadcrumb is afterwards consumed by other handlers.\n */\nexport function enrichXhrBreadcrumb(\n  breadcrumb: Breadcrumb & { data: XhrBreadcrumbData },\n  hint: Partial<XhrHint>,\n): void {\n  const { xhr, input } = hint;\n\n  if (!xhr) {\n    return;\n  }\n\n  const reqSize = getBodySize(input);\n  const resSize = xhr.getResponseHeader('content-length')\n    ? parseContentLengthHeader(xhr.getResponseHeader('content-length'))\n    : _getBodySize(xhr.response, xhr.responseType);\n\n  if (reqSize !== undefined) {\n    breadcrumb.data.request_body_size = reqSize;\n  }\n  if (resSize !== undefined) {\n    breadcrumb.data.response_body_size = resSize;\n  }\n}\n\nfunction _prepareXhrData(\n  breadcrumb: Breadcrumb & { data: XhrBreadcrumbData },\n  hint: Partial<XhrHint>,\n  options: ReplayNetworkOptions,\n): ReplayNetworkRequestData | null {\n  const now = Date.now();\n  const { startTimestamp = now, endTimestamp = now, input, xhr } = hint;\n\n  const {\n    url,\n    method,\n    status_code: statusCode = 0,\n    request_body_size: requestBodySize,\n    response_body_size: responseBodySize,\n  } = breadcrumb.data;\n\n  if (!url) {\n    return null;\n  }\n\n  if (!xhr || !urlMatches(url, options.networkDetailAllowUrls) || urlMatches(url, options.networkDetailDenyUrls)) {\n    const request = buildSkippedNetworkRequestOrResponse(requestBodySize);\n    const response = buildSkippedNetworkRequestOrResponse(responseBodySize);\n    return {\n      startTimestamp,\n      endTimestamp,\n      url,\n      method,\n      statusCode,\n      request,\n      response,\n    };\n  }\n\n  const xhrInfo = xhr[SENTRY_XHR_DATA_KEY];\n  const networkRequestHeaders = xhrInfo\n    ? getAllowedHeaders(xhrInfo.request_headers, options.networkRequestHeaders)\n    : {};\n  const networkResponseHeaders = getAllowedHeaders(getResponseHeaders(xhr), options.networkResponseHeaders);\n\n  const [requestBody, requestWarning] = options.networkCaptureBodies ? getBodyString(input, logger) : [undefined];\n  const [responseBody, responseWarning] = options.networkCaptureBodies ? _getXhrResponseBody(xhr) : [undefined];\n\n  const request = buildNetworkRequestOrResponse(networkRequestHeaders, requestBodySize, requestBody);\n  const response = buildNetworkRequestOrResponse(networkResponseHeaders, responseBodySize, responseBody);\n\n  return {\n    startTimestamp,\n    endTimestamp,\n    url,\n    method,\n    statusCode,\n    request: requestWarning ? mergeWarning(request, requestWarning) : request,\n    response: responseWarning ? mergeWarning(response, responseWarning) : response,\n  };\n}\n\nfunction getResponseHeaders(xhr: XMLHttpRequest): Record<string, string> {\n  const headers = xhr.getAllResponseHeaders();\n\n  if (!headers) {\n    return {};\n  }\n\n  return headers.split('\\r\\n').reduce((acc: Record<string, string>, line: string) => {\n    const [key, value] = line.split(': ') as [string, string | undefined];\n    if (value) {\n      acc[key.toLowerCase()] = value;\n    }\n    return acc;\n  }, {});\n}\n\nfunction _getXhrResponseBody(xhr: XMLHttpRequest): [string | undefined, NetworkMetaWarning?] {\n  // We collect errors that happen, but only log them if we can't get any response body\n  const errors: unknown[] = [];\n\n  try {\n    return [xhr.responseText];\n  } catch (e) {\n    errors.push(e);\n  }\n\n  // Try to manually parse the response body, if responseText fails\n  try {\n    return _parseXhrResponse(xhr.response, xhr.responseType);\n  } catch (e) {\n    errors.push(e);\n  }\n\n  DEBUG_BUILD && logger.warn('Failed to get xhr response body', ...errors);\n\n  return [undefined];\n}\n\n/**\n * Get the string representation of the XHR response.\n * Based on MDN, these are the possible types of the response:\n * string\n * ArrayBuffer\n * Blob\n * Document\n * POJO\n *\n * Exported only for tests.\n */\nexport function _parseXhrResponse(\n  body: XMLHttpRequest['response'],\n  responseType: XMLHttpRequest['responseType'],\n): [string | undefined, NetworkMetaWarning?] {\n  try {\n    if (typeof body === 'string') {\n      return [body];\n    }\n\n    if (body instanceof Document) {\n      return [body.body.outerHTML];\n    }\n\n    if (responseType === 'json' && body && typeof body === 'object') {\n      return [JSON.stringify(body)];\n    }\n\n    if (!body) {\n      return [undefined];\n    }\n  } catch (error) {\n    DEBUG_BUILD && logger.exception(error, 'Failed to serialize body', body);\n    return [undefined, 'BODY_PARSE_ERROR'];\n  }\n\n  DEBUG_BUILD && logger.info('Skipping network body because of body type', body);\n\n  return [undefined, 'UNPARSEABLE_BODY_TYPE'];\n}\n\nfunction _getBodySize(\n  body: XMLHttpRequest['response'],\n  responseType: XMLHttpRequest['responseType'],\n): number | undefined {\n  try {\n    const bodyStr = responseType === 'json' && body && typeof body === 'object' ? JSON.stringify(body) : body;\n    return getBodySize(bodyStr);\n  } catch {\n    return undefined;\n  }\n}\n","import type { FetchHint, XhrHint } from '@sentry-internal/browser-utils';\nimport { getClient } from '@sentry/core';\nimport type { Breadcrumb, BreadcrumbHint, FetchBreadcrumbData, XhrBreadcrumbData } from '@sentry/core';\n\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { ReplayContainer, ReplayNetworkOptions } from '../types';\nimport { logger } from '../util/logger';\nimport { captureFetchBreadcrumbToReplay, enrichFetchBreadcrumb } from './util/fetchUtils';\nimport { captureXhrBreadcrumbToReplay, enrichXhrBreadcrumb } from './util/xhrUtils';\n\ninterface ExtendedNetworkBreadcrumbsOptions extends ReplayNetworkOptions {\n  replay: ReplayContainer;\n}\n\n/**\n * This method does two things:\n * - It enriches the regular XHR/fetch breadcrumbs with request/response size data\n * - It captures the XHR/fetch breadcrumbs to the replay\n *   (enriching it with further data that is _not_ added to the regular breadcrumbs)\n */\nexport function handleNetworkBreadcrumbs(replay: ReplayContainer): void {\n  const client = getClient();\n\n  try {\n    const {\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    } = replay.getOptions();\n\n    const options: ExtendedNetworkBreadcrumbsOptions = {\n      replay,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders,\n      networkResponseHeaders,\n    };\n\n    if (client) {\n      client.on('beforeAddBreadcrumb', (breadcrumb, hint) => beforeAddNetworkBreadcrumb(options, breadcrumb, hint));\n    }\n  } catch {\n    // Do nothing\n  }\n}\n\n/** just exported for tests */\nexport function beforeAddNetworkBreadcrumb(\n  options: ExtendedNetworkBreadcrumbsOptions,\n  breadcrumb: Breadcrumb,\n  hint?: BreadcrumbHint,\n): void {\n  if (!breadcrumb.data) {\n    return;\n  }\n\n  try {\n    if (_isXhrBreadcrumb(breadcrumb) && _isXhrHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichXhrBreadcrumb(breadcrumb, hint);\n\n      // This call should not reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      captureXhrBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n\n    if (_isFetchBreadcrumb(breadcrumb) && _isFetchHint(hint)) {\n      // This has to be sync, as we need to ensure the breadcrumb is enriched in the same tick\n      // Because the hook runs synchronously, and the breadcrumb is afterwards passed on\n      // So any async mutations to it will not be reflected in the final breadcrumb\n      enrichFetchBreadcrumb(breadcrumb, hint);\n\n      // This call should not reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      captureFetchBreadcrumbToReplay(breadcrumb, hint, options);\n    }\n  } catch (e) {\n    DEBUG_BUILD && logger.exception(e, 'Error when enriching network breadcrumb');\n  }\n}\n\nfunction _isXhrBreadcrumb(breadcrumb: Breadcrumb): breadcrumb is Breadcrumb & { data: XhrBreadcrumbData } {\n  return breadcrumb.category === 'xhr';\n}\n\nfunction _isFetchBreadcrumb(breadcrumb: Breadcrumb): breadcrumb is Breadcrumb & { data: FetchBreadcrumbData } {\n  return breadcrumb.category === 'fetch';\n}\n\nfunction _isXhrHint(hint?: BreadcrumbHint): hint is XhrHint {\n  return hint?.xhr;\n}\n\nfunction _isFetchHint(hint?: BreadcrumbHint): hint is FetchHint {\n  return hint?.response;\n}\n","import {\n  addClickKeypressInstrumentationHandler,\n  addHistoryInstrumentationHandler,\n} from '@sentry-internal/browser-utils';\nimport { addEventProcessor, getClient } from '@sentry/core';\nimport type { DynamicSamplingContext } from '@sentry/core';\n\nimport { handleAfterSendEvent } from '../coreHandlers/handleAfterSendEvent';\nimport { handleBeforeSendEvent } from '../coreHandlers/handleBeforeSendEvent';\nimport { handleBreadcrumbs } from '../coreHandlers/handleBreadcrumbs';\nimport { handleDomListener } from '../coreHandlers/handleDom';\nimport { handleGlobalEventListener } from '../coreHandlers/handleGlobalEvent';\nimport { handleHistorySpanListener } from '../coreHandlers/handleHistory';\nimport { handleNetworkBreadcrumbs } from '../coreHandlers/handleNetworkBreadcrumbs';\nimport type { ReplayContainer } from '../types';\n\n/**\n * Add global listeners that cannot be removed.\n */\nexport function addGlobalListeners(\n  replay: ReplayContainer,\n  { autoFlushOnFeedback }: { autoFlushOnFeedback?: boolean },\n): void {\n  // Listeners from core SDK //\n  const client = getClient();\n\n  addClickKeypressInstrumentationHandler(handleDomListener(replay));\n  addHistoryInstrumentationHandler(handleHistorySpanListener(replay));\n  handleBreadcrumbs(replay);\n  handleNetworkBreadcrumbs(replay);\n\n  // Tag all (non replay) events that get sent to Sentry with the current\n  // replay ID so that we can reference them later in the UI\n  const eventProcessor = handleGlobalEventListener(replay);\n  addEventProcessor(eventProcessor);\n\n  // If a custom client has no hooks yet, we continue to use the \"old\" implementation\n  if (client) {\n    client.on('beforeSendEvent', handleBeforeSendEvent(replay));\n    client.on('afterSendEvent', handleAfterSendEvent(replay));\n    client.on('createDsc', (dsc: DynamicSamplingContext) => {\n      const replayId = replay.getSessionId();\n      // We do not want to set the DSC when in buffer mode, as that means the replay has not been sent (yet)\n      if (replayId && replay.isEnabled() && replay.recordingMode === 'session') {\n        // Ensure to check that the session is still active - it could have expired in the meanwhile\n        const isSessionActive = replay.checkAndHandleExpiredSession();\n        if (isSessionActive) {\n          dsc.replay_id = replayId;\n        }\n      }\n    });\n\n    client.on('spanStart', span => {\n      replay.lastActiveSpan = span;\n    });\n\n    // We may be missing the initial spanStart due to timing issues,\n    // so we capture it on finish again.\n    client.on('spanEnd', span => {\n      replay.lastActiveSpan = span;\n    });\n\n    // We want to attach the replay id to the feedback event\n    client.on('beforeSendFeedback', async (feedbackEvent, options) => {\n      const replayId = replay.getSessionId();\n      if (options?.includeReplay && replay.isEnabled() && replayId && feedbackEvent.contexts?.feedback) {\n        // In case the feedback is sent via API and not through our widget, we want to flush replay\n        if (feedbackEvent.contexts.feedback.source === 'api' && autoFlushOnFeedback) {\n          await replay.flush();\n        }\n        feedbackEvent.contexts.feedback.replay_id = replayId;\n      }\n    });\n\n    if (autoFlushOnFeedback) {\n      client.on('openFeedbackWidget', async () => {\n        await replay.flush();\n      });\n    }\n  }\n}\n","import { WINDOW } from '../constants';\nimport type { AddEventResult, MemoryData, ReplayContainer, ReplayPerformanceEntry } from '../types';\nimport { createPerformanceSpans } from './createPerformanceSpans';\n\ntype ReplayMemoryEntry = ReplayPerformanceEntry<MemoryData> & { data: { memory: MemoryInfo } };\n\ninterface MemoryInfo {\n  jsHeapSizeLimit: number;\n  totalJSHeapSize: number;\n  usedJSHeapSize: number;\n}\n\n/**\n * Create a \"span\" for the total amount of memory being used by JS objects\n * (including v8 internal objects).\n */\nexport async function addMemoryEntry(replay: ReplayContainer): Promise<Array<AddEventResult | null>> {\n  // window.performance.memory is a non-standard API and doesn't work on all browsers, so we try-catch this\n  try {\n    return Promise.all(\n      createPerformanceSpans(replay, [\n        // @ts-expect-error memory doesn't exist on type Performance as the API is non-standard (we check that it exists above)\n        createMemoryEntry(WINDOW.performance.memory),\n      ]),\n    );\n  } catch (error) {\n    // Do nothing\n    return [];\n  }\n}\n\nfunction createMemoryEntry(memoryEntry: MemoryInfo): ReplayMemoryEntry {\n  const { jsHeapSizeLimit, totalJSHeapSize, usedJSHeapSize } = memoryEntry;\n  // we don't want to use `getAbsoluteTime` because it adds the event time to the\n  // time origin, so we get the current timestamp instead\n  const time = Date.now() / 1000;\n  return {\n    type: 'memory',\n    name: 'memory',\n    start: time,\n    end: time,\n    data: {\n      memory: {\n        jsHeapSizeLimit,\n        totalJSHeapSize,\n        usedJSHeapSize,\n      },\n    },\n  };\n}\n","import { setTimeout } from '@sentry-internal/browser-utils';\n\ntype DebouncedCallback = {\n  (): void | unknown;\n  flush: () => void | unknown;\n  cancel: () => void;\n};\ntype CallbackFunction = () => unknown;\ntype DebounceOptions = { maxWait?: number };\n\n/**\n * Heavily simplified debounce function based on lodash.debounce.\n *\n * This function takes a callback function (@param fun) and delays its invocation\n * by @param wait milliseconds. Optionally, a maxWait can be specified in @param options,\n * which ensures that the callback is invoked at least once after the specified max. wait time.\n *\n * @param func the function whose invocation is to be debounced\n * @param wait the minimum time until the function is invoked after it was called once\n * @param options the options object, which can contain the `maxWait` property\n *\n * @returns the debounced version of the function, which needs to be called at least once to start the\n *          debouncing process. Subsequent calls will reset the debouncing timer and, in case @paramfunc\n *          was already invoked in the meantime, return @param func's return value.\n *          The debounced function has two additional properties:\n *          - `flush`: Invokes the debounced function immediately and returns its return value\n *          - `cancel`: Cancels the debouncing process and resets the debouncing timer\n */\nexport function debounce(func: CallbackFunction, wait: number, options?: DebounceOptions): DebouncedCallback {\n  let callbackReturnValue: unknown;\n\n  let timerId: ReturnType<typeof setTimeout> | undefined;\n  let maxTimerId: ReturnType<typeof setTimeout> | undefined;\n\n  const maxWait = options?.maxWait ? Math.max(options.maxWait, wait) : 0;\n\n  function invokeFunc(): unknown {\n    cancelTimers();\n    callbackReturnValue = func();\n    return callbackReturnValue;\n  }\n\n  function cancelTimers(): void {\n    timerId !== undefined && clearTimeout(timerId);\n    maxTimerId !== undefined && clearTimeout(maxTimerId);\n    timerId = maxTimerId = undefined;\n  }\n\n  function flush(): unknown {\n    if (timerId !== undefined || maxTimerId !== undefined) {\n      return invokeFunc();\n    }\n    return callbackReturnValue;\n  }\n\n  function debounced(): unknown {\n    if (timerId) {\n      clearTimeout(timerId);\n    }\n    timerId = setTimeout(invokeFunc, wait);\n\n    if (maxWait && maxTimerId === undefined) {\n      maxTimerId = setTimeout(invokeFunc, maxWait);\n    }\n\n    return callbackReturnValue;\n  }\n\n  debounced.cancel = cancelTimers;\n  debounced.flush = flush;\n  return debounced;\n}\n","import { GLOBAL_OBJ } from '@sentry/core';\n\nconst NAVIGATOR = GLOBAL_OBJ.navigator;\n\n/**\n *  Disable sampling mousemove events on iOS browsers as this can cause blocking the main thread\n *  https://github.com/getsentry/sentry-javascript/issues/14534\n */\nexport function getRecordingSamplingOptions(): Partial<{ sampling: { mousemove: boolean } }> {\n  if (\n    /iPhone|iPad|iPod/i.test(NAVIGATOR?.userAgent ?? '') ||\n    (/Macintosh/i.test(NAVIGATOR?.userAgent ?? '') && NAVIGATOR?.maxTouchPoints && NAVIGATOR?.maxTouchPoints > 1)\n  ) {\n    return {\n      sampling: {\n        mousemove: false,\n      },\n    };\n  }\n\n  return {};\n}\n","import { EventType } from '@sentry-internal/rrweb';\n\nimport { updateClickDetectorForRecordingEvent } from '../coreHandlers/handleClick';\nimport { DEBUG_BUILD } from '../debug-build';\nimport { saveSession } from '../session/saveSession';\nimport type { RecordingEvent, ReplayContainer, ReplayOptionFrameEvent } from '../types';\nimport { addEventSync } from './addEvent';\nimport { logger } from './logger';\n\ntype RecordingEmitCallback = (event: RecordingEvent, isCheckout?: boolean) => void;\n\n/**\n * Handler for recording events.\n *\n * Adds to event buffer, and has varying flushing behaviors if the event was a checkout.\n */\nexport function getHandleRecordingEmit(replay: ReplayContainer): RecordingEmitCallback {\n  let hadFirstEvent = false;\n\n  return (event: RecordingEvent, _isCheckout?: boolean) => {\n    // If this is false, it means session is expired, create and a new session and wait for checkout\n    if (!replay.checkAndHandleExpiredSession()) {\n      DEBUG_BUILD && logger.warn('Received replay event after session expired.');\n\n      return;\n    }\n\n    // `_isCheckout` is only set when the checkout is due to `checkoutEveryNms`\n    // We also want to treat the first event as a checkout, so we handle this specifically here\n    const isCheckout = _isCheckout || !hadFirstEvent;\n    hadFirstEvent = true;\n\n    if (replay.clickDetector) {\n      updateClickDetectorForRecordingEvent(replay.clickDetector, event);\n    }\n\n    // The handler returns `true` if we do not want to trigger debounced flush, `false` if we want to debounce flush.\n    replay.addUpdate(() => {\n      // The session is always started immediately on pageload/init, but for\n      // error-only replays, it should reflect the most recent checkout\n      // when an error occurs. Clear any state that happens before this current\n      // checkout. This needs to happen before `addEvent()` which updates state\n      // dependent on this reset.\n      if (replay.recordingMode === 'buffer' && isCheckout) {\n        replay.setInitialState();\n      }\n\n      // If the event is not added (e.g. due to being paused, disabled, or out of the max replay duration),\n      // Skip all further steps\n      if (!addEventSync(replay, event, isCheckout)) {\n        // Return true to skip scheduling a debounced flush\n        return true;\n      }\n\n      // Different behavior for full snapshots (type=2), ignore other event types\n      // See https://github.com/rrweb-io/rrweb/blob/d8f9290ca496712aa1e7d472549480c4e7876594/packages/rrweb/src/types.ts#L16\n      if (!isCheckout) {\n        return false;\n      }\n\n      const session = replay.session;\n\n      // Additionally, create a meta event that will capture certain SDK settings.\n      // In order to handle buffer mode, this needs to either be done when we\n      // receive checkout events or at flush time. We have an experimental mode\n      // to perform multiple checkouts a session (the idea is to improve\n      // seeking during playback), so also only include if segmentId is 0\n      // (handled in `addSettingsEvent`).\n      //\n      // `isCheckout` is always true, but want to be explicit that it should\n      // only be added for checkouts\n      addSettingsEvent(replay, isCheckout);\n\n      // When in buffer mode, make sure we adjust the session started date to the current earliest event of the buffer\n      // this should usually be the timestamp of the checkout event, but to be safe...\n      if (replay.recordingMode === 'buffer' && session && replay.eventBuffer) {\n        const earliestEvent = replay.eventBuffer.getEarliestTimestamp();\n        if (earliestEvent) {\n          DEBUG_BUILD &&\n            logger.info(`Updating session start time to earliest event in buffer to ${new Date(earliestEvent)}`);\n\n          session.started = earliestEvent;\n\n          if (replay.getOptions().stickySession) {\n            saveSession(session);\n          }\n        }\n      }\n\n      // If there is a previousSessionId after a full snapshot occurs, then\n      // the replay session was started due to session expiration. The new session\n      // is started before triggering a new checkout and contains the id\n      // of the previous session. Do not immediately flush in this case\n      // to avoid capturing only the checkout and instead the replay will\n      // be captured if they perform any follow-up actions.\n      if (session?.previousSessionId) {\n        return true;\n      }\n\n      if (replay.recordingMode === 'session') {\n        // If the full snapshot is due to an initial load, we will not have\n        // a previous session ID. In this case, we want to buffer events\n        // for a set amount of time before flushing. This can help avoid\n        // capturing replays of users that immediately close the window.\n\n        // This should never reject\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\n        void replay.flush();\n      }\n\n      return true;\n    });\n  };\n}\n\n/**\n * Exported for tests\n */\nexport function createOptionsEvent(replay: ReplayContainer): ReplayOptionFrameEvent {\n  const options = replay.getOptions();\n  return {\n    type: EventType.Custom,\n    timestamp: Date.now(),\n    data: {\n      tag: 'options',\n      payload: {\n        shouldRecordCanvas: replay.isRecordingCanvas(),\n        sessionSampleRate: options.sessionSampleRate,\n        errorSampleRate: options.errorSampleRate,\n        useCompressionOption: options.useCompression,\n        blockAllMedia: options.blockAllMedia,\n        maskAllText: options.maskAllText,\n        maskAllInputs: options.maskAllInputs,\n        useCompression: replay.eventBuffer ? replay.eventBuffer.type === 'worker' : false,\n        networkDetailHasUrls: options.networkDetailAllowUrls.length > 0,\n        networkCaptureBodies: options.networkCaptureBodies,\n        networkRequestHasHeaders: options.networkRequestHeaders.length > 0,\n        networkResponseHasHeaders: options.networkResponseHeaders.length > 0,\n      },\n    },\n  };\n}\n\n/**\n * Add a \"meta\" event that contains a simplified view on current configuration\n * options. This should only be included on the first segment of a recording.\n */\nfunction addSettingsEvent(replay: ReplayContainer, isCheckout?: boolean): void {\n  // Only need to add this event when sending the first segment\n  if (!isCheckout || !replay.session || replay.session.segmentId !== 0) {\n    return;\n  }\n\n  addEventSync(replay, createOptionsEvent(replay), false);\n}\n","import { createEnvelope, createEventEnvelopeHeaders, getSdkMetadataForEnvelopeHeader } from '@sentry/core';\nimport type { DsnComponents, ReplayEnvelope, ReplayEvent, ReplayRecordingData } from '@sentry/core';\n\n/**\n * Create a replay envelope ready to be sent.\n * This includes both the replay event, as well as the recording data.\n */\nexport function createReplayEnvelope(\n  replayEvent: ReplayEvent,\n  recordingData: ReplayRecordingData,\n  dsn: DsnComponents,\n  tunnel?: string,\n): ReplayEnvelope {\n  return createEnvelope<ReplayEnvelope>(\n    createEventEnvelopeHeaders(replayEvent, getSdkMetadataForEnvelopeHeader(replayEvent), tunnel, dsn),\n    [\n      [{ type: 'replay_event' }, replayEvent],\n      [\n        {\n          type: 'replay_recording',\n          // If string then we need to encode to UTF8, otherwise will have\n          // wrong size. TextEncoder has similar browser support to\n          // MutationObserver, although it does not accept IE11.\n          length:\n            typeof recordingData === 'string' ? new TextEncoder().encode(recordingData).length : recordingData.length,\n        },\n        recordingData,\n      ],\n    ],\n  );\n}\n","import type { ReplayRecordingData } from '@sentry/core';\n\n/**\n * Prepare the recording data ready to be sent.\n */\nexport function prepareRecordingData({\n  recordingData,\n  headers,\n}: {\n  recordingData: ReplayRecordingData;\n  headers: Record<string, unknown>;\n}): ReplayRecordingData {\n  let payloadWithSequence;\n\n  // XXX: newline is needed to separate sequence id from events\n  const replayHeaders = `${JSON.stringify(headers)}\n`;\n\n  if (typeof recordingData === 'string') {\n    payloadWithSequence = `${replayHeaders}${recordingData}`;\n  } else {\n    const enc = new TextEncoder();\n    // XXX: newline is needed to separate sequence id from events\n    const sequence = enc.encode(replayHeaders);\n    // Merge the two Uint8Arrays\n    payloadWithSequence = new Uint8Array(sequence.length + recordingData.length);\n    payloadWithSequence.set(sequence);\n    payloadWithSequence.set(recordingData, sequence.length);\n  }\n\n  return payloadWithSequence;\n}\n","import { getIsolationScope, prepareEvent } from '@sentry/core';\nimport type { Client, EventHint, ReplayEvent, Scope } from '@sentry/core';\n\n/**\n * Prepare a replay event & enrich it with the SDK metadata.\n */\nexport async function prepareReplayEvent({\n  client,\n  scope,\n  replayId: event_id,\n  event,\n}: {\n  client: Client;\n  scope: Scope;\n  replayId: string;\n  event: ReplayEvent;\n}): Promise<ReplayEvent | null> {\n  const integrations =\n    typeof client['_integrations'] === 'object' &&\n    client['_integrations'] !== null &&\n    !Array.isArray(client['_integrations'])\n      ? Object.keys(client['_integrations'])\n      : undefined;\n\n  const eventHint: EventHint = { event_id, integrations };\n\n  client.emit('preprocessEvent', event, eventHint);\n\n  const preparedEvent = (await prepareEvent(\n    client.getOptions(),\n    event,\n    eventHint,\n    scope,\n    client,\n    getIsolationScope(),\n  )) as ReplayEvent | null;\n\n  // If e.g. a global event processor returned null\n  if (!preparedEvent) {\n    return null;\n  }\n\n  client.emit('postprocessEvent', preparedEvent, eventHint);\n\n  // This normally happens in browser client \"_prepareEvent\"\n  // but since we do not use this private method from the client, but rather the plain import\n  // we need to do this manually.\n  preparedEvent.platform = preparedEvent.platform || 'javascript';\n\n  // extract the SDK name because `client._prepareEvent` doesn't add it to the event\n  const metadata = client.getSdkMetadata();\n  const { name, version } = metadata?.sdk || {};\n\n  preparedEvent.sdk = {\n    ...preparedEvent.sdk,\n    name: name || 'sentry.javascript.unknown',\n    version: version || '0.0.0',\n  };\n\n  return preparedEvent;\n}\n","import type { RateLimits, ReplayEvent, TransportMakeRequestResponse } from '@sentry/core';\nimport { getClient, getCurrentScope, isRateLimited, resolvedSyncPromise, updateRateLimits } from '@sentry/core';\nimport { REPLAY_EVENT_NAME, UNABLE_TO_SEND_REPLAY } from '../constants';\nimport { DEBUG_BUILD } from '../debug-build';\nimport type { SendReplayData } from '../types';\nimport { createReplayEnvelope } from './createReplayEnvelope';\nimport { logger } from './logger';\nimport { prepareRecordingData } from './prepareRecordingData';\nimport { prepareReplayEvent } from './prepareReplayEvent';\n\n/**\n * Send replay attachment using `fetch()`\n */\nexport async function sendReplayRequest({\n  recordingData,\n  replayId,\n  segmentId: segment_id,\n  eventContext,\n  timestamp,\n  session,\n}: SendReplayData): Promise<TransportMakeRequestResponse> {\n  const preparedRecordingData = prepareRecordingData({\n    recordingData,\n    headers: {\n      segment_id,\n    },\n  });\n\n  const { urls, errorIds, traceIds, initialTimestamp } = eventContext;\n\n  const client = getClient();\n  const scope = getCurrentScope();\n  const transport = client?.getTransport();\n  const dsn = client?.getDsn();\n\n  if (!client || !transport || !dsn || !session.sampled) {\n    return resolvedSyncPromise({});\n  }\n\n  const baseEvent: ReplayEvent = {\n    type: REPLAY_EVENT_NAME,\n    replay_start_timestamp: initialTimestamp / 1000,\n    timestamp: timestamp / 1000,\n    error_ids: errorIds,\n    trace_ids: traceIds,\n    urls,\n    replay_id: replayId,\n    segment_id,\n    replay_type: session.sampled,\n  };\n\n  const replayEvent = await prepareReplayEvent({ scope, client, replayId, event: baseEvent });\n\n  if (!replayEvent) {\n    // Taken from baseclient's `_processEvent` method, where this is handled for errors/transactions\n    client.recordDroppedEvent('event_processor', 'replay');\n    DEBUG_BUILD && logger.info('An event processor returned `null`, will not send event.');\n    return resolvedSyncPromise({});\n  }\n\n  /*\n  For reference, the fully built event looks something like this:\n  {\n      \"type\": \"replay_event\",\n      \"timestamp\": 1670837008.634,\n      \"error_ids\": [\n          \"errorId\"\n      ],\n      \"trace_ids\": [\n          \"traceId\"\n      ],\n      \"urls\": [\n          \"https://example.com\"\n      ],\n      \"replay_id\": \"eventId\",\n      \"segment_id\": 3,\n      \"replay_type\": \"error\",\n      \"platform\": \"javascript\",\n      \"event_id\": \"eventId\",\n      \"environment\": \"production\",\n      \"sdk\": {\n          \"integrations\": [\n              \"BrowserTracing\",\n              \"Replay\"\n          ],\n          \"name\": \"sentry.javascript.browser\",\n          \"version\": \"7.25.0\"\n      },\n      \"sdkProcessingMetadata\": {},\n      \"contexts\": {\n      },\n  }\n  */\n\n  // Prevent this data (which, if it exists, was used in earlier steps in the processing pipeline) from being sent to\n  // sentry. (Note: Our use of this property comes and goes with whatever we might be debugging, whatever hacks we may\n  // have temporarily added, etc. Even if we don't happen to be using it at some point in the future, let's not get rid\n  // of this `delete`, lest we miss putting it back in the next time the property is in use.)\n  delete replayEvent.sdkProcessingMetadata;\n\n  const envelope = createReplayEnvelope(replayEvent, preparedRecordingData, dsn, client.getOptions().tunnel);\n\n  let response: TransportMakeRequestResponse;\n\n  try {\n    response = await transport.send(envelope);\n  } catch (err) {\n    const error = new Error(UNABLE_TO_SEND_REPLAY);\n\n    try {\n      // In case browsers don't allow this property to be writable\n      // @ts-expect-error This needs lib es2022 and newer\n      error.cause = err;\n    } catch {\n      // nothing to do\n    }\n    throw error;\n  }\n\n  // If the status code is invalid, we want to immediately stop & not retry\n  if (typeof response.statusCode === 'number' && (response.statusCode < 200 || response.statusCode >= 300)) {\n    throw new TransportStatusCodeError(response.statusCode);\n  }\n\n  const rateLimits = updateRateLimits({}, response);\n  if (isRateLimited(rateLimits, 'replay')) {\n    throw new RateLimitError(rateLimits);\n  }\n\n  return response;\n}\n\n/**\n * This error indicates that the transport returned an invalid status code.\n */\nexport class TransportStatusCodeError extends Error {\n  public constructor(statusCode: number) {\n    super(`Transport returned status code ${statusCode}`);\n  }\n}\n\n/**\n * This error indicates that we hit a rate limit API error.\n */\nexport class RateLimitError extends Error {\n  public rateLimits: RateLimits;\n\n  public constructor(rateLimits: RateLimits) {\n    super('Rate limit hit');\n    this.rateLimits = rateLimits;\n  }\n}\n","import { setTimeout } from '@sentry-internal/browser-utils';\nimport { setContext } from '@sentry/core';\n\nimport { RETRY_BASE_INTERVAL, RETRY_MAX_COUNT, UNABLE_TO_SEND_REPLAY } from '../constants';\nimport type { SendReplayData } from '../types';\nimport { RateLimitError, TransportStatusCodeError, sendReplayRequest } from './sendReplayRequest';\n\n/**\n * Finalize and send the current replay event to Sentry\n */\nexport async function sendReplay(\n  replayData: SendReplayData,\n  retryConfig = {\n    count: 0,\n    interval: RETRY_BASE_INTERVAL,\n  },\n): Promise<unknown> {\n  const { recordingData, onError } = replayData;\n\n  // short circuit if there's no events to upload (this shouldn't happen as _runFlush makes this check)\n  if (!recordingData.length) {\n    return;\n  }\n\n  try {\n    await sendReplayRequest(replayData);\n    return true;\n  } catch (err) {\n    if (err instanceof TransportStatusCodeError || err instanceof RateLimitError) {\n      throw err;\n    }\n\n    // Capture error for every failed replay\n    setContext('Replays', {\n      _retryCount: retryConfig.count,\n    });\n\n    if (onError) {\n      onError(err);\n    }\n\n    // If an error happened here, it's likely that uploading the attachment\n    // failed, we'll can retry with the same events payload\n    if (retryConfig.count >= RETRY_MAX_COUNT) {\n      const error = new Error(`${UNABLE_TO_SEND_REPLAY} - max retries exceeded`);\n\n      try {\n        // In case browsers don't allow this property to be writable\n        // @ts-expect-error This needs lib es2022 and newer\n        error.cause = err;\n      } catch {\n        // nothing to do\n      }\n\n      throw error;\n    }\n\n    // will retry in intervals of 5, 10, 30\n    retryConfig.interval *= ++retryConfig.count;\n\n    return new Promise((resolve, reject) => {\n      setTimeout(async () => {\n        try {\n          await sendReplay(replayData, retryConfig);\n          resolve(true);\n        } catch (err) {\n          reject(err);\n        }\n      }, retryConfig.interval);\n    });\n  }\n}\n","export const THROTTLED = '__THROTTLED';\nexport const SKIPPED = '__SKIPPED';\n\n/**\n * Create a throttled function off a given function.\n * When calling the throttled function, it will call the original function only\n * if it hasn't been called more than `maxCount` times in the last `durationSeconds`.\n *\n * Returns `THROTTLED` if throttled for the first time, after that `SKIPPED`,\n * or else the return value of the original function.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function throttle<T extends (...rest: any[]) => any>(\n  fn: T,\n  maxCount: number,\n  durationSeconds: number,\n): (...rest: Parameters<T>) => ReturnType<T> | typeof THROTTLED | typeof SKIPPED {\n  const counter = new Map<number, number>();\n\n  const _cleanup = (now: number): void => {\n    const threshold = now - durationSeconds;\n    counter.forEach((_value, key) => {\n      if (key < threshold) {\n        counter.delete(key);\n      }\n    });\n  };\n\n  const _getTotalCount = (): number => {\n    return [...counter.values()].reduce((a, b) => a + b, 0);\n  };\n\n  let isThrottled = false;\n\n  return (...rest: Parameters<T>): ReturnType<T> | typeof THROTTLED | typeof SKIPPED => {\n    // Date in second-precision, which we use as basis for the throttling\n    const now = Math.floor(Date.now() / 1000);\n\n    // First, make sure to delete any old entries\n    _cleanup(now);\n\n    // If already over limit, do nothing\n    if (_getTotalCount() >= maxCount) {\n      const wasThrottled = isThrottled;\n      isThrottled = true;\n      return wasThrottled ? SKIPPED : THROTTLED;\n    }\n\n    isThrottled = false;\n    const count = counter.get(now) || 0;\n    counter.set(now, count + 1);\n\n    return fn(...rest);\n  };\n}\n","/* eslint-disable max-lines */ // TODO: We might want to split this file up\nimport { EventType, record } from '@sentry-internal/rrweb';\nimport type { ReplayRecordingMode, Span } from '@sentry/core';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, getActiveSpan, getClient, getRootSpan, spanToJSON } from '@sentry/core';\nimport {\n  BUFFER_CHECKOUT_TIME,\n  SESSION_IDLE_EXPIRE_DURATION,\n  SESSION_IDLE_PAUSE_DURATION,\n  SLOW_CLICK_SCROLL_TIMEOUT,\n  SLOW_CLICK_THRESHOLD,\n  WINDOW,\n} from './constants';\nimport { ClickDetector } from './coreHandlers/handleClick';\nimport { handleKeyboardEvent } from './coreHandlers/handleKeyboardEvent';\nimport { setupPerformanceObserver } from './coreHandlers/performanceObserver';\nimport { DEBUG_BUILD } from './debug-build';\nimport { createEventBuffer } from './eventBuffer';\nimport { clearSession } from './session/clearSession';\nimport { loadOrCreateSession } from './session/loadOrCreateSession';\nimport { saveSession } from './session/saveSession';\nimport { shouldRefreshSession } from './session/shouldRefreshSession';\nimport type {\n  AddEventResult,\n  AddUpdateCallback,\n  AllPerformanceEntry,\n  AllPerformanceEntryData,\n  EventBuffer,\n  InternalEventContext,\n  PopEventContext,\n  RecordingEvent,\n  RecordingOptions,\n  ReplayBreadcrumbFrame,\n  ReplayCanvasIntegrationOptions,\n  ReplayContainer as ReplayContainerInterface,\n  ReplayPerformanceEntry,\n  ReplayPluginOptions,\n  SendBufferedReplayOptions,\n  Session,\n  SlowClickConfig,\n  Timeouts,\n} from './types';\nimport { ReplayEventTypeCustom } from './types';\nimport { addEvent, addEventSync } from './util/addEvent';\nimport { addGlobalListeners } from './util/addGlobalListeners';\nimport { addMemoryEntry } from './util/addMemoryEntry';\nimport { createBreadcrumb } from './util/createBreadcrumb';\nimport { createPerformanceEntries } from './util/createPerformanceEntries';\nimport { createPerformanceSpans } from './util/createPerformanceSpans';\nimport { debounce } from './util/debounce';\nimport { getRecordingSamplingOptions } from './util/getRecordingSamplingOptions';\nimport { getHandleRecordingEmit } from './util/handleRecordingEmit';\nimport { isExpired } from './util/isExpired';\nimport { isSessionExpired } from './util/isSessionExpired';\nimport { logger } from './util/logger';\nimport { resetReplayIdOnDynamicSamplingContext } from './util/resetReplayIdOnDynamicSamplingContext';\nimport { sendReplay } from './util/sendReplay';\nimport { RateLimitError } from './util/sendReplayRequest';\nimport type { SKIPPED } from './util/throttle';\nimport { THROTTLED, throttle } from './util/throttle';\n\n/**\n * The main replay container class, which holds all the state and methods for recording and sending replays.\n */\nexport class ReplayContainer implements ReplayContainerInterface {\n  public eventBuffer: EventBuffer | null;\n\n  public performanceEntries: AllPerformanceEntry[];\n\n  public replayPerformanceEntries: ReplayPerformanceEntry<AllPerformanceEntryData>[];\n\n  public session: Session | undefined;\n\n  public clickDetector: ClickDetector | undefined;\n\n  /**\n   * Recording can happen in one of two modes:\n   *   - session: Record the whole session, sending it continuously\n   *   - buffer: Always keep the last 60s of recording, requires:\n   *     - having replaysOnErrorSampleRate > 0 to capture replay when an error occurs\n   *     - or calling `flush()` to send the replay\n   */\n  public recordingMode: ReplayRecordingMode;\n\n  /**\n   * The current or last active span.\n   * This is only available when performance is enabled.\n   */\n  public lastActiveSpan?: Span;\n\n  /**\n   * These are here so we can overwrite them in tests etc.\n   * @hidden\n   */\n  public readonly timeouts: Timeouts;\n\n  /** The replay has to be manually started, because no sample rate (neither session or error) was provided. */\n  private _requiresManualStart: boolean;\n\n  private _throttledAddEvent: (\n    event: RecordingEvent,\n    isCheckout?: boolean,\n  ) => typeof THROTTLED | typeof SKIPPED | Promise<AddEventResult | null>;\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n  private readonly _recordingOptions: RecordingOptions;\n\n  private readonly _options: ReplayPluginOptions;\n\n  private _performanceCleanupCallback?: () => void;\n\n  private _debouncedFlush: ReturnType<typeof debounce>;\n  private _flushLock: Promise<unknown> | undefined;\n\n  /**\n   * Timestamp of the last user activity. This lives across sessions.\n   */\n  private _lastActivity: number;\n\n  /**\n   * Is the integration currently active?\n   */\n  private _isEnabled: boolean;\n\n  /**\n   * Paused is a state where:\n   * - DOM Recording is not listening at all\n   * - Nothing will be added to event buffer (e.g. core SDK events)\n   */\n  private _isPaused: boolean;\n\n  /**\n   * Have we attached listeners to the core SDK?\n   * Note we have to track this as there is no way to remove instrumentation handlers.\n   */\n  private _hasInitializedCoreListeners: boolean;\n\n  /**\n   * Function to stop recording\n   */\n  private _stopRecording: ReturnType<typeof record> | undefined;\n\n  private _context: InternalEventContext;\n\n  /**\n   * Internal use for canvas recording options\n   */\n  private _canvas: ReplayCanvasIntegrationOptions | undefined;\n\n  /**\n   * Handle when visibility of the page content changes. Opening a new tab will\n   * cause the state to change to hidden because of content of current page will\n   * be hidden. Likewise, moving a different window to cover the contents of the\n   * page will also trigger a change to a hidden state.\n   */\n  private _handleVisibilityChange: () => void;\n\n  /**\n   * Handle when page is blurred\n   */\n  private _handleWindowBlur: () => void;\n\n  /**\n   * Handle when page is focused\n   */\n  private _handleWindowFocus: () => void;\n\n  /** Ensure page remains active when a key is pressed. */\n  private _handleKeyboardEvent: (event: KeyboardEvent) => void;\n\n  public constructor({\n    options,\n    recordingOptions,\n  }: {\n    options: ReplayPluginOptions;\n    recordingOptions: RecordingOptions;\n  }) {\n    this.eventBuffer = null;\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n    this.recordingMode = 'session';\n    this.timeouts = {\n      sessionIdlePause: SESSION_IDLE_PAUSE_DURATION,\n      sessionIdleExpire: SESSION_IDLE_EXPIRE_DURATION,\n    } as const;\n    this._lastActivity = Date.now();\n    this._isEnabled = false;\n    this._isPaused = false;\n    this._requiresManualStart = false;\n    this._hasInitializedCoreListeners = false;\n    this._context = {\n      errorIds: new Set(),\n      traceIds: new Set(),\n      urls: [],\n      initialTimestamp: Date.now(),\n      initialUrl: '',\n    };\n\n    this._recordingOptions = recordingOptions;\n    this._options = options;\n\n    this._debouncedFlush = debounce(() => this._flush(), this._options.flushMinDelay, {\n      maxWait: this._options.flushMaxDelay,\n    });\n\n    this._throttledAddEvent = throttle(\n      (event: RecordingEvent, isCheckout?: boolean) => addEvent(this, event, isCheckout),\n      // Max 300 events...\n      300,\n      // ... per 5s\n      5,\n    );\n\n    const { slowClickTimeout, slowClickIgnoreSelectors } = this.getOptions();\n\n    const slowClickConfig: SlowClickConfig | undefined = slowClickTimeout\n      ? {\n          threshold: Math.min(SLOW_CLICK_THRESHOLD, slowClickTimeout),\n          timeout: slowClickTimeout,\n          scrollTimeout: SLOW_CLICK_SCROLL_TIMEOUT,\n          ignoreSelector: slowClickIgnoreSelectors ? slowClickIgnoreSelectors.join(',') : '',\n        }\n      : undefined;\n\n    if (slowClickConfig) {\n      this.clickDetector = new ClickDetector(this, slowClickConfig);\n    }\n\n    // Configure replay logger w/ experimental options\n    if (DEBUG_BUILD) {\n      const experiments = options._experiments;\n      logger.setConfig({\n        captureExceptions: !!experiments.captureExceptions,\n        traceInternals: !!experiments.traceInternals,\n      });\n    }\n\n    // We set these handler properties as class properties, to make binding/unbinding them easier\n    this._handleVisibilityChange = () => {\n      if (WINDOW.document.visibilityState === 'visible') {\n        this._doChangeToForegroundTasks();\n      } else {\n        this._doChangeToBackgroundTasks();\n      }\n    };\n\n    /**\n     * Handle when page is blurred\n     */\n    this._handleWindowBlur = () => {\n      const breadcrumb = createBreadcrumb({\n        category: 'ui.blur',\n      });\n\n      // Do not count blur as a user action -- it's part of the process of them\n      // leaving the page\n      this._doChangeToBackgroundTasks(breadcrumb);\n    };\n\n    this._handleWindowFocus = () => {\n      const breadcrumb = createBreadcrumb({\n        category: 'ui.focus',\n      });\n\n      // Do not count focus as a user action -- instead wait until they focus and\n      // interactive with page\n      this._doChangeToForegroundTasks(breadcrumb);\n    };\n\n    /** Ensure page remains active when a key is pressed. */\n    this._handleKeyboardEvent = (event: KeyboardEvent) => {\n      handleKeyboardEvent(this, event);\n    };\n  }\n\n  /** Get the event context. */\n  public getContext(): InternalEventContext {\n    return this._context;\n  }\n\n  /** If recording is currently enabled. */\n  public isEnabled(): boolean {\n    return this._isEnabled;\n  }\n\n  /** If recording is currently paused. */\n  public isPaused(): boolean {\n    return this._isPaused;\n  }\n\n  /**\n   * Determine if canvas recording is enabled\n   */\n  public isRecordingCanvas(): boolean {\n    return Boolean(this._canvas);\n  }\n\n  /** Get the replay integration options. */\n  public getOptions(): ReplayPluginOptions {\n    return this._options;\n  }\n\n  /** A wrapper to conditionally capture exceptions. */\n  public handleException(error: unknown): void {\n    DEBUG_BUILD && logger.exception(error);\n    if (this._options.onError) {\n      this._options.onError(error);\n    }\n  }\n\n  /**\n   * Initializes the plugin based on sampling configuration. Should not be\n   * called outside of constructor.\n   */\n  public initializeSampling(previousSessionId?: string): void {\n    const { errorSampleRate, sessionSampleRate } = this._options;\n\n    // If neither sample rate is > 0, then do nothing - user will need to call one of\n    // `start()` or `startBuffering` themselves.\n    const requiresManualStart = errorSampleRate <= 0 && sessionSampleRate <= 0;\n\n    this._requiresManualStart = requiresManualStart;\n\n    if (requiresManualStart) {\n      return;\n    }\n\n    // Otherwise if there is _any_ sample rate set, try to load an existing\n    // session, or create a new one.\n    this._initializeSessionForSampling(previousSessionId);\n\n    if (!this.session) {\n      // This should not happen, something wrong has occurred\n      DEBUG_BUILD && logger.exception(new Error('Unable to initialize and create session'));\n      return;\n    }\n\n    if (this.session.sampled === false) {\n      // This should only occur if `errorSampleRate` is 0 and was unsampled for\n      // session-based replay. In this case there is nothing to do.\n      return;\n    }\n\n    // If segmentId > 0, it means we've previously already captured this session\n    // In this case, we still want to continue in `session` recording mode\n    this.recordingMode = this.session.sampled === 'buffer' && this.session.segmentId === 0 ? 'buffer' : 'session';\n\n    DEBUG_BUILD && logger.infoTick(`Starting replay in ${this.recordingMode} mode`);\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will log a message if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * _performanceObserver, Recording, Sentry SDK, etc)\n   */\n  public start(): void {\n    if (this._isEnabled && this.recordingMode === 'session') {\n      DEBUG_BUILD && logger.info('Recording is already in progress');\n      return;\n    }\n\n    if (this._isEnabled && this.recordingMode === 'buffer') {\n      DEBUG_BUILD && logger.info('Buffering is in progress, call `flush()` to save the replay');\n      return;\n    }\n\n    DEBUG_BUILD && logger.infoTick('Starting replay in session mode');\n\n    // Required as user activity is initially set in\n    // constructor, so if `start()` is called after\n    // session idle expiration, a replay will not be\n    // created due to an idle timeout.\n    this._updateUserActivity();\n\n    const session = loadOrCreateSession(\n      {\n        maxReplayDuration: this._options.maxReplayDuration,\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n      },\n      {\n        stickySession: this._options.stickySession,\n        // This is intentional: create a new session-based replay when calling `start()`\n        sessionSampleRate: 1,\n        allowBuffering: false,\n      },\n    );\n\n    this.session = session;\n\n    this._initializeRecording();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, an error occurs.\n   */\n  public startBuffering(): void {\n    if (this._isEnabled) {\n      DEBUG_BUILD && logger.info('Buffering is in progress, call `flush()` to save the replay');\n      return;\n    }\n\n    DEBUG_BUILD && logger.infoTick('Starting replay in buffer mode');\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: 0,\n        allowBuffering: true,\n      },\n    );\n\n    this.session = session;\n\n    this.recordingMode = 'buffer';\n    this._initializeRecording();\n  }\n\n  /**\n   * Start recording.\n   *\n   * Note that this will cause a new DOM checkout\n   */\n  public startRecording(): void {\n    try {\n      const canvasOptions = this._canvas;\n\n      this._stopRecording = record({\n        ...this._recordingOptions,\n        // When running in error sampling mode, we need to overwrite `checkoutEveryNms`\n        // Without this, it would record forever, until an error happens, which we don't want\n        // instead, we'll always keep the last 60 seconds of replay before an error happened\n        ...(this.recordingMode === 'buffer'\n          ? { checkoutEveryNms: BUFFER_CHECKOUT_TIME }\n          : // Otherwise, use experimental option w/ min checkout time of 6 minutes\n            // This is to improve playback seeking as there could potentially be\n            // less mutations to process in the worse cases.\n            //\n            // checkout by \"N\" events is probably ideal, but means we have less\n            // control about the number of checkouts we make (which generally\n            // increases replay size)\n            this._options._experiments.continuousCheckout && {\n              // Minimum checkout time is 6 minutes\n              checkoutEveryNms: Math.max(360_000, this._options._experiments.continuousCheckout),\n            }),\n        emit: getHandleRecordingEmit(this),\n        ...getRecordingSamplingOptions(),\n        onMutation: this._onMutationHandler.bind(this),\n        ...(canvasOptions\n          ? {\n              recordCanvas: canvasOptions.recordCanvas,\n              getCanvasManager: canvasOptions.getCanvasManager,\n              sampling: canvasOptions.sampling,\n              dataURLOptions: canvasOptions.dataURLOptions,\n            }\n          : {}),\n      });\n    } catch (err) {\n      this.handleException(err);\n    }\n  }\n\n  /**\n   * Stops the recording, if it was running.\n   *\n   * Returns true if it was previously stopped, or is now stopped,\n   * otherwise false.\n   */\n  public stopRecording(): boolean {\n    try {\n      if (this._stopRecording) {\n        this._stopRecording();\n        this._stopRecording = undefined;\n      }\n\n      return true;\n    } catch (err) {\n      this.handleException(err);\n      return false;\n    }\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n  public async stop({ forceFlush = false, reason }: { forceFlush?: boolean; reason?: string } = {}): Promise<void> {\n    if (!this._isEnabled) {\n      return;\n    }\n\n    // We can't move `_isEnabled` after awaiting a flush, otherwise we can\n    // enter into an infinite loop when `stop()` is called while flushing.\n    this._isEnabled = false;\n\n    try {\n      DEBUG_BUILD && logger.info(`Stopping Replay${reason ? ` triggered by ${reason}` : ''}`);\n\n      resetReplayIdOnDynamicSamplingContext();\n\n      this._removeListeners();\n      this.stopRecording();\n\n      this._debouncedFlush.cancel();\n      // See comment above re: `_isEnabled`, we \"force\" a flush, ignoring the\n      // `_isEnabled` state of the plugin since it was disabled above.\n      if (forceFlush) {\n        await this._flush({ force: true });\n      }\n\n      // After flush, destroy event buffer\n      this.eventBuffer?.destroy();\n      this.eventBuffer = null;\n\n      // Clear session from session storage, note this means if a new session\n      // is started after, it will not have `previousSessionId`\n      clearSession(this);\n    } catch (err) {\n      this.handleException(err);\n    }\n  }\n\n  /**\n   * Pause some replay functionality. See comments for `_isPaused`.\n   * This differs from stop as this only stops DOM recording, it is\n   * not as thorough of a shutdown as `stop()`.\n   */\n  public pause(): void {\n    if (this._isPaused) {\n      return;\n    }\n\n    this._isPaused = true;\n    this.stopRecording();\n\n    DEBUG_BUILD && logger.info('Pausing replay');\n  }\n\n  /**\n   * Resumes recording, see notes for `pause().\n   *\n   * Note that calling `startRecording()` here will cause a\n   * new DOM checkout.`\n   */\n  public resume(): void {\n    if (!this._isPaused || !this._checkSession()) {\n      return;\n    }\n\n    this._isPaused = false;\n    this.startRecording();\n\n    DEBUG_BUILD && logger.info('Resuming replay');\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n  public async sendBufferedReplayOrFlush({ continueRecording = true }: SendBufferedReplayOptions = {}): Promise<void> {\n    if (this.recordingMode === 'session') {\n      return this.flushImmediate();\n    }\n\n    const activityTime = Date.now();\n\n    DEBUG_BUILD && logger.info('Converting buffer to session');\n\n    // Allow flush to complete before resuming as a session recording, otherwise\n    // the checkout from `startRecording` may be included in the payload.\n    // Prefer to keep the error replay as a separate (and smaller) segment\n    // than the session replay.\n    await this.flushImmediate();\n\n    const hasStoppedRecording = this.stopRecording();\n\n    if (!continueRecording || !hasStoppedRecording) {\n      return;\n    }\n\n    // To avoid race conditions where this is called multiple times, we check here again that we are still buffering\n    if ((this.recordingMode as ReplayRecordingMode) === 'session') {\n      return;\n    }\n\n    // Re-start recording in session-mode\n    this.recordingMode = 'session';\n\n    // Once this session ends, we do not want to refresh it\n    if (this.session) {\n      this._updateUserActivity(activityTime);\n      this._updateSessionActivity(activityTime);\n      this._maybeSaveSession();\n    }\n\n    this.startRecording();\n  }\n\n  /**\n   * We want to batch uploads of replay events. Save events only if\n   * `<flushMinDelay>` milliseconds have elapsed since the last event\n   * *OR* if `<flushMaxDelay>` milliseconds have elapsed.\n   *\n   * Accepts a callback to perform side-effects and returns true to stop batch\n   * processing and hand back control to caller.\n   */\n  public addUpdate(cb: AddUpdateCallback): void {\n    // We need to always run `cb` (e.g. in the case of `this.recordingMode == 'buffer'`)\n    const cbResult = cb();\n\n    // If this option is turned on then we will only want to call `flush`\n    // explicitly\n    if (this.recordingMode === 'buffer') {\n      return;\n    }\n\n    // If callback is true, we do not want to continue with flushing -- the\n    // caller will need to handle it.\n    if (cbResult === true) {\n      return;\n    }\n\n    // addUpdate is called quite frequently - use _debouncedFlush so that it\n    // respects the flush delays and does not flush immediately\n    this._debouncedFlush();\n  }\n\n  /**\n   * Updates the user activity timestamp and resumes recording. This should be\n   * called in an event handler for a user action that we consider as the user\n   * being \"active\" (e.g. a mouse click).\n   */\n  public triggerUserActivity(): void {\n    this._updateUserActivity();\n\n    // This case means that recording was once stopped due to inactivity.\n    // Ensure that recording is resumed.\n    if (!this._stopRecording) {\n      // Create a new session, otherwise when the user action is flushed, it\n      // will get rejected due to an expired session.\n      if (!this._checkSession()) {\n        return;\n      }\n\n      // Note: This will cause a new DOM checkout\n      this.resume();\n      return;\n    }\n\n    // Otherwise... recording was never suspended, continue as normalish\n    this.checkAndHandleExpiredSession();\n\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Updates the user activity timestamp *without* resuming\n   * recording. Some user events (e.g. keydown) can be create\n   * low-value replays that only contain the keypress as a\n   * breadcrumb. Instead this would require other events to\n   * create a new replay after a session has expired.\n   */\n  public updateUserActivity(): void {\n    this._updateUserActivity();\n    this._updateSessionActivity();\n  }\n\n  /**\n   * Only flush if `this.recordingMode === 'session'`\n   */\n  public conditionalFlush(): Promise<void> {\n    if (this.recordingMode === 'buffer') {\n      return Promise.resolve();\n    }\n\n    return this.flushImmediate();\n  }\n\n  /**\n   * Flush using debounce flush\n   */\n  public flush(): Promise<void> {\n    return this._debouncedFlush() as Promise<void>;\n  }\n\n  /**\n   * Always flush via `_debouncedFlush` so that we do not have flushes triggered\n   * from calling both `flush` and `_debouncedFlush`. Otherwise, there could be\n   * cases of multiple flushes happening closely together.\n   */\n  public flushImmediate(): Promise<void> {\n    this._debouncedFlush();\n    // `.flush` is provided by the debounced function, analogously to lodash.debounce\n    return this._debouncedFlush.flush() as Promise<void>;\n  }\n\n  /**\n   * Cancels queued up flushes.\n   */\n  public cancelFlush(): void {\n    this._debouncedFlush.cancel();\n  }\n\n  /** Get the current session (=replay) ID */\n  public getSessionId(): string | undefined {\n    return this.session?.id;\n  }\n\n  /**\n   * Checks if recording should be stopped due to user inactivity. Otherwise\n   * check if session is expired and create a new session if so. Triggers a new\n   * full snapshot on new session.\n   *\n   * Returns true if session is not expired, false otherwise.\n   * @hidden\n   */\n  public checkAndHandleExpiredSession(): boolean | void {\n    // Prevent starting a new session if the last user activity is older than\n    // SESSION_IDLE_PAUSE_DURATION. Otherwise non-user activity can trigger a new\n    // session+recording. This creates noisy replays that do not have much\n    // content in them.\n    if (\n      this._lastActivity &&\n      isExpired(this._lastActivity, this.timeouts.sessionIdlePause) &&\n      this.session &&\n      this.session.sampled === 'session'\n    ) {\n      // Pause recording only for session-based replays. Otherwise, resuming\n      // will create a new replay and will conflict with users who only choose\n      // to record error-based replays only. (e.g. the resumed replay will not\n      // contain a reference to an error)\n      this.pause();\n      return;\n    }\n\n    // --- There is recent user activity --- //\n    // This will create a new session if expired, based on expiry length\n    if (!this._checkSession()) {\n      // Check session handles the refreshing itself\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Capture some initial state that can change throughout the lifespan of the\n   * replay. This is required because otherwise they would be captured at the\n   * first flush.\n   */\n  public setInitialState(): void {\n    const urlPath = `${WINDOW.location.pathname}${WINDOW.location.hash}${WINDOW.location.search}`;\n    const url = `${WINDOW.location.origin}${urlPath}`;\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    // Reset _context as well\n    this._clearContext();\n\n    this._context.initialUrl = url;\n    this._context.initialTimestamp = Date.now();\n    this._context.urls.push(url);\n  }\n\n  /**\n   * Add a breadcrumb event, that may be throttled.\n   * If it was throttled, we add a custom breadcrumb to indicate that.\n   */\n  public throttledAddEvent(\n    event: RecordingEvent,\n    isCheckout?: boolean,\n  ): typeof THROTTLED | typeof SKIPPED | Promise<AddEventResult | null> {\n    const res = this._throttledAddEvent(event, isCheckout);\n\n    // If this is THROTTLED, it means we have throttled the event for the first time\n    // In this case, we want to add a breadcrumb indicating that something was skipped\n    if (res === THROTTLED) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.throttled',\n      });\n\n      this.addUpdate(() => {\n        // Return `false` if the event _was_ added, as that means we schedule a flush\n        return !addEventSync(this, {\n          type: ReplayEventTypeCustom,\n          timestamp: breadcrumb.timestamp || 0,\n          data: {\n            tag: 'breadcrumb',\n            payload: breadcrumb,\n            metric: true,\n          },\n        });\n      });\n    }\n\n    return res;\n  }\n\n  /**\n   * This will get the parametrized route name of the current page.\n   * This is only available if performance is enabled, and if an instrumented router is used.\n   */\n  public getCurrentRoute(): string | undefined {\n    const lastActiveSpan = this.lastActiveSpan || getActiveSpan();\n    const lastRootSpan = lastActiveSpan && getRootSpan(lastActiveSpan);\n\n    const attributes = (lastRootSpan && spanToJSON(lastRootSpan).data) || {};\n    const source = attributes[SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n    if (!lastRootSpan || !source || !['route', 'custom'].includes(source)) {\n      return undefined;\n    }\n\n    return spanToJSON(lastRootSpan).description;\n  }\n\n  /**\n   * Initialize and start all listeners to varying events (DOM,\n   * Performance Observer, Recording, Sentry SDK, etc)\n   */\n  private _initializeRecording(): void {\n    this.setInitialState();\n\n    // this method is generally called on page load or manually - in both cases\n    // we should treat it as an activity\n    this._updateSessionActivity();\n\n    this.eventBuffer = createEventBuffer({\n      useCompression: this._options.useCompression,\n      workerUrl: this._options.workerUrl,\n    });\n\n    this._removeListeners();\n    this._addListeners();\n\n    // Need to set as enabled before we start recording, as `record()` can trigger a flush with a new checkout\n    this._isEnabled = true;\n    this._isPaused = false;\n\n    this.startRecording();\n  }\n\n  /**\n   * Loads (or refreshes) the current session.\n   */\n  private _initializeSessionForSampling(previousSessionId?: string): void {\n    // Whenever there is _any_ error sample rate, we always allow buffering\n    // Because we decide on sampling when an error occurs, we need to buffer at all times if sampling for errors\n    const allowBuffering = this._options.errorSampleRate > 0;\n\n    const session = loadOrCreateSession(\n      {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n        previousSessionId,\n      },\n      {\n        stickySession: this._options.stickySession,\n        sessionSampleRate: this._options.sessionSampleRate,\n        allowBuffering,\n      },\n    );\n\n    this.session = session;\n  }\n\n  /**\n   * Checks and potentially refreshes the current session.\n   * Returns false if session is not recorded.\n   */\n  private _checkSession(): boolean {\n    // If there is no session yet, we do not want to refresh anything\n    // This should generally not happen, but to be safe....\n    if (!this.session) {\n      return false;\n    }\n\n    const currentSession = this.session;\n\n    if (\n      shouldRefreshSession(currentSession, {\n        sessionIdleExpire: this.timeouts.sessionIdleExpire,\n        maxReplayDuration: this._options.maxReplayDuration,\n      })\n    ) {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this._refreshSession(currentSession);\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Refresh a session with a new one.\n   * This stops the current session (without forcing a flush, as that would never work since we are expired),\n   * and then does a new sampling based on the refreshed session.\n   */\n  private async _refreshSession(session: Session): Promise<void> {\n    if (!this._isEnabled) {\n      return;\n    }\n    await this.stop({ reason: 'refresh session' });\n    this.initializeSampling(session.id);\n  }\n\n  /**\n   * Adds listeners to record events for the replay\n   */\n  private _addListeners(): void {\n    try {\n      WINDOW.document.addEventListener('visibilitychange', this._handleVisibilityChange);\n      WINDOW.addEventListener('blur', this._handleWindowBlur);\n      WINDOW.addEventListener('focus', this._handleWindowFocus);\n      WINDOW.addEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.addListeners();\n      }\n\n      // There is no way to remove these listeners, so ensure they are only added once\n      if (!this._hasInitializedCoreListeners) {\n        addGlobalListeners(this, { autoFlushOnFeedback: this._options._experiments.autoFlushOnFeedback });\n\n        this._hasInitializedCoreListeners = true;\n      }\n    } catch (err) {\n      this.handleException(err);\n    }\n\n    this._performanceCleanupCallback = setupPerformanceObserver(this);\n  }\n\n  /**\n   * Cleans up listeners that were created in `_addListeners`\n   */\n  private _removeListeners(): void {\n    try {\n      WINDOW.document.removeEventListener('visibilitychange', this._handleVisibilityChange);\n\n      WINDOW.removeEventListener('blur', this._handleWindowBlur);\n      WINDOW.removeEventListener('focus', this._handleWindowFocus);\n      WINDOW.removeEventListener('keydown', this._handleKeyboardEvent);\n\n      if (this.clickDetector) {\n        this.clickDetector.removeListeners();\n      }\n\n      if (this._performanceCleanupCallback) {\n        this._performanceCleanupCallback();\n      }\n    } catch (err) {\n      this.handleException(err);\n    }\n  }\n\n  /**\n   * Tasks to run when we consider a page to be hidden (via blurring and/or visibility)\n   */\n  private _doChangeToBackgroundTasks(breadcrumb?: ReplayBreadcrumbFrame): void {\n    if (!this.session) {\n      return;\n    }\n\n    const expired = isSessionExpired(this.session, {\n      maxReplayDuration: this._options.maxReplayDuration,\n      sessionIdleExpire: this.timeouts.sessionIdleExpire,\n    });\n\n    if (expired) {\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Send replay when the page/tab becomes hidden. There is no reason to send\n    // replay if it becomes visible, since no actions we care about were done\n    // while it was hidden\n    // This should never reject\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    void this.conditionalFlush();\n  }\n\n  /**\n   * Tasks to run when we consider a page to be visible (via focus and/or visibility)\n   */\n  private _doChangeToForegroundTasks(breadcrumb?: ReplayBreadcrumbFrame): void {\n    if (!this.session) {\n      return;\n    }\n\n    const isSessionActive = this.checkAndHandleExpiredSession();\n\n    if (!isSessionActive) {\n      // If the user has come back to the page within SESSION_IDLE_PAUSE_DURATION\n      // ms, we will re-use the existing session, otherwise create a new\n      // session\n      DEBUG_BUILD && logger.info('Document has become active, but session has expired');\n      return;\n    }\n\n    if (breadcrumb) {\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n  }\n\n  /**\n   * Update user activity (across session lifespans)\n   */\n  private _updateUserActivity(_lastActivity: number = Date.now()): void {\n    this._lastActivity = _lastActivity;\n  }\n\n  /**\n   * Updates the session's last activity timestamp\n   */\n  private _updateSessionActivity(_lastActivity: number = Date.now()): void {\n    if (this.session) {\n      this.session.lastActivity = _lastActivity;\n      this._maybeSaveSession();\n    }\n  }\n\n  /**\n   * Helper to create (and buffer) a replay breadcrumb from a core SDK breadcrumb\n   */\n  private _createCustomBreadcrumb(breadcrumb: ReplayBreadcrumbFrame): void {\n    this.addUpdate(() => {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.throttledAddEvent({\n        type: EventType.Custom,\n        timestamp: breadcrumb.timestamp || 0,\n        data: {\n          tag: 'breadcrumb',\n          payload: breadcrumb,\n        },\n      });\n    });\n  }\n\n  /**\n   * Observed performance events are added to `this.performanceEntries`. These\n   * are included in the replay event before it is finished and sent to Sentry.\n   */\n  private _addPerformanceEntries(): Promise<Array<AddEventResult | null>> {\n    let performanceEntries = createPerformanceEntries(this.performanceEntries).concat(this.replayPerformanceEntries);\n\n    this.performanceEntries = [];\n    this.replayPerformanceEntries = [];\n\n    // If we are manually starting, we want to ensure we only include performance entries\n    // that are after the initial timestamp\n    // The reason for this is that we may have performance entries from the page load, but may decide to start\n    // the replay later on, in which case we do not want to include these entries.\n    // without this, manually started replays can have events long before the actual replay recording starts,\n    // which messes with the timeline etc.\n    if (this._requiresManualStart) {\n      const initialTimestampInSeconds = this._context.initialTimestamp / 1000;\n      performanceEntries = performanceEntries.filter(entry => entry.start >= initialTimestampInSeconds);\n    }\n\n    return Promise.all(createPerformanceSpans(this, performanceEntries));\n  }\n\n  /**\n   * Clear _context\n   */\n  private _clearContext(): void {\n    // XXX: `initialTimestamp` and `initialUrl` do not get cleared\n    this._context.errorIds.clear();\n    this._context.traceIds.clear();\n    this._context.urls = [];\n  }\n\n  /** Update the initial timestamp based on the buffer content. */\n  private _updateInitialTimestampFromEventBuffer(): void {\n    const { session, eventBuffer } = this;\n    // If replay was started manually (=no sample rate was given),\n    // We do not want to back-port the initial timestamp\n    if (!session || !eventBuffer || this._requiresManualStart) {\n      return;\n    }\n\n    // we only ever update this on the initial segment\n    if (session.segmentId) {\n      return;\n    }\n\n    const earliestEvent = eventBuffer.getEarliestTimestamp();\n    if (earliestEvent && earliestEvent < this._context.initialTimestamp) {\n      this._context.initialTimestamp = earliestEvent;\n    }\n  }\n\n  /**\n   * Return and clear _context\n   */\n  private _popEventContext(): PopEventContext {\n    const _context = {\n      initialTimestamp: this._context.initialTimestamp,\n      initialUrl: this._context.initialUrl,\n      errorIds: Array.from(this._context.errorIds),\n      traceIds: Array.from(this._context.traceIds),\n      urls: this._context.urls,\n    };\n\n    this._clearContext();\n\n    return _context;\n  }\n\n  /**\n   * Flushes replay event buffer to Sentry.\n   *\n   * Performance events are only added right before flushing - this is\n   * due to the buffered performance observer events.\n   *\n   * Should never be called directly, only by `flush`\n   */\n  private async _runFlush(): Promise<void> {\n    const replayId = this.getSessionId();\n\n    if (!this.session || !this.eventBuffer || !replayId) {\n      DEBUG_BUILD && logger.error('No session or eventBuffer found to flush.');\n      return;\n    }\n\n    await this._addPerformanceEntries();\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer?.hasEvents) {\n      return;\n    }\n\n    // Only attach memory event if eventBuffer is not empty\n    await addMemoryEntry(this);\n\n    // Check eventBuffer again, as it could have been stopped in the meanwhile\n    if (!this.eventBuffer) {\n      return;\n    }\n\n    // if this changed in the meanwhile, e.g. because the session was refreshed or similar, we abort here\n    if (replayId !== this.getSessionId()) {\n      return;\n    }\n\n    try {\n      // This uses the data from the eventBuffer, so we need to call this before `finish()\n      this._updateInitialTimestampFromEventBuffer();\n\n      const timestamp = Date.now();\n\n      // Check total duration again, to avoid sending outdated stuff\n      // We leave 30s wiggle room to accommodate late flushing etc.\n      // This _could_ happen when the browser is suspended during flushing, in which case we just want to stop\n      if (timestamp - this._context.initialTimestamp > this._options.maxReplayDuration + 30_000) {\n        throw new Error('Session is too long, not sending replay');\n      }\n\n      const eventContext = this._popEventContext();\n      // Always increment segmentId regardless of outcome of sending replay\n      const segmentId = this.session.segmentId++;\n      this._maybeSaveSession();\n\n      // Note this empties the event buffer regardless of outcome of sending replay\n      const recordingData = await this.eventBuffer.finish();\n\n      await sendReplay({\n        replayId,\n        recordingData,\n        segmentId,\n        eventContext,\n        session: this.session,\n        timestamp,\n        onError: err => this.handleException(err),\n      });\n    } catch (err) {\n      this.handleException(err);\n\n      // This means we retried 3 times and all of them failed,\n      // or we ran into a problem we don't want to retry, like rate limiting.\n      // In this case, we want to completely stop the replay - otherwise, we may get inconsistent segments\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.stop({ reason: 'sendReplay' });\n\n      const client = getClient();\n\n      if (client) {\n        const dropReason = err instanceof RateLimitError ? 'ratelimit_backoff' : 'send_error';\n        client.recordDroppedEvent(dropReason, 'replay');\n      }\n    }\n  }\n\n  /**\n   * Flush recording data to Sentry. Creates a lock so that only a single flush\n   * can be active at a time. Do not call this directly.\n   */\n  private async _flush({\n    force = false,\n  }: {\n    /**\n     * If true, flush while ignoring the `_isEnabled` state of\n     * Replay integration. (By default, flush is noop if integration\n     * is stopped).\n     */\n    force?: boolean;\n  } = {}): Promise<void> {\n    if (!this._isEnabled && !force) {\n      // This can happen if e.g. the replay was stopped because of exceeding the retry limit\n      return;\n    }\n\n    if (!this.checkAndHandleExpiredSession()) {\n      DEBUG_BUILD && logger.error('Attempting to finish replay event after session expired.');\n      return;\n    }\n\n    if (!this.session) {\n      // should never happen, as we would have bailed out before\n      return;\n    }\n\n    const start = this.session.started;\n    const now = Date.now();\n    const duration = now - start;\n\n    // A flush is about to happen, cancel any queued flushes\n    this._debouncedFlush.cancel();\n\n    // If session is too short, or too long (allow some wiggle room over maxReplayDuration), do not send it\n    // This _should_ not happen, but it may happen if flush is triggered due to a page activity change or similar\n    const tooShort = duration < this._options.minReplayDuration;\n    const tooLong = duration > this._options.maxReplayDuration + 5_000;\n    if (tooShort || tooLong) {\n      DEBUG_BUILD &&\n        logger.info(\n          `Session duration (${Math.floor(duration / 1000)}s) is too ${\n            tooShort ? 'short' : 'long'\n          }, not sending replay.`,\n        );\n\n      if (tooShort) {\n        this._debouncedFlush();\n      }\n      return;\n    }\n\n    const eventBuffer = this.eventBuffer;\n    if (eventBuffer && this.session.segmentId === 0 && !eventBuffer.hasCheckout) {\n      DEBUG_BUILD && logger.info('Flushing initial segment without checkout.');\n      // TODO FN: Evaluate if we want to stop here, or remove this again?\n    }\n\n    const _flushInProgress = !!this._flushLock;\n\n    // this._flushLock acts as a lock so that future calls to `_flush()` will\n    // be blocked until current flush is finished (i.e. this promise resolves)\n    if (!this._flushLock) {\n      this._flushLock = this._runFlush();\n    }\n\n    try {\n      await this._flushLock;\n    } catch (err) {\n      this.handleException(err);\n    } finally {\n      this._flushLock = undefined;\n\n      if (_flushInProgress) {\n        // Wait for previous flush to finish, then call the debounced\n        // `_flush()`. It's possible there are other flush requests queued and\n        // waiting for it to resolve. We want to reduce all outstanding\n        // requests (as well as any new flush requests that occur within a\n        // second of the locked flush completing) into a single flush.\n        this._debouncedFlush();\n      }\n    }\n  }\n\n  /** Save the session, if it is sticky */\n  private _maybeSaveSession(): void {\n    if (this.session && this._options.stickySession) {\n      saveSession(this.session);\n    }\n  }\n\n  /** Handler for rrweb.record.onMutation */\n  private _onMutationHandler(mutations: unknown[]): boolean {\n    const count = mutations.length;\n\n    const mutationLimit = this._options.mutationLimit;\n    const mutationBreadcrumbLimit = this._options.mutationBreadcrumbLimit;\n    const overMutationLimit = mutationLimit && count > mutationLimit;\n\n    // Create a breadcrumb if a lot of mutations happen at the same time\n    // We can show this in the UI as an information with potential performance improvements\n    if (count > mutationBreadcrumbLimit || overMutationLimit) {\n      const breadcrumb = createBreadcrumb({\n        category: 'replay.mutations',\n        data: {\n          count,\n          limit: overMutationLimit,\n        },\n      });\n      this._createCustomBreadcrumb(breadcrumb);\n    }\n\n    // Stop replay if over the mutation limit\n    if (overMutationLimit) {\n      // This should never reject\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      this.stop({ reason: 'mutationLimit', forceFlush: this.recordingMode === 'session' });\n      return false;\n    }\n\n    // `true` means we use the regular mutation handling by rrweb\n    return true;\n  }\n}\n","import type { ReplayIntegrationPrivacyOptions } from '../types';\n\ntype GetPrivacyOptions = Required<Omit<ReplayIntegrationPrivacyOptions, 'maskFn'>>;\n\ninterface GetPrivacyReturn {\n  maskTextSelector: string;\n  unmaskTextSelector: string;\n  blockSelector: string;\n  unblockSelector: string;\n  ignoreSelector: string;\n\n  blockClass?: RegExp;\n  maskTextClass?: RegExp;\n}\n\nfunction getOption(selectors: string[], defaultSelectors: string[]): string {\n  return [\n    ...selectors,\n    // sentry defaults\n    ...defaultSelectors,\n  ].join(',');\n}\n\n/**\n * Returns privacy related configuration for use in rrweb\n */\nexport function getPrivacyOptions({ mask, unmask, block, unblock, ignore }: GetPrivacyOptions): GetPrivacyReturn {\n  const defaultBlockedElements = ['base', 'iframe[srcdoc]:not([src])'];\n\n  const maskSelector = getOption(mask, ['.sentry-mask', '[data-sentry-mask]']);\n  const unmaskSelector = getOption(unmask, []);\n\n  const options: GetPrivacyReturn = {\n    // We are making the decision to make text and input selectors the same\n    maskTextSelector: maskSelector,\n    unmaskTextSelector: unmaskSelector,\n\n    blockSelector: getOption(block, ['.sentry-block', '[data-sentry-block]', ...defaultBlockedElements]),\n    unblockSelector: getOption(unblock, []),\n    ignoreSelector: getOption(ignore, ['.sentry-ignore', '[data-sentry-ignore]', 'input[type=\"file\"]']),\n  };\n\n  return options;\n}\n","import type { getPrivacyOptions } from './getPrivacyOptions';\n\ninterface MaskAttributeParams {\n  maskAttributes: string[];\n  maskAllText: boolean;\n  privacyOptions: ReturnType<typeof getPrivacyOptions>;\n  key: string;\n  value: string;\n  el: HTMLElement;\n}\n\n/**\n * Masks an attribute if necessary, otherwise return attribute value as-is.\n */\nexport function maskAttribute({\n  el,\n  key,\n  maskAttributes,\n  maskAllText,\n  privacyOptions,\n  value,\n}: MaskAttributeParams): string {\n  // We only mask attributes if `maskAllText` is true\n  if (!maskAllText) {\n    return value;\n  }\n\n  // unmaskTextSelector takes precedence\n  if (privacyOptions.unmaskTextSelector && el.matches(privacyOptions.unmaskTextSelector)) {\n    return value;\n  }\n\n  if (\n    maskAttributes.includes(key) ||\n    // Need to mask `value` attribute for `<input>` if it's a button-like\n    // type\n    (key === 'value' && el.tagName === 'INPUT' && ['submit', 'button'].includes(el.getAttribute('type') || ''))\n  ) {\n    return value.replace(/[\\S]/g, '*');\n  }\n\n  return value;\n}\n","import type { BrowserClientReplayOptions, Client, Integration, IntegrationFn, ReplayRecordingMode } from '@sentry/core';\nimport { consoleSandbox, dropUndefinedKeys, isBrowser, parseSampleRate } from '@sentry/core';\nimport {\n  DEFAULT_FLUSH_MAX_DELAY,\n  DEFAULT_FLUSH_MIN_DELAY,\n  MAX_REPLAY_DURATION,\n  MIN_REPLAY_DURATION,\n  MIN_REPLAY_DURATION_LIMIT,\n} from './constants';\nimport { ReplayContainer } from './replay';\nimport type {\n  InitialReplayPluginOptions,\n  RecordingOptions,\n  ReplayCanvasIntegrationOptions,\n  ReplayConfiguration,\n  ReplayPluginOptions,\n  SendBufferedReplayOptions,\n} from './types';\nimport { getPrivacyOptions } from './util/getPrivacyOptions';\nimport { maskAttribute } from './util/maskAttribute';\n\nconst MEDIA_SELECTORS =\n  'img,image,svg,video,object,picture,embed,map,audio,link[rel=\"icon\"],link[rel=\"apple-touch-icon\"]';\n\nconst DEFAULT_NETWORK_HEADERS = ['content-length', 'content-type', 'accept'];\n\nlet _initialized = false;\n\n/**\n * Sentry integration for [Session Replay](https://sentry.io/for/session-replay/).\n *\n * See the [Replay documentation](https://docs.sentry.io/platforms/javascript/guides/session-replay/) for more information.\n *\n * @example\n *\n * ```\n * Sentry.init({\n *   dsn: '__DSN__',\n *   integrations: [Sentry.replayIntegration()],\n * });\n * ```\n */\nexport const replayIntegration = ((options?: ReplayConfiguration) => {\n  return new Replay(options);\n}) satisfies IntegrationFn;\n\n/**\n * Replay integration\n */\nexport class Replay implements Integration {\n  /**\n   * @inheritDoc\n   */\n  public name: string;\n\n  /**\n   * Options to pass to `rrweb.record()`\n   */\n  private readonly _recordingOptions: RecordingOptions;\n\n  /**\n   * Initial options passed to the replay integration, merged with default values.\n   * Note: `sessionSampleRate` and `errorSampleRate` are not required here, as they\n   * can only be finally set when setupOnce() is called.\n   *\n   * @private\n   */\n  private readonly _initialOptions: InitialReplayPluginOptions;\n\n  private _replay?: ReplayContainer;\n\n  public constructor({\n    flushMinDelay = DEFAULT_FLUSH_MIN_DELAY,\n    flushMaxDelay = DEFAULT_FLUSH_MAX_DELAY,\n    minReplayDuration = MIN_REPLAY_DURATION,\n    maxReplayDuration = MAX_REPLAY_DURATION,\n    stickySession = true,\n    useCompression = true,\n    workerUrl,\n    _experiments = {},\n    maskAllText = true,\n    maskAllInputs = true,\n    blockAllMedia = true,\n\n    mutationBreadcrumbLimit = 750,\n    mutationLimit = 10_000,\n\n    slowClickTimeout = 7_000,\n    slowClickIgnoreSelectors = [],\n\n    networkDetailAllowUrls = [],\n    networkDetailDenyUrls = [],\n    networkCaptureBodies = true,\n    networkRequestHeaders = [],\n    networkResponseHeaders = [],\n\n    mask = [],\n    maskAttributes = ['title', 'placeholder'],\n    unmask = [],\n    block = [],\n    unblock = [],\n    ignore = [],\n    maskFn,\n\n    beforeAddRecordingEvent,\n    beforeErrorSampling,\n    onError,\n  }: ReplayConfiguration = {}) {\n    this.name = 'Replay';\n\n    const privacyOptions = getPrivacyOptions({\n      mask,\n      unmask,\n      block,\n      unblock,\n      ignore,\n    });\n\n    this._recordingOptions = {\n      maskAllInputs,\n      maskAllText,\n      maskInputOptions: { password: true },\n      maskTextFn: maskFn,\n      maskInputFn: maskFn,\n      maskAttributeFn: (key: string, value: string, el: HTMLElement): string =>\n        maskAttribute({\n          maskAttributes,\n          maskAllText,\n          privacyOptions,\n          key,\n          value,\n          el,\n        }),\n\n      ...privacyOptions,\n\n      // Our defaults\n      slimDOMOptions: 'all',\n      inlineStylesheet: true,\n      // Disable inline images as it will increase segment/replay size\n      inlineImages: false,\n      // collect fonts, but be aware that `sentry.io` needs to be an allowed\n      // origin for playback\n      collectFonts: true,\n      errorHandler: (err: Error & { __rrweb__?: boolean }) => {\n        try {\n          err.__rrweb__ = true;\n        } catch (error) {\n          // ignore errors here\n          // this can happen if the error is frozen or does not allow mutation for other reasons\n        }\n      },\n    };\n\n    this._initialOptions = {\n      flushMinDelay,\n      flushMaxDelay,\n      minReplayDuration: Math.min(minReplayDuration, MIN_REPLAY_DURATION_LIMIT),\n      maxReplayDuration: Math.min(maxReplayDuration, MAX_REPLAY_DURATION),\n      stickySession,\n      useCompression,\n      workerUrl,\n      blockAllMedia,\n      maskAllInputs,\n      maskAllText,\n      mutationBreadcrumbLimit,\n      mutationLimit,\n      slowClickTimeout,\n      slowClickIgnoreSelectors,\n      networkDetailAllowUrls,\n      networkDetailDenyUrls,\n      networkCaptureBodies,\n      networkRequestHeaders: _getMergedNetworkHeaders(networkRequestHeaders),\n      networkResponseHeaders: _getMergedNetworkHeaders(networkResponseHeaders),\n      beforeAddRecordingEvent,\n      beforeErrorSampling,\n      onError,\n\n      _experiments,\n    };\n\n    if (this._initialOptions.blockAllMedia) {\n      // `blockAllMedia` is a more user friendly option to configure blocking\n      // embedded media elements\n      this._recordingOptions.blockSelector = !this._recordingOptions.blockSelector\n        ? MEDIA_SELECTORS\n        : `${this._recordingOptions.blockSelector},${MEDIA_SELECTORS}`;\n    }\n\n    if (this._isInitialized && isBrowser()) {\n      throw new Error('Multiple Sentry Session Replay instances are not supported');\n    }\n\n    this._isInitialized = true;\n  }\n\n  /** If replay has already been initialized */\n  protected get _isInitialized(): boolean {\n    return _initialized;\n  }\n\n  /** Update _isInitialized */\n  protected set _isInitialized(value: boolean) {\n    _initialized = value;\n  }\n\n  /**\n   * Setup and initialize replay container\n   */\n  public afterAllSetup(client: Client): void {\n    if (!isBrowser() || this._replay) {\n      return;\n    }\n\n    this._setup(client);\n    this._initialize(client);\n  }\n\n  /**\n   * Start a replay regardless of sampling rate. Calling this will always\n   * create a new session. Will log a message if replay is already in progress.\n   *\n   * Creates or loads a session, attaches listeners to varying events (DOM,\n   * PerformanceObserver, Recording, Sentry SDK, etc)\n   */\n  public start(): void {\n    if (!this._replay) {\n      return;\n    }\n    this._replay.start();\n  }\n\n  /**\n   * Start replay buffering. Buffers until `flush()` is called or, if\n   * `replaysOnErrorSampleRate` > 0, until an error occurs.\n   */\n  public startBuffering(): void {\n    if (!this._replay) {\n      return;\n    }\n\n    this._replay.startBuffering();\n  }\n\n  /**\n   * Currently, this needs to be manually called (e.g. for tests). Sentry SDK\n   * does not support a teardown\n   */\n  public stop(): Promise<void> {\n    if (!this._replay) {\n      return Promise.resolve();\n    }\n\n    return this._replay.stop({ forceFlush: this._replay.recordingMode === 'session' });\n  }\n\n  /**\n   * If not in \"session\" recording mode, flush event buffer which will create a new replay.\n   * If replay is not enabled, a new session replay is started.\n   * Unless `continueRecording` is false, the replay will continue to record and\n   * behave as a \"session\"-based replay.\n   *\n   * Otherwise, queue up a flush.\n   */\n  public flush(options?: SendBufferedReplayOptions): Promise<void> {\n    if (!this._replay) {\n      return Promise.resolve();\n    }\n\n    // assuming a session should be recorded in this case\n    if (!this._replay.isEnabled()) {\n      this._replay.start();\n      return Promise.resolve();\n    }\n\n    return this._replay.sendBufferedReplayOrFlush(options);\n  }\n\n  /**\n   * Get the current session ID.\n   */\n  public getReplayId(): string | undefined {\n    if (!this._replay?.isEnabled()) {\n      return;\n    }\n\n    return this._replay.getSessionId();\n  }\n\n  /**\n   * Get the current recording mode. This can be either `session` or `buffer`.\n   *\n   * `session`: Recording the whole session, sending it continuously\n   * `buffer`: Always keeping the last 60s of recording, requires:\n   *   - having replaysOnErrorSampleRate > 0 to capture replay when an error occurs\n   *   - or calling `flush()` to send the replay\n   */\n  public getRecordingMode(): ReplayRecordingMode | undefined {\n    if (!this._replay?.isEnabled()) {\n      return;\n    }\n\n    return this._replay.recordingMode;\n  }\n\n  /**\n   * Initializes replay.\n   */\n  protected _initialize(client: Client): void {\n    if (!this._replay) {\n      return;\n    }\n\n    this._maybeLoadFromReplayCanvasIntegration(client);\n    this._replay.initializeSampling();\n  }\n\n  /** Setup the integration. */\n  private _setup(client: Client): void {\n    // Client is not available in constructor, so we need to wait until setupOnce\n    const finalOptions = loadReplayOptionsFromClient(this._initialOptions, client);\n\n    this._replay = new ReplayContainer({\n      options: finalOptions,\n      recordingOptions: this._recordingOptions,\n    });\n  }\n\n  /** Get canvas options from ReplayCanvas integration, if it is also added. */\n  private _maybeLoadFromReplayCanvasIntegration(client: Client): void {\n    // To save bundle size, we skip checking for stuff here\n    // and instead just try-catch everything - as generally this should all be defined\n    /* eslint-disable @typescript-eslint/no-non-null-assertion */\n    try {\n      const canvasIntegration = client.getIntegrationByName('ReplayCanvas') as Integration & {\n        getOptions(): ReplayCanvasIntegrationOptions;\n      };\n      if (!canvasIntegration) {\n        return;\n      }\n\n      this._replay!['_canvas'] = canvasIntegration.getOptions();\n    } catch {\n      // ignore errors here\n    }\n    /* eslint-enable @typescript-eslint/no-non-null-assertion */\n  }\n}\n\n/** Parse Replay-related options from SDK options */\nfunction loadReplayOptionsFromClient(initialOptions: InitialReplayPluginOptions, client: Client): ReplayPluginOptions {\n  const opt = client.getOptions() as BrowserClientReplayOptions;\n\n  const finalOptions: ReplayPluginOptions = {\n    sessionSampleRate: 0,\n    errorSampleRate: 0,\n    ...dropUndefinedKeys(initialOptions),\n  };\n\n  const replaysSessionSampleRate = parseSampleRate(opt.replaysSessionSampleRate);\n  const replaysOnErrorSampleRate = parseSampleRate(opt.replaysOnErrorSampleRate);\n\n  if (replaysSessionSampleRate == null && replaysOnErrorSampleRate == null) {\n    consoleSandbox(() => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Replay is disabled because neither `replaysSessionSampleRate` nor `replaysOnErrorSampleRate` are set.',\n      );\n    });\n  }\n\n  if (replaysSessionSampleRate != null) {\n    finalOptions.sessionSampleRate = replaysSessionSampleRate;\n  }\n\n  if (replaysOnErrorSampleRate != null) {\n    finalOptions.errorSampleRate = replaysOnErrorSampleRate;\n  }\n\n  return finalOptions;\n}\n\nfunction _getMergedNetworkHeaders(headers: string[]): string[] {\n  return [...DEFAULT_NETWORK_HEADERS, ...headers.map(header => header.toLowerCase())];\n}\n","import { getClient } from '@sentry/core';\nimport type { replayIntegration } from '../integration';\n\n/**\n * This is a small utility to get a type-safe instance of the Replay integration.\n */\nexport function getReplay(): ReturnType<typeof replayIntegration> | undefined {\n  const client = getClient();\n  return client?.getIntegrationByName<ReturnType<typeof replayIntegration>>('Replay');\n}\n"],"names":["GLOBAL_OBJ","NodeType","isElement","cachedImplementations","getImplementation","setTimeout","clearTimeout","throttle","normalize","fill","htmlTreeAsString","browserPerformanceTimeOrigin","addPerformanceInstrumentationHandler","addLcpInstrumentationHandler","addClsInstrumentationHandler","addFidInstrumentationHandler","addInpInstrumentationHandler","addBreadcrumb","coreLogger","severityLevelFromString","captureException","getWorkerURL","uuid4","getClient","getLocationHref","getCurrentScope","getActiveSpan","getDynamicSamplingContextFromSpan","isSentryRequestUrl","serializeFormData","dropUndefinedKeys","stringMatchesSomePattern","getFetchRequestArgBody","getBodyString","SENTRY_XHR_DATA_KEY","addClickKeypressInstrumentationHandler","addHistoryInstrumentationHandler","addEventProcessor","createEnvelope","createEventEnvelopeHeaders","getSdkMetadataForEnvelopeHeader","prepareEvent","getIsolationScope","resolvedSyncPromise","updateRateLimits","isRateLimited","setContext","getRootSpan","spanToJSON","SEMANTIC_ATTRIBUTE_SENTRY_SOURCE","isBrowser","parseSampleRate","consoleSandbox"],"mappings":"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","x_google_ignoreList":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,22]}